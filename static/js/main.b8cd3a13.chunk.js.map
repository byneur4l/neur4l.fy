{"version":3,"sources":["images/friendsActivityProfile/capuchin-monkey-1.webp","images/friendsActivityProfile/capuchin-monkey-2.webp","images/friendsActivityProfile/catto-fisherhat.jpg","images/friendsActivityProfile/chonky-grey-cat.png","images/friendsActivityProfile/couple-photo.jpeg","images/friendsActivityProfile/cryptopunk-blue.jpg","images/friendsActivityProfile/fat-cat.webp","images/friendsActivityProfile/neurxl.jpg","images/friendsActivityProfile/french-eiffel-tower.jpg","images/friendsActivityProfile/french-visa-1920x1080.jpg","images/friendsActivityProfile/girl-picture.jpg","images/friendsActivityProfile/nft-cigarette.webp","images/friendsActivityProfile/nft-bieber.jpg","data/friendsActivity/friendsData.js","images/friendsActivityProfile/person-in-trip.jpeg","images/friendsActivityProfile/person-cartrip-2.jpg","images/friendsActivityProfile/pug-happy-3.webp","images/friendsActivityProfile/pug-happy.jpg","images/friendsActivityProfile/pug-profile-happy.jpg","images/friendsActivityProfile/sunshie.jpeg","images/friendsActivityProfile/vacation.png","components/Input.js","components/FriendActivityDefault.js","actions/index.js","thunk/fetchAlbumInRedux.js","thunk/fetchMusicsInRedux.js","reducers/musicsToPlayer.js","reducers/responseMusics.js","reducers/searchAlbum.js","reducers/index.js","store/index.js","thunk/fetchSongWithoutRedirect.js","helpers/artist-music-global/index.js","components/LinkMusicName.js","components/LinkArtistName.js","helpers/shuffle/shuffler.js","components/FriendsActivitySidebar.js","services/userAPI.js","images/spotifyLogoHeader.png","images/navLinks/magGlass.png","images/navLinks/user.png","components/TopsideHeader.js","services/favoriteSongsAPI.js","components/FavSideList.js","components/LoadingHeader.js","services/localStorage.js","components/player/albumImage/AlbumSideImage.jsx","components/Header.js","helpers/backward-forward-player/bckOrForwardSong.js","helpers/songTime.js","components/player/center/BackAndForwardButton.jsx","components/player/center/ShuffleAndRepeatButton.jsx","helpers/favorites/isFavoriteSong.js","helpers/favorites/toggleFavorite.js","components/player/leftside/PlayerArtistInfo.jsx","components/buttons/DocButton.jsx","components/buttons/GithubButton.jsx","components/buttons/LinkedinButton.jsx","components/FooterText.jsx","components/player/rightside/PlayerRightside.jsx","components/PlayerBottomSide.js","components/Loading.js","components/ConditionFilterTitle.js","components/ConditionFilterTime.js","components/ConditionClockRender.js","components/FilterRow.js","helpers/play-pause-inside-album-or-fav/player.js","components/ButtonPlay.js","helpers/dataStructure/newTrackStructure.js","helpers/dataStructure/playedSongsStruct.js","components/MusicMap.js","components/MusicCard.js","services/musicsAPI.js","components/AlbumHeaderDetails.js","components/PageController.js","components/ProfileHeader.js","components/InputSearch.js","components/TopsideBar.js","components/ColorExtracted.js","components/AlbumHeader.js","pages/Album.js","pages/Favorites.js","images/spotify-logo-login-color.svg","components/LoadingLogin.js","pages/Login.js","pages/NotFound.js","pages/Profile.js","pages/ProfileEdit.js","services/searchAlbumsAPI.js","components/ContentMap.js","components/ContentResult.js","pages/Search.js","App.js","index.js"],"names":["electro","musicData","image","neurxl","username","musicName","artistName","collectionId","playlist","nftBieber","cattoFisherhat","capuchinMonkey1","capuchinMonkey2","chonkyGreyCat","couplePhoto","cryptopunkBlue","frenchVisa","eiffelTower","chonkyOrangeCat","nftCigarette","girlPic","Input","id","this","props","htmlFor","Component","defaultProps","FriendActivityDefault","className","icon","faUser","type","value","SEARCH_ALBUM","INPUT_SEARCH","ENABLE_RENDER_AFTER_CLICK_ON_LINK","SORT_MUSIC","RESPONSE_MUSICS","SAVE_FAVORITE_MUSICS","SORT_FAV_MUSICS","SAVE_ALBUM_NAME","SET_MUSIC_PLAYER","PLAYED_SONG","inputSearchAct","inputValue","searchAlbumAct","response","saveAlbumNameAct","albumName","enableRenderAlbumAct","boolStringfied","responseMusicsAct","musics","saveFavoriteMusicsAct","favorites","setMusicsToPlayerAct","arrMusics","setSongPlayedAct","playedObj","fetchAlbumInRedux","artistNameURL","dispatch","a","url","fetch","request","json","results","fetchMusicsInRedux","slice","initialState","songs","played","status","name","musicsToPlayer","state","action","albumCollection","tracks","sortedTracks","favoritesToSidebar","responseMusics","sorted","sortedFav","inputSearch","render","searchAlbum","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","fetchSongWithoutRedirect","getState","handleMusicNameClick","handleArtistNameClick","enableRender","bool","handlePlayInFriend","findFriendSong","find","sng","trackName","dataToSet","previewUrl","LinkMusicName","linkClassName","paragraphClassName","paragraph","to","onClick","LinkArtistName","shuffler","arr","totalItems","length","newOrder","i","push","sort","Math","random","FriendsActivitySidebar","hasFriendActivity","renderFriends","friendActivityAnimation","friendsIntervalID","dataShuffled","friendDataNewOrder","musicDataClone","orderToShowFriends","map","_frnd","setInterval","setState","setTimeout","_nextProps","clearInterval","faUserPlus","friend","conditionForPlayAndPause","src","alt","document","querySelector","pause","handlePauseInFriend","connect","USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","callback","getUser","Promise","resolve","parse","getItem","createUser","email","description","TopsideHeader","favoriteHeader","userToFavorites","currentYear","Date","getFullYear","albumFake","userImage","favoriteTitle","collectionName","artworkUrl100","releaseDate","toString","SpotifyLogoHeader","magGlass","width","userImg","style","backgroundColor","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","FavSideList","fetchFavoriteSongs","saveFavoriteMusics","stopSong","pauseSongGlobal","setPlayedSong","saveUrl","saveUrlAct","obj","LoadingHeader","INITIAL_OBJ","saveInStorage","key","getInStorage","data","dataCondition","undefined","lastSongCondition","lastPlaylistCondition","AlbumSideImage","useSelector","globalState","lastSong","lastPlaylist","replace","Header","isLoading","catchUser","bind","forceReloadVerifier","forceReload","handleReload","prevState","reload","bckOrForwardSong","isBackwardButton","dataToBackOrForward","songsGlobal","setPlayedSongs","LAST","firstSong","firstSongCondition","crrTime","songPosition","findIndex","nextSong","idFirstSongg","idLastSong","whenIsBetween1stLast","prevSong","THOUSAND","convertMillsToMin","ms","minutes","trunc","convertMillsToSeconds","seconds","secondsHouse","round","join","totalAlbumTime","hoursHouse","reduce","acc","trackTimeMillis","hours","minutesHouse","toFixed","split","minutesToNum","BackAndForwardButton","backward","forward","propTypes","PropTypes","oneOfType","object","func","array","string","isRequired","ShuffleAndRepeatButton","setPlaylistSong","useState","isShfflClicked","setIsShfflClicked","isRptClicked","setIsRptClicked","songsDefault","setSongsDefault","songsShuffledLocal","setSongsShuffledLocal","useEffect","shuffle","songsClone","myShuffleOrder","songsShuffledToGlobal","_","shuffleSongs","repeat","isFavoriteSong","favoritesArr","some","toggleFavorite","toToggle","setFavorite","rmvFav","attFavorites","PlayerArtistInfo","hidden","faHeart","DocButton","href","target","rel","GithubButton","LinkedinButton","FooterText","classNameFoot","PlayerRightside","crrVolume","setCrrVolume","volBeforeMute","setVolBeforeMute","volumeBar","useRef","setVolumeStyle","current","setProperty","volume","max","setVolumeSong","volState","volumeChange","volumeToSave","SOUNDWAVE","volumeVerifier","defaultValue","ref","onChange","PlayerBottomSide","useDispatch","useCallback","objInsidePlayed","playlistToSongs","setCrrTime","audioPlayer","progressBar","animationRef","audioPlayerEnded","ended","changePlayerCurrentTime","whilePlaying","currentTime","requestAnimationFrame","play","favArray","kind","cancelAnimationFrame","trackDuration","Loading","ConditionFilterTitle","filterTitle","faSortDown","faSortUp","ConditionFilterTime","filterTime","ConditionClockRender","path","pathFavorites","sortMusicByTime","tabIndex","faClock","pathAlbumId","FilterRow","favoritesClone","tracksClone","filterAlbum","saveTracksToReset","resetFilter","match","sortMusic","sortFavoriteMusic","sortMusicAlphOrderAndReverse","sortTracksAlpha","b","localeCompare","sortTracksDesc","sortMusicByAlbum","sortMusicAct","withRouter","playAudio","currentTarget","attributes","querySelectorAll","forEach","player","paused","ButtonPlay","handlePlayIcon","handlePauseIcon","songGlobStatus","e","newTrackStructure","musicsGlobalState","setMusicPlayer","every","includes","musicTracksToGlobal","trk","playedSongsStruct","trackData","songUrl","trackFilter2","trackFilter","MusicMap","prevPlayed","handleFavorites","handleArtistNameLink","_prevProps","playedGlobal","handleCheck","favoritesPath","artist","artworkUrl60","trackNumber","role","classToFind","addClass","classList","add","remove","placeSelectedClass","checked","MusicCard","getMusics","requestJson","AlbumHeaderDetails","albumYear","year","sideInfoTracks","albumTime","albumTrackTime","inputSearchGlobal","pathname","location","PageController","albumOrFavPathVerifier","history","albumPath","window","previousPageButton","goBack","nextPageButton","goForward","onKeyUp","faAngleLeft","faAngleRight","ProfileHeader","InputSearch","activateBlur","preventDefault","keyCode","blur","handleClick","handleChange","onSubmit","placeholder","autoComplete","searchAlbumGlobal","TopsideBar","ColorExtracted","getColors","rgb","AlbumHeader","colors","gradientColorHandler","Album","handleLoad","fetchMusic","album","albumTracks","checkedAndFavorite","isHeaderLoading","saveResponseMusics","saveAlbumName","music","idFavoriteSongs","filterChecked","params","search","id2","musicId","backgroundImage","Favorites","getFavoriteAndRemoveFromList","LoadingLogin","Login","handleChanges","handleEffects","inputLogin","inputPassword","isSubmitBttIsDisabled","authorized","lengthLogin","lengthPassword","newLoginVerification","SpotifyLogo","disabled","NotFound","Profile","userLoad","fetchUser","ProfileEdit","newUserInfo","infoToUpdate","destructureUser","destructureInfo","buttonVerifier","updatedUser","redirect","update","result","boolButton","Object","values","item","isButtonDisabled","required","maxLength","searchAlbumsAPI","encodeURI","replaceAll","getAlbumsAPI","APIResponse","artistId","collectionPrice","trackCount","ContentMap","contentToMap","ContentResult","searchedMain","searchResult","Search","searchedTest","App","basename","exact","component","React","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b8cd3a13.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/capuchin-monkey-1.e5e9c9f6.webp\";","export default __webpack_public_path__ + \"static/media/capuchin-monkey-2.cc86a2b1.webp\";","export default __webpack_public_path__ + \"static/media/catto-fisherhat.a1f39509.jpg\";","export default __webpack_public_path__ + \"static/media/chonky-grey-cat.dd761a0e.png\";","export default __webpack_public_path__ + \"static/media/couple-photo.7a1f1594.jpeg\";","export default __webpack_public_path__ + \"static/media/cryptopunk-blue.0ff578bf.jpg\";","export default __webpack_public_path__ + \"static/media/fat-cat.8fa38937.webp\";","export default __webpack_public_path__ + \"static/media/neurxl.8d13ce06.jpg\";","export default __webpack_public_path__ + \"static/media/french-eiffel-tower.a3cb1783.jpg\";","export default __webpack_public_path__ + \"static/media/french-visa-1920x1080.4875525e.jpg\";","export default __webpack_public_path__ + \"static/media/girl-picture.f0075871.jpg\";","export default __webpack_public_path__ + \"static/media/nft-cigarette.4af0ba25.webp\";","export default __webpack_public_path__ + \"static/media/nft-bieber.368f2935.jpg\";","// Images imports\nimport capuchinMonkey1 from '../../images/friendsActivityProfile/capuchin-monkey-1.webp';\nimport capuchinMonkey2 from '../../images/friendsActivityProfile/capuchin-monkey-2.webp';\nimport cattoFisherhat from '../../images/friendsActivityProfile/catto-fisherhat.jpg';\nimport chonkyGreyCat from '../../images/friendsActivityProfile/chonky-grey-cat.png';\nimport couplePhoto from '../../images/friendsActivityProfile/couple-photo.jpeg';\nimport cryptopunkBlue from '../../images/friendsActivityProfile/cryptopunk-blue.jpg';\nimport chonkyOrangeCat from '../../images/friendsActivityProfile/fat-cat.webp';\nimport neurxl from '../../images/friendsActivityProfile/neurxl.jpg';\nimport eiffelTower from '../../images/friendsActivityProfile/french-eiffel-tower.jpg';\nimport frenchVisa from '../../images/friendsActivityProfile/french-visa-1920x1080.jpg';\nimport girlPic from '../../images/friendsActivityProfile/girl-picture.jpg';\nimport nftCigarette from '../../images/friendsActivityProfile/nft-cigarette.webp';\nimport nftBieber from '../../images/friendsActivityProfile/nft-bieber.jpg';\nimport personInACarTrip from '../../images/friendsActivityProfile/person-in-trip.jpeg';\nimport personInACarTrip2 from '../../images/friendsActivityProfile/person-cartrip-2.jpg';\nimport pugHappy from '../../images/friendsActivityProfile/pug-happy-3.webp';\nimport pugLyingDownHappy from '../../images/friendsActivityProfile/pug-happy.jpg';\nimport pugSeatedHappy from '../../images/friendsActivityProfile/pug-profile-happy.jpg';\nimport sunshine from '../../images/friendsActivityProfile/sunshie.jpeg';\nimport vacation from '../../images/friendsActivityProfile/vacation.png';\n\nexport const idAlbumData = [\n  { 1440642493: 'Take Care (Deluxe Version)' },\n  { 1451901307: 'Graduation' },\n  { 1578986656: 'Cold Heart (PNAU Remix) - Single' },\n  { 395711243: 'Mozart - 100 Supreme Classical Masterpieces: Rise of the Masters' },\n  { 1440841363: 'Views' },\n  { 1423284802: 'Cross Road' },\n  { 273714443: 'Toxicity' },\n  { 1440783617: 'Nevermind' },\n  { 1442845496: 'Construção' },\n  { 1421241217: 'ASTROWORLD' },\n  { 1462912754: 'My Girl - Single' },\n  { 1346689058: 'Wild Kidz - Single' },\n  { 1440763429: 'Greatest Hits' },\n  { 203880450: 'The Best of Depeche Mode, Vol. 1 (Deluxe Version)' },\n  { 824700396: 'The Devil\\'s Walk' },\n  { 266222258: 'A Flock of Seagulls' },\n  { 933067562: 'Dancin (feat. Luvli) [Krono Remix] - Single' },\n  { 574043989: 'Highway to Hell' },\n  { 902620286: 'Led Zeppelin IV (Deluxe Edition)' },\n  { 1440650816: 'A Night at the Opera (Deluxe Edition)' },\n];\n\nconst electro = 'how to feel better';\n\nexport const musicData = [\n  {\n    image: neurxl,\n    username: 'Lucca Baker',\n    musicName: 'Over My Dead Body',\n    artistName: 'Drake',\n    collectionId: 1440642493,\n    playlist: 'new day, new way',\n  },\n  {\n    image: personInACarTrip,\n    username: 'Viktoria Martin',\n    musicName: 'Stronger',\n    artistName: 'Kanye West',\n    collectionId: 1451901307,\n    playlist: 'Ascension to Heaven',\n  },\n  {\n    image: nftBieber,\n    username: 'Stephan Ferguson',\n    musicName: 'Cold Heart',\n    artistName: 'Elton John & Dua Lipa',\n    collectionId: 1578986656,\n    playlist: electro,\n  },\n  {\n    image: cattoFisherhat,\n    username: 'John Antony',\n    musicName: 'Serenade No. 13 in G Major, K. 525, \"Eine Kleine Nachtmusik\": I. Allegro',\n    artistName: 'Drottningholm Baroque Ensemble',\n    collectionId: 395711243,\n    playlist: 'Classic Greatest Hits',\n  },\n  {\n    image: capuchinMonkey1,\n    username: 'Julio Freeman',\n    musicName: 'Hotline Bling',\n    artistName: 'Drake',\n    collectionId: 1440841363,\n    playlist: 'Não olhe pra trás',\n  },\n  {\n    image: capuchinMonkey2,\n    username: 'Lucian Freeman',\n    musicName: 'Livin\\' On a Prayer',\n    artistName: 'Bon Jovi',\n    collectionId: 1423284802,\n    playlist: 'Relax Station',\n  },\n  {\n    image: chonkyGreyCat,\n    username: 'Matthew Gordon',\n    musicName: 'Toxicity',\n    artistName: 'System of A Down',\n    collectionId: 273714443,\n    playlist: 'Best of Rock: 2002',\n  },\n  {\n    image: couplePhoto,\n    username: 'Artur Powell',\n    musicName: 'Smells Like Teen Spirit',\n    artistName: 'Nirvana',\n    collectionId: 1440783617,\n    playlist: 'Discover Weekly',\n  },\n  {\n    image: cryptopunkBlue,\n    username: 'Raphael Larson',\n    musicName: 'Cotidiano',\n    artistName: 'Chico Buarque',\n    collectionId: 1442845496,\n    playlist: 'This Is Chico Buarque',\n  },\n  {\n    image: frenchVisa,\n    username: 'Matthew Baker',\n    musicName: 'SICKO MODE',\n    artistName: 'Travis Scott',\n    collectionId: 1421241217,\n    playlist: 'ASTROWORLD',\n  },\n  {\n    image: eiffelTower,\n    username: 'Anthony',\n    musicName: 'My Girl',\n    artistName: 'Vintage Culture & Ricci',\n    collectionId: 1462912754,\n    playlist: electro,\n  },\n  {\n    image: chonkyOrangeCat,\n    username: 'Giorgia Campbell',\n    musicName: 'Wild Kidz',\n    artistName: 'Vintage Culture & Fancy Inc',\n    collectionId: 1346689058,\n    playlist: electro,\n  },\n  {\n    image: nftCigarette,\n    username: 'Tales Scott',\n    musicName: 'Hit \\'Em Up (feat. Outlawz)',\n    artistName: 'Tupac Shakur',\n    collectionId: 1440763429,\n    playlist: 'back to Compton',\n  },\n  {\n    image: girlPic,\n    username: 'Beatrice Franklin',\n    musicName: 'Enjoy the Silence',\n    artistName: 'Depeche Mode',\n    collectionId: 203880450,\n    playlist: 'new day, new way',\n  },\n  {\n    image: personInACarTrip2,\n    username: 'Beatrice Rogers',\n    musicName: 'Goodbye (with Soap & Skin)',\n    artistName: 'Apparat',\n    collectionId: 824700396,\n    playlist: 'Dark(Theme Song) - Goobye - Netflix Original',\n  },\n  {\n    image: pugHappy,\n    username: 'James Carian',\n    musicName: 'I Ran (So Far Away)',\n    artistName: 'A Flock of Seagulls',\n    collectionId: 266222258,\n    playlist: 'Today\\'s Top Hits',\n  },\n  {\n    image: pugLyingDownHappy,\n    username: 'Gaius Campbell',\n    musicName: 'Dancin (feat. Luvli)',\n    artistName: 'Aaron Smith',\n    collectionId: 933067562,\n    playlist: electro,\n  },\n  {\n    image: pugSeatedHappy,\n    username: 'Peter Scott',\n    musicName: 'Highway to Hell',\n    artistName: 'AC/DC',\n    collectionId: 574043989,\n    playlist: 'Ascension to Heaven',\n  },\n  {\n    image: sunshine,\n    username: 'Carl Murphy',\n    musicName: 'Stairway to Heaven',\n    artistName: 'Led Zeppelin',\n    collectionId: 902620286,\n    playlist: 'This is Led Zeppelin',\n  },\n  {\n    image: vacation,\n    username: 'Alan Patterson',\n    musicName: 'Bohemian Rhapsody',\n    artistName: 'Queen',\n    collectionId: 1440650816,\n    playlist: 'Queen\\'s Greatest Hits 1970-2011',\n  },\n];\n","export default __webpack_public_path__ + \"static/media/person-in-trip.ee7a9c2a.jpeg\";","export default __webpack_public_path__ + \"static/media/person-cartrip-2.7c143163.jpg\";","export default __webpack_public_path__ + \"static/media/pug-happy-3.8d913bdf.webp\";","export default __webpack_public_path__ + \"static/media/pug-happy.474a5ecc.jpg\";","export default __webpack_public_path__ + \"static/media/pug-profile-happy.0779a464.jpg\";","export default __webpack_public_path__ + \"static/media/sunshie.ca56502b.jpeg\";","export default __webpack_public_path__ + \"static/media/vacation.4a9f0e75.png\";","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nclass Input extends Component {\n  render() {\n    const {\n      id,\n    } = this.props;\n\n    return (\n      <label htmlFor={ id }>\n        <input\n          { ...this.props }\n        />\n      </label>\n    );\n  }\n}\n\nInput.defaultProps = {\n  id: 'nomeQualquer',\n};\n\nInput.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default Input;\n","import { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport Input from './Input';\n\nexport default class FriendActivityDefault extends Component {\n  render() {\n    return (\n      <div className=\"noHover\">\n        <div className=\"subtitle\">\n          <p>Let friends and followers on Spotify</p>\n          <p>see what you&apos;re listening to.</p>\n        </div>\n\n        <div className=\"activities-container\">\n          <div className=\"friend-activity-default\">\n            <div className=\"friend-profile-picture\">\n              <FontAwesomeIcon icon={ faUser } />\n            </div>\n            <div>\n              <p className=\"friend-name friend-no-activity-nm\" />\n              <p className=\"friend-music-name friend-no-activity-am\" />\n              <p className=\"friend-artist-name friend-no-activity-am\" />\n            </div>\n\n          </div>\n\n          <div className=\"friend-activity-default\">\n            <div className=\"friend-profile-picture\">\n              <FontAwesomeIcon icon={ faUser } />\n            </div>\n            <div>\n              <p className=\"friend-name friend-no-activity-nm\" />\n              <p className=\"friend-music-name friend-no-activity-am\" />\n              <p className=\"friend-artist-name friend-no-activity-am\" />\n            </div>\n          </div>\n\n          <div className=\"friend-activity-default\">\n            <div className=\"friend-profile-picture\">\n              <FontAwesomeIcon\n                icon={ faUser }\n                className=\"fa-profile-no-activity\"\n              />\n            </div>\n            <div>\n              <p className=\"friend-name friend-no-activity-nm\" />\n              <p className=\"friend-music-name friend-no-activity-am\" />\n              <p className=\"friend-artist-name friend-no-activity-am\" />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"subtitle\">\n          <p>Go to Seetings &gt; Social and enable</p>\n          <p>&apos;Share my listening activity on</p>\n          <p>Spotify.&apos; You can turn this off at any</p>\n          <p>time.</p>\n        </div>\n\n        <div className=\"divButtonSettings\">\n          <Input\n            type=\"button\"\n            value=\"S E T T I N G S\"\n            className=\"buttonSettings\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","export const SEARCH_ALBUM = 'SEARCH_ALBUM';\nexport const INPUT_SEARCH = 'INPUT_SEARCH';\nexport const ENABLE_RENDER_AFTER_CLICK_ON_LINK = 'ENABLE_RENDER_AFTER_CLICK_ON_LINK';\nexport const SORT_MUSIC = 'SORT_MUSIC';\nexport const RESPONSE_MUSICS = 'RESPONSE_MUSICS';\nexport const SAVE_FAVORITE_MUSICS = 'SAVE_FAVORITE_MUSICS';\nexport const SORT_FAV_MUSICS = 'SORT_FAV_MUSICS';\nexport const SAVE_URL = 'SAVE_URL';\nexport const SAVE_ALBUM_NAME = 'SAVE_ALBUM_NAME';\nexport const FAVORITES_SAVE = 'FAVORITES_SAVE';\nexport const SET_MUSIC_PLAYER = 'SET_MUSIC_PLAYER';\nexport const PLAYED_SONG = 'PLAYED_SONG';\n\nexport const inputSearchAct = (inputValue) => ({\n  type: INPUT_SEARCH,\n  inputValue,\n});\n\nexport const searchAlbumAct = (response) => ({\n  type: SEARCH_ALBUM,\n  response,\n});\n\nexport const saveAlbumNameAct = (albumName) => ({\n  type: SAVE_ALBUM_NAME,\n  albumName,\n});\n\nexport const enableRenderAlbumAct = (boolStringfied) => ({\n  type: ENABLE_RENDER_AFTER_CLICK_ON_LINK,\n  boolStringfied,\n});\n\nexport const responseMusicsAct = (musics) => ({\n  type: RESPONSE_MUSICS,\n  musics,\n});\n\nexport const saveFavoriteMusicsAct = (favorites) => ({\n  type: SAVE_FAVORITE_MUSICS,\n  favorites,\n});\n\nexport const sortFavoriteMusicsAct = (sortedFav) => ({\n  type: SORT_FAV_MUSICS,\n  sortedFav,\n});\n\nexport const sortMusicAct = (sorted) => ({\n  type: SORT_MUSIC,\n  sorted,\n});\n\nexport const saveUrlAct = (url) => ({\n  type: SAVE_URL,\n  url,\n});\n\nexport const getUserToFavoritesAct = (saveFav) => ({\n  type: FAVORITES_SAVE,\n  saveFav,\n});\n\nexport const setMusicsToPlayerAct = (arrMusics) => ({\n  type: SET_MUSIC_PLAYER,\n  arrMusics,\n});\n\nexport const setSongPlayedAct = (playedObj) => ({\n  type: PLAYED_SONG,\n  playedObj,\n});\n","import { searchAlbumAct } from '../actions';\n\nconst fetchAlbumInRedux = (artistNameURL) => async (dispatch) => {\n  const url = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  try {\n    const request = await fetch(url);\n    const { results } = await request.json();\n    dispatch(searchAlbumAct(results));\n  } catch (error) {\n    dispatch(searchAlbumAct(error));\n  }\n};\n\nexport default fetchAlbumInRedux;\n","import { responseMusicsAct, saveAlbumNameAct } from '../actions';\n\nconst fetchMusicsInRedux = (id) => async (dispatch) => {\n  const url = `https://itunes.apple.com/lookup?id=${id}&entity=song`;\n\n  try {\n    const request = await fetch(url);\n    const { results } = await request.json();\n    dispatch(saveAlbumNameAct(results[0]));\n    dispatch(responseMusicsAct(results.slice(1)));\n  } catch (error) {\n    dispatch(responseMusicsAct(error));\n  }\n};\n\nexport default fetchMusicsInRedux;\n","import { SET_MUSIC_PLAYER, PLAYED_SONG } from '../actions';\n\nconst initialState = {\n  songs: [],\n  played: {\n    status: false,\n    name: '',\n  },\n};\n\nconst musicsToPlayer = (state = initialState, action) => {\n  switch (action.type) {\n  case SET_MUSIC_PLAYER:\n    return {\n      ...state,\n      songs: action.arrMusics,\n    };\n\n  case PLAYED_SONG:\n    return {\n      ...state,\n      played: action.playedObj,\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport default musicsToPlayer;\n","import {\n  RESPONSE_MUSICS,\n  SAVE_ALBUM_NAME,\n  SAVE_FAVORITE_MUSICS,\n  SORT_FAV_MUSICS,\n  SORT_MUSIC,\n} from '../actions';\n\nconst initialState = {\n  albumCollection: {},\n  tracks: [],\n  sortedTracks: [],\n  favorites: [],\n  favoritesToSidebar: [],\n};\n\nconst responseMusics = (state = initialState, action) => {\n  switch (action.type) {\n  case SAVE_ALBUM_NAME:\n    return {\n      ...state,\n      albumCollection: action.albumName,\n    };\n\n  case RESPONSE_MUSICS:\n    return {\n      ...state,\n      tracks: action.musics,\n    };\n\n  case SORT_MUSIC:\n    return {\n      ...state,\n      tracks: action.sorted,\n    };\n\n  case SAVE_FAVORITE_MUSICS:\n    return {\n      ...state,\n      favorites: action.favorites,\n      favoritesToSidebar: action.favorites,\n    };\n\n  case SORT_FAV_MUSICS:\n    return {\n      ...state,\n      favorites: action.sortedFav,\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport default responseMusics;\n","import {\n  ENABLE_RENDER_AFTER_CLICK_ON_LINK,\n  INPUT_SEARCH,\n  SEARCH_ALBUM,\n} from '../actions';\n\nconst initialState = {\n  inputSearch: '',\n  results: [],\n  render: false,\n};\n\nconst searchAlbum = (state = initialState, action) => {\n  switch (action.type) {\n  case SEARCH_ALBUM:\n    return {\n      ...state,\n      results: action.response,\n      render: false,\n    };\n\n  case INPUT_SEARCH:\n    return {\n      ...state,\n      inputSearch: action.inputValue,\n    };\n\n  case ENABLE_RENDER_AFTER_CLICK_ON_LINK:\n    return {\n      ...state,\n      render: action.boolStringfied,\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport default searchAlbum;\n","import { combineReducers } from 'redux';\nimport musicsToPlayer from './musicsToPlayer';\nimport responseMusics from './responseMusics';\nimport searchAlbum from './searchAlbum';\n\nconst rootReducer = combineReducers({\n  searchAlbum,\n  responseMusics,\n  musicsToPlayer,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","const fetchSongWithoutRedirect = async (id) => {\n  const url = `https://itunes.apple.com/lookup?id=${id}&entity=song`;\n\n  try {\n    const request = await fetch(url);\n    const { results } = await request.json();\n    return results.slice(1);\n  } catch (error) {\n    return error;\n  }\n};\n\nexport default fetchSongWithoutRedirect;\n","import { enableRenderAlbumAct, inputSearchAct, setMusicsToPlayerAct,\n  setSongPlayedAct } from '../../actions';\nimport fetchAlbumInRedux from '../../thunk/fetchAlbumInRedux';\nimport fetchMusicsInRedux from '../../thunk/fetchMusicsInRedux';\nimport store from '../../store/index';\nimport fetchSongWithoutRedirect from '../../thunk/fetchSongWithoutRedirect';\n\nconst { dispatch, getState } = store;\n\nexport const handleMusicNameClick = async (artistName, collectionId) => {\n  await dispatch(fetchAlbumInRedux(artistName));\n  dispatch(fetchMusicsInRedux(collectionId));\n  dispatch(inputSearchAct(artistName));\n};\n\nexport const handleArtistNameClick = async (artistName) => {\n  await dispatch(fetchAlbumInRedux(artistName));\n  dispatch(inputSearchAct(artistName));\n  dispatch(enableRenderAlbumAct(true));\n};\n\nexport const resetSearch = async () => {\n  await dispatch(inputSearchAct(''));\n  dispatch(fetchAlbumInRedux([]));\n};\n\nexport const enableRender = async (bool) => {\n  await dispatch(enableRenderAlbumAct(bool));\n};\n\nexport const handlePlayInFriend = async (collectionId, musicName) => {\n  const response = await fetchSongWithoutRedirect(collectionId); // is an array of objects\n\n  const findFriendSong = response.find((sng) => sng.trackName === musicName); // need to refactor my friends data to catch trackId...\n  if (findFriendSong) {\n    const dataToSet = {\n      ...findFriendSong,\n      status: true,\n      name: findFriendSong.previewUrl };\n\n    dispatch(setSongPlayedAct(dataToSet));\n  }\n\n  if (response[0]) { // when its not fail in request set to global\n    dispatch(setMusicsToPlayerAct(response)); // set musics in global to work the next and prev player buttons\n  }\n};\n\nexport const handlePauseInFriend = () => {\n  const global = getState();\n  const { musicsToPlayer: { played } } = global;\n  const audio = document.querySelector('audio');\n  audio.pause();\n\n  const dataToSet = { ...played, status: false };\n  dispatch(setSongPlayedAct(dataToSet));\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { handleMusicNameClick } from '../helpers/artist-music-global';\n\nclass LinkMusicName extends Component {\n  render() {\n    const { linkClassName, paragraphClassName, collectionId, artistName,\n      paragraph: trackName } = this.props;\n\n    return (\n      <Link\n        to={ `/album/${collectionId}` }\n        className={ linkClassName }\n        onClick={ () => handleMusicNameClick(artistName, collectionId) }\n      >\n        <p\n          className={ paragraphClassName }\n        >\n          {trackName}\n\n        </p>\n      </Link>\n    );\n  }\n}\n\nLinkMusicName.propTypes = {\n  artistName: PropTypes.string,\n  collectionId: PropTypes.number,\n  handleMusicNameClick: PropTypes.func,\n  paragraph: PropTypes.string,\n}.isRequired;\n\nexport default LinkMusicName;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { handleArtistNameClick } from '../helpers/artist-music-global';\n\nclass LinkArtistName extends Component {\n  render() {\n    const { linkClassName, paragraphClassName, paragraph: artistName } = this.props;\n\n    return (\n      <Link\n        to=\"/search\"\n        onClick={ () => handleArtistNameClick(artistName) }\n        className={ linkClassName }\n      >\n        <p\n          className={ paragraphClassName }\n        >\n          {artistName}\n        </p>\n      </Link>\n    );\n  }\n}\n\nLinkArtistName.propTypes = {\n  handleArtistNameClick: PropTypes.func,\n  paragraph: PropTypes.string,\n}.isRequired;\n\nexport default LinkArtistName;\n","const shuffler = (arr) => {\n  const totalItems = arr.length;\n\n  const newOrder = [];\n  for (let i = 0; i < totalItems; i += 1) { newOrder.push(i); }\n\n  const ZERO_DOT_FIVE = 0.5;\n  const shuffled = [...newOrder].sort(() => Math.random() - ZERO_DOT_FIVE);\n\n  return shuffled;\n};\n\nexport default shuffler;\n","import PropTypes from 'prop-types';\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { IoPlaySharp } from 'react-icons/io5';\nimport { GiPauseButton } from 'react-icons/gi';\nimport { musicData } from '../data/friendsActivity/friendsData';\nimport '../styles/friendsActivity.css';\nimport FriendActivityDefault from './FriendActivityDefault';\nimport LinkMusicName from './LinkMusicName';\nimport LinkArtistName from './LinkArtistName';\nimport { handlePauseInFriend, handlePlayInFriend } from '../helpers/artist-music-global';\nimport shuffler from '../helpers/shuffle/shuffler';\n\nclass FriendsActivitySidebar extends Component {\n  state = {\n    hasFriendActivity: false,\n    renderFriends: 0,\n    friendActivityAnimation: 'friend-activity friend-activity-opacity-start',\n    friendsIntervalID: '',\n    dataShuffled: [],\n  }\n\n  componentDidMount() {\n    const TWO_MIN_IN_MS = 120000;\n\n    const friendsIntervalID = setInterval(() => {\n      this.setState(({ renderFriends }) => ({\n        renderFriends: renderFriends + 1,\n        hasFriendActivity: true,\n        friendActivityAnimation: 'friend-activity friend-activity-opacity-start',\n      }));\n      setTimeout(() => this.setState({\n        friendActivityAnimation: 'friend-activity friend-activity-opacity-end',\n      }), 100);\n    },\n    TWO_MIN_IN_MS);\n\n    const dataShuffled = this.friendDataNewOrder();\n    this.setState({ friendsIntervalID, dataShuffled });\n  }\n\n  shouldComponentUpdate(_nextProps, { renderFriends, friendsIntervalID }) {\n    const TWENTY = 20;\n    if (renderFriends === TWENTY) { clearInterval(friendsIntervalID); }\n    return true;\n  }\n\n  componentWillUnmount() {\n    const { friendsIntervalID } = this.state;\n    clearInterval(friendsIntervalID);\n  }\n\n  friendDataNewOrder = () => {\n    const musicDataClone = [...musicData];\n    const orderToShowFriends = shuffler(musicDataClone);\n\n    const dataNewOrder = musicDataClone\n      .map((_frnd, i) => musicDataClone[orderToShowFriends[i]]);\n\n    return dataNewOrder;\n  }\n\n  render() {\n    const { hasFriendActivity, renderFriends, friendActivityAnimation,\n      dataShuffled,\n    } = this.state;\n    const { played } = this.props;\n\n    return (\n      <div className=\"friends-container-hero\">\n        <div className=\"headerActFrnd\">\n          <h4 className=\"title-hero\">Friends Activity</h4>\n          <FontAwesomeIcon icon={ faUserPlus } />\n        </div>\n\n        {\n          !hasFriendActivity\n            ? (\n              <FriendActivityDefault />\n            )\n            : (\n              <div className=\"father-activity\">\n                {\n                  dataShuffled.map((friend, i) => {\n                    const { image, username, musicName,\n                      artistName, collectionId, playlist } = friend;\n\n                    const conditionForPlayAndPause = played?.status\n                      && played?.collectionId === collectionId\n                      && played?.trackName === musicName;\n\n                    return (\n                      <div\n                        key={ i }\n                        className={ (i === (renderFriends - 1))\n                          ? friendActivityAnimation\n                          : 'friend-activity' }\n                      >\n                        <div className=\"friend-profile-picture\">\n                          <img\n                            className=\"friend-pp\"\n                            src={ image }\n                            alt=\"\"\n                          />\n                          <button\n                            type=\"button\"\n                            className=\"friend-pp-icon-father fpi-reset\"\n                            onClick={ () => {\n                              if (played.status) {\n                                return handlePauseInFriend();\n                              }\n                              handlePlayInFriend(collectionId, musicName);\n                            } }\n                          >\n                            {\n                              conditionForPlayAndPause\n                                ? (\n                                  <GiPauseButton\n                                    className=\"friend-pp-icon-play fpi-p\"\n                                  />\n                                )\n                                : <IoPlaySharp className=\"friend-pp-icon-play\" />\n                            }\n                          </button>\n\n                        </div>\n                        <div className=\"friend-detail-info\">\n                          <div className=\"friend-name-ellipsis\">\n                            <p className=\"friend-name\">{username}</p>\n                            {/* FONT ICON // MUSIC TIMER */}\n                          </div>\n                          <div className=\"info-friend-music\">\n                            <div className=\"friend-music-ellipsis\">\n                              <LinkMusicName\n                                linkClassName=\"friend-music-name\"\n                                paragraphClassName=\"friend-music-name ellipsis\"\n                                collectionId={ collectionId }\n                                artistName={ artistName }\n                                paragraph={ musicName }\n                              />\n\n                            </div>\n                            <p className=\"fa-bp\"> • </p>\n                            <div className=\"friend-music-ellipsis\">\n                              <LinkArtistName\n                                linkClassName=\"friend-artist-name\"\n                                paragraphClassName=\"friend-artist-name ellipsis\"\n                                paragraph={ artistName }\n                              />\n                            </div>\n                          </div>\n                          <div className=\"fpe ellipsis\">\n                            <p className=\"friend-icon-style ellipsis\">\n                              ♬\n                              <span\n                                className=\"friend-playlist-name ellipsis\"\n                              >\n                                {playlist}\n                              </span>\n                            </p>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })\n                }\n              </div>\n            )\n        }\n\n      </div>\n    );\n  }\n}\n\nFriendsActivitySidebar.propTypes = {\n  played: PropTypes.shape({\n    collectionId: PropTypes.number,\n    status: PropTypes.bool,\n    trackName: PropTypes.string,\n  }),\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  played: state.musicsToPlayer.played,\n});\n\nexport default connect(mapStateToProps, null)(FriendsActivitySidebar);\n","const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","export default __webpack_public_path__ + \"static/media/spotifyLogoHeader.f48fb565.png\";","export default __webpack_public_path__ + \"static/media/magGlass.b11d82bc.png\";","export default __webpack_public_path__ + \"static/media/user.4d7f4c3d.png\";","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport SpotifyLogoHeader from '../images/spotifyLogoHeader.png';\nimport { getUser } from '../services/userAPI';\nimport { saveAlbumNameAct } from '../actions';\nimport magGlass from '../images/navLinks/magGlass.png';\nimport userImg from '../images/navLinks/user.png';\nimport { enableRender } from '../helpers/artist-music-global';\n\nclass TopsideHeader extends Component {\n  favoriteHeader = async () => {\n    const { userToFavorites } = this.props;\n    const currentYear = new Date().getFullYear();\n    const user = await getUser();\n\n    const albumFake = {\n      artistName: user.name,\n      userImage: user.image,\n      favoriteTitle: 'PLAYLIST',\n      collectionName: 'Liked Songs',\n      artworkUrl100: 'https://t.scdn.co/images/3099b3803ad9496896c43f22fe9be8c4.png',\n      releaseDate: currentYear.toString(),\n    };\n\n    await userToFavorites(albumFake);\n  } // fazer isso no login\n\n  render() {\n    return (\n      <div className=\"headerTopside\">\n        <div className=\"header-content\">\n          <Link\n            to=\"/search\"\n            className=\"header-link-style\"\n            onClick={ enableRender }\n          >\n            <div className=\"header-title\">\n              <img src={ SpotifyLogoHeader } alt=\"Spotify Logo\" />\n            </div>\n          </Link>\n        </div>\n\n        <div className=\"navLinks-container\">\n          <div className=\"alignNavSideBar\">\n            <NavLink\n              className=\"navLinks\"\n              to=\"/search\"\n              data-testid=\"link-to-search\"\n              onClick={ enableRender }\n            >\n              <img src={ magGlass } alt=\"\" width=\"25\" className=\"iconSet\" />\n              <span className=\"nav-side-text\">Search</span>\n            </NavLink>\n          </div>\n\n          <div className=\"alignNavSideBar\">\n            <NavLink\n              className=\"navLinks\"\n              to=\"/favorites\"\n              data-testid=\"link-to-favorites\"\n              onClick={ this.favoriteHeader }\n            >\n              <img src=\"https://t.scdn.co/images/3099b3803ad9496896c43f22fe9be8c4.png\" alt=\"\" width=\"25\" className=\"iconSet\" />\n              <span className=\"nav-side-text\">Favorites</span>\n            </NavLink>\n          </div>\n\n          <div className=\"alignNavSideBar\">\n            <NavLink\n              className=\"navLinks\"\n              to=\"/profile\"\n              data-testid=\"link-to-profile\"\n            >\n              <img\n                src={ userImg }\n                alt=\"\"\n                width=\"25\"\n                className=\"iconSet\"\n                style={ { backgroundColor: '#006451' } }\n              />\n              <span className=\"nav-side-text\">Profile</span>\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTopsideHeader.propTypes = {\n  image: PropTypes.string,\n  isLoading: PropTypes.bool,\n  name: PropTypes.string,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  userToFavorites: (albumFake) => dispatch(saveAlbumNameAct(albumFake)),\n});\n\nexport default connect(null, mapDispatchToProps)(TopsideHeader);\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    if (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n      localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n    }\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { IoVolumeMediumOutline } from 'react-icons/io5';\nimport { GiPauseButton } from 'react-icons/gi';\n\nimport { saveFavoriteMusicsAct, saveUrlAct, setSongPlayedAct } from '../actions';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport { handleMusicNameClick } from '../helpers/artist-music-global';\n\nclass FavSideList extends Component {\n  componentDidMount() {\n    this.fetchFavoriteSongs();\n  }\n\n  fetchFavoriteSongs = async () => {\n    const { saveFavoriteMusics } = this.props;\n    const favorites = await getFavoriteSongs();\n    saveFavoriteMusics(favorites);\n  }\n\n  stopSong = () => {\n    const audio = document.querySelector('audio');\n    audio.pause();\n  }\n\n  pauseSongGlobal = () => {\n    const { played, setPlayedSong } = this.props;\n    setPlayedSong({ ...played, status: false });\n    this.stopSong();\n  }\n\n  render() {\n    const { favoritesToSidebar, played } = this.props;\n\n    return (\n      <div className=\"favList\">\n        {\n          favoritesToSidebar && favoritesToSidebar.map((song) => {\n            const { artistName, collectionId, trackId, trackName } = song;\n            return (\n              <div key={ trackId } className=\"sfs-p\">\n                <Link\n                  to={ `/album/${collectionId}` }\n                  className=\"sideLinkStyle\"\n                  onClick={ () => { handleMusicNameClick(artistName, collectionId); } }\n                >\n                  <p className=\"side-fav-musics ellipsis\">{trackName}</p>\n                </Link>\n                {\n                  (played.status && played?.trackId === trackId)\n                    && (\n                      <button\n                        className=\"fs-p\"\n                        type=\"button\"\n                        onClick={ this.pauseSongGlobal }\n                      >\n                        <IoVolumeMediumOutline className=\"sb-vi\" />\n                        <GiPauseButton className=\"sb-pi\" />\n                      </button>\n                    )\n                }\n              </div>\n            );\n          })\n        }\n      </div>\n    );\n  }\n}\n\nFavSideList.propTypes = {\n  favoriteSongs: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n  fetchAlbumInRedux: PropTypes.func,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  favoritesToSidebar: state.responseMusics.favoritesToSidebar,\n  played: state.musicsToPlayer.played,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveFavoriteMusics: (favorites) => dispatch(saveFavoriteMusicsAct(favorites)),\n  saveUrl: (url) => dispatch(saveUrlAct(url)),\n  setPlayedSong: (obj) => dispatch(setSongPlayedAct(obj)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FavSideList);\n","import React, { Component } from 'react';\nimport '../styles/loadingHeader.css';\n\nclass LoadingHeader extends Component {\n  render() {\n    return (\n      <div className=\"blocksHeader\">\n        {/*\n          Spinner art by Melissa Em in October 7, 2019\n          https://freefrontend.com/css-spinners/\n          Made with\n          HTML / CSS\n          https://codepen.io/meowwwls/pen/OJJPbGb\n        */}\n        <div className=\"blockHeader greenHeader\" />\n        <div className=\"blockHeader whiteHeader\" />\n      </div>\n    );\n  }\n}\n\nexport default LoadingHeader;\n","const INITIAL_VOLUME = 1;\nconst INITIAL_OBJ = {};\n\nexport const saveInStorage = (key, value) => localStorage\n  .setItem(key, JSON.stringify(value));\n\nexport const getInStorage = (key) => {\n  const data = localStorage.getItem(key);\n\n  const dataCondition = data === null || data === undefined;\n  const volumeCondition = key === 'volume' && dataCondition;\n  const lastSongCondition = key === 'lastSong' && dataCondition;\n  const lastPlaylistCondition = key === 'lastPlaylist' && dataCondition;\n\n  if (volumeCondition) { saveInStorage(key, INITIAL_VOLUME); }\n  if (lastSongCondition) { saveInStorage(key, INITIAL_OBJ); }\n  if (lastPlaylistCondition) { saveInStorage(key, INITIAL_OBJ); }\n\n  return JSON.parse(localStorage.getItem(key));\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { handleMusicNameClick } from '../../../helpers/artist-music-global';\nimport { getInStorage, saveInStorage } from '../../../services/localStorage';\n\nfunction AlbumSideImage() {\n  const store = useSelector((globalState) => ({\n    songs: globalState.musicsToPlayer.songs,\n    played: globalState.musicsToPlayer.played,\n  }));\n\n  const { played, songs } = store;\n  const lastSong = getInStorage('lastSong'); // {} initial empty object\n  const lastPlaylist = getInStorage('lastPlaylist');\n\n  if (played?.trackId && played?.trackId !== lastSong.trackId) {\n    saveInStorage('lastSong', played);\n  }\n\n  if (played?.trackId && played?.collectionId !== lastPlaylist[0]?.collectionId) {\n    saveInStorage('lastPlaylist', songs);\n  }\n\n  return played?.trackId ? (\n    <div className=\"pcsi\">\n      <Link\n        to={ `/album/${played?.collectionId}` }\n        onClick={ async () => {\n          handleMusicNameClick(played?.artistName, played?.collectionId);\n        } }\n      >\n        <img\n          src={ played?.artworkUrl100.replace('100x100bb.jpg', '500x500bb.jpg') }\n          alt=\"Current song album\"\n          className=\"pcsi-im\"\n        />\n      </Link>\n    </div>\n  )\n    : null;\n}\n\nexport default AlbumSideImage;\n","import React, { Component } from 'react';\nimport '../styles/header.css';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../services/userAPI';\nimport TopsideHeader from './TopsideHeader';\nimport FavSideList from './FavSideList';\nimport LoadingHeader from './LoadingHeader';\nimport AlbumSideImage from './player/albumImage/AlbumSideImage';\n\nclass Header extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      name: '',\n      image: 'https://i.pinimg.com/474x/86/0d/cd/860dcdf5cd536bfd86d8fc86efdbdd18.jpg',\n    };\n\n    this.catchUser = this.catchUser.bind(this);\n    this.forceReloadVerifier = this.forceReloadVerifier.bind(this);\n  }\n\n  componentDidMount() {\n    this.catchUser();\n  }\n\n  async catchUser() {\n    this.setState({ isLoading: true });\n    const user = await getUser();\n\n    this.setState(() => {\n      if (user.image.length > 0) {\n        return ({\n          isLoading: false,\n          name: user.name,\n          image: user.image,\n        });\n      }\n      return {\n        isLoading: false,\n        name: user.name,\n      };\n    });\n  }\n\n  forceReloadVerifier() {\n    const { forceReload, handleReload } = this.props;\n    const ms500 = 500;\n\n    if (forceReload) {\n      this.setState((prevState) => ({\n        reload: !prevState.reload,\n        isLoading: true,\n      }), () => {\n        this.fetchFavoriteSongs();\n        setTimeout(() => this.setState({ isLoading: false }), ms500);\n      });\n      handleReload();\n    }\n  }\n\n  render() {\n    const { isLoading } = this.state;\n\n    this.forceReloadVerifier();\n\n    return (\n      <header className=\"header-hero\" data-testid=\"header-component\">\n        <TopsideHeader { ...this.state } />\n\n        <hr className=\"sideBarHorizontalRow\" />\n\n        <div className=\"sideFavSongsContainer\">\n          {\n            isLoading\n              ? (\n                <LoadingHeader />\n              )\n              : (\n                <FavSideList\n                  { ...this.props }\n                />\n              )\n          }\n        </div>\n\n        <AlbumSideImage />\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  url: PropTypes.string,\n}.isRequired;\n\nexport default Header;\n","const bckOrForwardSong = (isBackwardButton, dataToBackOrForward) => {\n  const { songsGlobal, played, setPlayedSongs } = dataToBackOrForward;\n\n  const FIRST = 0;\n  const LAST = songsGlobal.length - 1;\n  const firstSong = songsGlobal[FIRST];\n  const lastSong = songsGlobal[LAST];\n\n  // to not execute the function below when have only one song in album or playlist\n  if (songsGlobal.length === 0) {\n    return null;\n  }\n  // each one of this block of code is equal a one function that need to be abstracted\n  // 1 -\n  const firstSongCondition = firstSong.trackId === played.trackId;\n  if (isBackwardButton && firstSongCondition) {\n    return setPlayedSongs({ ...lastSong, status: true, name: lastSong.previewUrl });\n  }\n\n  // 2 -\n  const lastSongCondition = lastSong.trackId === played.trackId;\n  if (!isBackwardButton && lastSongCondition) {\n    return setPlayedSongs({ ...firstSong, status: true, name: firstSong.previewUrl });\n  }\n\n  // 3 - CONTENT OF THIRD CONDITION IS EQUAL THE FIFTH\n  const { crrTime } = dataToBackOrForward;\n  const songPosition = songsGlobal.findIndex((song) => song.trackId === played.trackId);\n  if (!isBackwardButton && crrTime) {\n    const nextSong = songsGlobal[songPosition + 1];\n    return setPlayedSongs({ ...nextSong, state: true, name: nextSong.previewUrl });\n  }\n\n  // 4 -\n  const { trackId: idFirstSongg } = firstSong;\n  const { trackId: idLastSong } = lastSong;\n  const whenIsBetween1stLast = (idFirstSongg !== played.trackId\n      || idLastSong !== played.trackId);\n  if (isBackwardButton && whenIsBetween1stLast) {\n    const prevSong = songsGlobal[songPosition - 1];\n    return setPlayedSongs({ ...prevSong, state: true, name: prevSong.previewUrl });\n  }\n\n  // 5 -\n  if (!isBackwardButton && whenIsBetween1stLast) {\n    const nextSong = songsGlobal[songPosition + 1];\n    return setPlayedSongs({ ...nextSong, state: true, name: nextSong.previewUrl });\n  }\n};\n\nexport default bckOrForwardSong;\n","const THOUSAND = 1000;\nconst SIXTY = 60;\n\nexport const convertMillsToMin = (ms) => {\n  const minutes = ((ms / THOUSAND) / SIXTY);\n  const minutesHouse = Math.trunc(minutes);\n  return minutesHouse;\n};\n\nexport const convertMillsToSeconds = (ms) => {\n  const seconds = ((ms / THOUSAND) % SIXTY);\n  const secondsHouse = Math.round(seconds);\n\n  const TEN = 10;\n  if (secondsHouse < TEN) {\n    const verifier = [0, secondsHouse];\n    return verifier.join('');\n  }\n  return secondsHouse;\n};\n\nexport const totalAlbumTime = (tracks) => {\n  const totalTime = tracks\n    .reduce((acc, { trackTimeMillis }) => {\n      const counter = acc + trackTimeMillis;\n      return counter;\n    }, 0);\n\n  const hoursHouse = (((totalTime / THOUSAND) / SIXTY) / SIXTY); // ms / s / min / h\n  const hours = Math.trunc(hoursHouse);\n\n  const minutesHouse = hoursHouse.toFixed(2).toString().split('.')[1];\n  const minutesToNum = +`0.${minutesHouse}`;\n  const minutes = Math.round(minutesToNum * SIXTY);\n\n  if (hours <= 0) {\n    return `${minutes} min`;\n  }\n  return `${hours} hr ${minutes} min`;\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { IoIosSkipBackward, IoIosSkipForward } from 'react-icons/io';\nimport bckOrForwardSong from '../../../helpers/backward-forward-player/bckOrForwardSong';\n\nfunction BackAndForwardButton({\n  type, songsGlobal, played, setPlayedSongs,\n}) {\n  const dataToBackOrForward = { songsGlobal, played, setPlayedSongs };\n\n  const backward = (\n    <button\n      type=\"button\"\n      className=\"cpb\"\n      onClick={ () => bckOrForwardSong(true, dataToBackOrForward) }\n    >\n      <IoIosSkipBackward className=\"tsp-i\" />\n    </button>\n  );\n\n  const forward = (\n    <button\n      type=\"button\"\n      className=\"cpb\"\n      onClick={ () => bckOrForwardSong(false, dataToBackOrForward) }\n    >\n      <IoIosSkipForward className=\"tsp-i\" />\n    </button>\n  );\n\n  return type === 'backward' ? backward : forward;\n}\n\nBackAndForwardButton.propTypes = {\n  played: PropTypes.oneOfType([\n    PropTypes.object,\n  ]),\n  setPlayedSongs: PropTypes.func,\n  songsGlobal: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n  type: PropTypes.string,\n}.isRequired;\n\nexport default BackAndForwardButton;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { BiRepeat, BiShuffle } from 'react-icons/bi';\nimport { useSelector } from 'react-redux';\nimport shuffler from '../../../helpers/shuffle/shuffler';\n\nfunction ShuffleAndRepeatButton({ type, setPlaylistSong }) {\n  const [isShfflClicked, setIsShfflClicked] = useState(false);\n  const [isRptClicked, setIsRptClicked] = useState(false);\n\n  const [songsDefault, setSongsDefault] = useState([]);\n  const [songsShuffledLocal, setSongsShuffledLocal] = useState([]);\n\n  const store = useSelector((globalState) => ({\n    songs: globalState.musicsToPlayer.songs,\n  }));\n\n  const { songs } = store;\n\n  useEffect(() => {\n    if (songsDefault.length === 0) {\n      setSongsDefault(songs);\n    }\n\n    if (songsDefault.length > 0 && songsDefault[0].trackId !== songs[0].trackId) {\n      setSongsShuffledLocal(songs);\n    }\n  }, [songs, songsDefault, songsShuffledLocal]);\n\n  const shuffleSongs = () => {\n    const songsClone = [...songs];\n    const myShuffleOrder = shuffler(songsClone);\n\n    if (isShfflClicked) {\n      return setPlaylistSong(songsDefault);\n    }\n\n    const songsShuffledToGlobal = songs.map((_, i) => songs[myShuffleOrder[i]]);\n    setPlaylistSong(songsShuffledToGlobal);\n  };\n\n  const shuffle = (\n    <button\n      type=\"button\"\n      className=\"cpb dot-father\"\n      onClick={ () => {\n        setIsShfflClicked(!isShfflClicked);\n        shuffleSongs();\n      } }\n    >\n      {\n        isShfflClicked\n          ? (\n            <>\n              <BiShuffle className=\"tsp-sa tsp-s\" />\n              <div className=\"green-dot\" />\n            </>\n          )\n          : <BiShuffle className=\"tsp-rs tsp-s\" />\n      }\n    </button>\n  );\n\n  const repeat = (\n    <button\n      type=\"button\"\n      className=\"cpb dot-father\"\n      onClick={ () => setIsRptClicked(!isRptClicked) }\n    >\n      {\n        isRptClicked\n          ? (\n            <>\n              <BiRepeat className=\"tsp-r tsp-sa\" />\n              <div className=\"green-dot\" />\n            </>\n          )\n          : <BiRepeat className=\"tsp-rs tsp-r\" />\n      }\n    </button>\n  );\n\n  return type === 'shuffle' ? shuffle : repeat;\n}\n\nShuffleAndRepeatButton.propTypes = {\n  type: PropTypes.string,\n}.isRequired;\n\nexport default ShuffleAndRepeatButton;\n","const isFavoriteSong = (favoritesArr, played) => favoritesArr\n  .some((sng) => sng.trackId === played.trackId);\n\nexport default isFavoriteSong;\n","import { addSong, removeSong } from '../../services/favoriteSongsAPI';\nimport isFavoriteSong from './isFavoriteSong';\n\n// toToggle: is a object containing { favoritesToSidebar, played, setFavorite };\nconst toggleFavorite = (toToggle) => {\n  const { favoritesToSidebar, played, setFavorite } = toToggle;\n  const isFavorite = isFavoriteSong(favoritesToSidebar, played);\n\n  if (isFavorite) {\n    const rmvFav = favoritesToSidebar.filter((sng) => sng.trackId !== played.trackId);\n    removeSong(played); // rmv from localStorage\n    return setFavorite(rmvFav); // redux, att the globalState\n  }\n\n  const attFavorites = [...favoritesToSidebar, played];\n  addSong(played);\n  setFavorite(attFavorites);\n};\n\nexport default toggleFavorite;\n","import PropTypes from 'prop-types';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { FaRegHeart } from 'react-icons/fa';\nimport isFavoriteSong from '../../../helpers/favorites/isFavoriteSong';\nimport LinkArtistName from '../../LinkArtistName';\nimport LinkMusicName from '../../LinkMusicName';\nimport toggleFavorite from '../../../helpers/favorites/toggleFavorite';\n\nfunction PlayerArtistInfo({ played, toToggle }) {\n  const { artistName, collectionId, trackName } = played;\n  const { favoritesToSidebar } = toToggle;\n\n  return (\n    <div className=\"music-player-info\">\n      <div className=\"artist-infos ellipsis\">\n        <LinkMusicName\n          linkClassName=\"friend-music-name widthRestriction\"\n          paragraphClassName=\"music-name-player tdh tc ellipsis widthRestriction\"\n          collectionId={ collectionId }\n          artistName={ artistName }\n          paragraph={ trackName }\n        />\n\n        <LinkArtistName\n          linkClassName=\"friend-music-name widthRestriction\"\n          paragraphClassName=\"artist-name-player tdh tc ellipsis widthRestriction\"\n          paragraph={ artistName }\n        />\n\n        <div className=\"blur-artistname\" />\n      </div>\n      <div className=\"favorite-player-container\">\n        {\n          played?.previewUrl && (\n            <label htmlFor=\"fbp\">\n              <input type=\"checkbox\" id=\"fbp\" name=\"\" hidden />\n              {\n                isFavoriteSong(favoritesToSidebar, played)\n                  ? (\n                    <FontAwesomeIcon\n                      icon={ faHeart }\n                      className=\"heartIcon-player\"\n                      onClick={ () => toggleFavorite(toToggle) }\n                    />\n                  )\n                  : (\n                    <FaRegHeart\n                      className=\"hip-unfav\"\n                      onClick={ () => toggleFavorite(toToggle) }\n                    />\n                  )\n              }\n            </label>\n          )\n        }\n      </div>\n    </div>\n  );\n}\n\nPlayerArtistInfo.propTypes = {\n  played: PropTypes.shape({\n    artistName: PropTypes.string,\n    collectionId: PropTypes.number,\n    previewUrl: PropTypes.string,\n    trackName: PropTypes.string,\n  }),\n}.isRequired;\n\nexport default PlayerArtistInfo;\n","import React from 'react';\nimport { IoDocumentTextSharp } from 'react-icons/io5';\n\nfunction DocButton() {\n  return (\n    <a\n      href=\"https://github.com/byneur4l/neur4l.fy\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"cpb gh-in pbr\"\n    >\n      <IoDocumentTextSharp />\n    </a>\n  );\n}\n\nexport default DocButton;\n","import React from 'react';\nimport { VscGithub } from 'react-icons/vsc';\n\nfunction GithubButton() {\n  return (\n    <a\n      href=\"https://github.com/byneur4l\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"cpb gh-in pbr\"\n    >\n      <VscGithub />\n    </a>\n  );\n}\n\nexport default GithubButton;\n","import React from 'react';\nimport { FaLinkedin } from 'react-icons/fa';\n\nfunction LinkedinButton() {\n  return (\n    <a\n      href=\"https://www.linkedin.com/in/reisblucas/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"cpb gh-in pbr\"\n    >\n      <FaLinkedin />\n    </a>\n  );\n}\n\nexport default LinkedinButton;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport '../styles/footerText.css';\n\nfunction FooterText({ classNameFoot }) {\n  return (\n    <footer className={ classNameFoot }>\n      <p\n        className=\"copyright-t\"\n      >\n        &copy; 2022 Spotify AB Design and Code from neur4l.\n      </p>\n      <p className=\"copyright-t\">All rights reserved.</p>\n    </footer>\n  );\n}\n\nFooterText.propTypes = {\n  classNameFoot: PropTypes.string,\n}.isRequired;\n\nexport default FooterText;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { IoVolumeMediumOutline, IoVolumeOffOutline } from 'react-icons/io5';\nimport { getInStorage, saveInStorage } from '../../../services/localStorage';\nimport '../../../styles/playerBottomSide.css';\nimport DocButton from '../../buttons/DocButton';\nimport GithubButton from '../../buttons/GithubButton';\nimport LinkedinButton from '../../buttons/LinkedinButton';\nimport FooterText from '../../FooterText';\n\nconst ZERO_DOT_ONE = 0.1;\n\nfunction PlayerRightside() {\n  // the sound volume will be in the localStorage to remember the user preferences\n  const [crrVolume, setCrrVolume] = useState(1);\n  const [volBeforeMute, setVolBeforeMute] = useState(ZERO_DOT_ONE);\n  const volumeBar = useRef(); // vol bar reference\n\n  const setVolumeStyle = () => volumeBar.current.style\n    .setProperty('--seek-vol-before-width', `${(volumeBar.current.value)}%`);\n\n  useEffect(() => {\n    // buscar o volume do localstorage\n    const volume = getInStorage('volume');\n\n    if (volume < 1) { volumeBar.current.value = volume * 100; }\n\n    volumeBar.current.max = 100;\n    setVolumeStyle();\n    setCrrVolume(volume);\n  }, [crrVolume]);\n\n  const setVolumeSong = (volState) => {\n    const audio = document.querySelector('audio');\n    audio.volume = volState;\n  };\n\n  const volumeChange = () => {\n    setVolumeStyle();\n    setVolumeSong(crrVolume);\n\n    const volumeToSave = (volumeBar.current.value / 100);\n    setCrrVolume(volumeToSave);\n    saveInStorage('volume', volumeToSave);\n  };\n\n  const mute = () => {\n    setVolumeStyle();\n    setVolBeforeMute(crrVolume);\n    setVolumeSong(0);\n\n    setCrrVolume(0);\n    saveInStorage('volume', 0);\n  };\n\n  const unmute = () => {\n    setVolumeStyle();\n    setVolumeSong(volBeforeMute);\n\n    setCrrVolume(volBeforeMute);\n    saveInStorage('volume', volBeforeMute);\n  };\n\n  const muteAndUnmute = () => (crrVolume === 0 ? unmute() : mute());\n\n  const volumeVerifier = () => {\n    const ZERO = 0;\n    const ZERO_DOT_THREE = 0.3;\n    const ZERO_DOT_SEVEN = 0.7;\n\n    const SOUNDWAVE = ')';\n\n    switch (true) {\n    case (crrVolume === ZERO):\n      return (\n        <>\n          <IoVolumeOffOutline />\n          <div className=\"vol mute\">x</div>\n        </>\n      );\n\n    case (crrVolume > ZERO && crrVolume <= ZERO_DOT_THREE):\n      return (\n        <>\n          <IoVolumeOffOutline />\n          <div className=\"vol low-sound\">{SOUNDWAVE}</div>\n        </>\n      );\n\n    case (crrVolume > ZERO_DOT_THREE && crrVolume <= ZERO_DOT_SEVEN):\n      return (\n        <>\n          <IoVolumeOffOutline />\n          <div className=\"vol med-sound\">{SOUNDWAVE}</div>\n        </>\n      );\n\n    case (crrVolume > ZERO_DOT_SEVEN):\n      return (\n        <>\n          <IoVolumeOffOutline />\n          <div className=\"vol low-sound\">{SOUNDWAVE}</div>\n          <div className=\"vol high-sound\">{SOUNDWAVE}</div>\n        </>\n      );\n\n    default:\n      return <IoVolumeMediumOutline />;\n    }\n  };\n\n  return (\n    <div className=\"right-player-buttons\">\n      <GithubButton />\n      <LinkedinButton />\n      <DocButton />\n\n      <button\n        className=\"cpb vb pbr\"\n        type=\"button\"\n        onClick={ muteAndUnmute }\n      >\n        {volumeVerifier()}\n      </button>\n\n      <input\n        type=\"range\"\n        name=\"volume-player\"\n        defaultValue=\"1\"\n        className=\"progress-bar volume-bar\"\n        ref={ volumeBar }\n        onClick={ volumeChange }\n        onChange={ volumeChange }\n      />\n\n      <FooterText classNameFoot=\"copyright-player\" />\n    </div>\n  );\n}\n\nexport default PlayerRightside;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GiPauseButton } from 'react-icons/gi';\nimport { IoPlaySharp } from 'react-icons/io5';\nimport { saveFavoriteMusicsAct, setMusicsToPlayerAct,\n  setSongPlayedAct } from '../actions';\nimport bckOrForwardSong from '../helpers/backward-forward-player/bckOrForwardSong';\nimport { convertMillsToSeconds } from '../helpers/songTime';\nimport '../styles/playerBottomSide.css';\nimport BackAndForwardButton from './player/center/BackAndForwardButton';\nimport ShuffleAndRepeatButton from './player/center/ShuffleAndRepeatButton';\nimport PlayerArtistInfo from './player/leftside/PlayerArtistInfo';\nimport PlayerRightside from './player/rightside/PlayerRightside';\nimport { getInStorage } from '../services/localStorage';\n\nconst DEFAULT_PREVIEW_DURATION = 30;\nconst ONE_THOUSAND = 1000;\n\nexport const PlayerBottomSide = () => {\n  const state = useSelector((globalState) => ({\n    musicsToPlayer: globalState.musicsToPlayer,\n    played: globalState.musicsToPlayer.played,\n    favoritesToSidebar: globalState.responseMusics.favoritesToSidebar,\n  }));\n\n  // Songs global to go to the next and previous song\n  const { musicsToPlayer: { songs: songsGlobal },\n    played, favoritesToSidebar } = state;\n\n  const dispatch = useDispatch();\n  const setPlayedSongs = useCallback((objInsidePlayed) => dispatch(\n    setSongPlayedAct(objInsidePlayed),\n  ), [dispatch]);\n\n  const setPlaylistSong = useCallback((playlistToSongs) => dispatch(\n    setMusicsToPlayerAct(playlistToSongs),\n  ), [dispatch]);\n\n  const setFavorite = (favArray) => dispatch(saveFavoriteMusicsAct(favArray));\n\n  const [crrTime, setCrrTime] = useState('0:00');\n\n  // references\n  // https://www.youtube.com/watch?v=sqpg1qzJCGQ - building some parts of this player with Amy's help\n  const audioPlayer = useRef(); // reference for audio component\n  const progressBar = useRef(); // reference for progress bar\n  const animationRef = useRef();\n\n  const audioPlayerEnded = audioPlayer?.current?.ended;\n\n  const changePlayerCurrentTime = () => {\n    // performatic bug?\n    // console.log(Math.floor((progressBar.current.value / DEFAULT_PREVIEW_DURATION) * 100));\n    progressBar.current\n      .style.setProperty(\n        '--seek-before-width',\n        `${(progressBar.current.value / DEFAULT_PREVIEW_DURATION) * 100}%`,\n      );\n    setCrrTime(progressBar.current.value);\n  };\n\n  const whilePlaying = useCallback(() => {\n    progressBar.current.value = audioPlayer.current.currentTime;\n    changePlayerCurrentTime();\n    animationRef.current = requestAnimationFrame(whilePlaying);\n  }, []);\n\n  useEffect(() => {\n    if (played.status) {\n      const volume = getInStorage('volume');\n      audioPlayer.current.volume = volume;\n      audioPlayer.current.play();\n      animationRef.current = requestAnimationFrame(whilePlaying);\n    }\n\n    if (crrTime === '30' && !audioPlayer.current.ended && played.status) {\n      setPlayedSongs({ ...played, status: false });\n      const dtbfwCrrTime = { songsGlobal, played, setPlayedSongs, crrTime };\n      return bckOrForwardSong(false, dtbfwCrrTime);\n    }\n\n    if (!played.status && crrTime === '0') {\n      setPlayedSongs({ ...played, status: true });\n    }\n\n    // const seconds = convertMillsToSeconds(played.trackTimeMillis);\n    // itunes api always return 30s in preview, so max seconds need to be 30s\n    const seconds = 30;\n    progressBar.current.max = seconds;\n  }, [played, played.name, played.status, played.trackTimeMillis, crrTime,\n    audioPlayerEnded, favoritesToSidebar, setPlayedSongs, songsGlobal, whilePlaying]);\n\n  useEffect(() => {\n    const lastSong = getInStorage('lastSong');\n    const lastPlaylist = getInStorage('lastPlaylist');\n    // get in storage the last playlist song\n\n    setPlayedSongs({ ...lastSong, status: false });\n    setPlaylistSong(lastPlaylist);\n  }, [setPlayedSongs, setPlaylistSong]);\n\n  const play = () => {\n    audioPlayer.current.play();\n    animationRef.current = requestAnimationFrame(whilePlaying);\n    setPlayedSongs({ ...played, status: true });\n  };\n\n  const pause = () => {\n    audioPlayer.current.pause();\n    cancelAnimationFrame(animationRef.current);\n    setPlayedSongs({ ...played, status: false });\n  };\n\n  const handlePlayButton = () => {\n    if (played.name === '') { return null; } // same as do nothing...\n    return played.status ? pause() : play();\n  };\n\n  const changeRange = () => {\n    audioPlayer.current.currentTime = progressBar.current.value;\n    changePlayerCurrentTime();\n  };\n\n  const toToggle = { favoritesToSidebar, played, setFavorite };\n\n  return (\n    <div className=\"player-container\">\n      <PlayerArtistInfo played={ played } toToggle={ toToggle } />\n\n      <div className=\"central-player-buttons\">\n        <audio\n          ref={ audioPlayer }\n          src={ played.name }\n          // autoPlay\n        >\n          <track kind=\"captions\" />\n          Your browser does not support this player.\n          <code>audio</code>\n        </audio>\n\n        <div className=\"tsp-w mb-5\">\n          <div className=\"tsp\">\n            <ShuffleAndRepeatButton setPlaylistSong={ setPlaylistSong } type=\"shuffle\" />\n            <BackAndForwardButton\n              type=\"backward\"\n              songsGlobal={ songsGlobal }\n              played={ played }\n              setPlayedSongs={ setPlayedSongs }\n            />\n\n            <button\n              type=\"button\"\n              className=\"cpb pb\"\n              onClick={ handlePlayButton }\n            >\n              {\n                played.status\n                  ? <GiPauseButton className=\"pbcs pause-inset\" />\n                  : <IoPlaySharp className=\"pbcs play-inset\" />\n              }\n            </button>\n\n            <BackAndForwardButton\n              type=\"forward\"\n              songsGlobal={ songsGlobal }\n              played={ played }\n              setPlayedSongs={ setPlayedSongs }\n            />\n            <ShuffleAndRepeatButton type=\"repeat\" />\n          </div>\n        </div>\n\n        <div className=\"bsp\">\n\n          {/* duration before */}\n          <div className=\"dfs mr-5\">\n            {\n              crrTime === '0:00'\n                ? '0:00'\n                : `0:${convertMillsToSeconds(crrTime * ONE_THOUSAND)}`\n            }\n          </div>\n\n          <input\n            type=\"range\"\n            className=\"progress-bar\"\n            defaultValue=\"0\"\n            ref={ progressBar }\n            onChange={ changeRange }\n          />\n\n          {/* duration total */}\n          <div className=\"dfs ml-5\">\n            {\n              played.trackDuration === undefined\n                ? '0:00'\n                : `0:${DEFAULT_PREVIEW_DURATION}`\n            }\n          </div>\n        </div>\n      </div>\n\n      <PlayerRightside />\n    </div>\n  );\n};\n\nexport default PlayerBottomSide;\n","import React, { Component } from 'react';\nimport '../styles/loading.css';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className=\"spinner\">\n        {/*\n          Spinner art by Melissa Em in October 7, 2019\n          https://freefrontend.com/css-spinners/\n          Made with\n          HTML / CSS\n          https://codepen.io/meowwwls/pen/OJJPbGb\n        */}\n        <div className=\"blocks\">\n          <div className=\"block green\" />\n          <div className=\"block white\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","import PropTypes from 'prop-types';\nimport { faSortDown, faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\n\nexport default class ConditionFilterTitle extends Component {\n  render() {\n    const { filterTitle } = this.props;\n    return (\n      <>\n        {\n          filterTitle === 'a-z'\n          && (\n            <FontAwesomeIcon\n              icon={ faSortDown }\n              className=\"faCentralizerFilter\"\n            />\n          )\n        }\n\n        {\n          filterTitle === 'z-a'\n          && (\n            <FontAwesomeIcon icon={ faSortUp } className=\"faCentralizerFilter\" />\n          )\n        }\n      </>\n    );\n  }\n}\n\nConditionFilterTitle.propTypes = {\n  filterTitle: PropTypes.string,\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport { faSortDown, faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\n\nexport default class ConditionFilterTime extends Component {\n  render() {\n    const { filterTime } = this.props;\n\n    return (\n      <>\n        {\n          filterTime === 'a-z'\n          && (\n            <FontAwesomeIcon\n              icon={ faSortDown }\n              className=\"faCentralizerFilter\"\n            />\n          )\n        }\n\n        {\n          filterTime === 'z-a'\n          && (\n            <FontAwesomeIcon icon={ faSortUp } className=\"faCentralizerFilter\" />\n          )\n        }\n      </>\n    );\n  }\n}\n\nConditionFilterTime.propTypes = {\n  filterTime: PropTypes.string,\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport ConditionFilterTime from './ConditionFilterTime';\n\nexport default class ConditionClockRender extends Component {\n  render() {\n    const { filterTime, path, pathFavorites, sortMusicByTime } = this.props;\n\n    return (\n      <div>\n        {\n          path === pathFavorites\n            ? (\n              <div className=\"filterRight\">\n                <div className=\"previewFavorite\" />\n                <div className=\"timeFilter\">\n                  <p\n                    className=\"albumFilters fitLinkContent\"\n                    onClick={ sortMusicByTime }\n                    tabIndex=\"-1\"\n                    aria-hidden=\"true\"\n                  >\n                    <FontAwesomeIcon icon={ faClock } />\n                    <ConditionFilterTime filterTime={ filterTime } />\n                  </p>\n                </div>\n              </div>\n            )\n            : (\n              <div className=\"filterRightAlbum\">\n                <div className=\"previewFavorite\" />\n                <div className=\"musicDurationAlbum\">\n                  <p\n                    className=\"albumFilters fitLinkContent\"\n                    onClick={ sortMusicByTime }\n                    tabIndex=\"-1\"\n                    aria-hidden=\"true\"\n                  >\n                    <FontAwesomeIcon icon={ faClock } />\n                    <ConditionFilterTime filterTime={ filterTime } />\n                  </p>\n                </div>\n              </div>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nConditionClockRender.propTypes = {\n  filterTime: PropTypes.func,\n  path: PropTypes.string,\n  pathFavorites: PropTypes.string,\n  sortMusicByTime: PropTypes.func,\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { sortFavoriteMusicsAct, sortMusicAct } from '../actions';\nimport ConditionFilterTitle from './ConditionFilterTitle';\nimport ConditionClockRender from './ConditionClockRender';\n\nconst pathAlbumId = '/album/:id';\nconst pathFavorites = '/favorites';\n\nclass FilterRow extends Component {\n  state = {\n    favoritesClone: [],\n    tracksClone: [],\n    filterTitle: '',\n    filterAlbum: '',\n    filterTime: '',\n  }\n\n  componentDidMount() {\n    this.saveTracksToReset();\n  }\n\n  saveTracksToReset = () => {\n    const { responseMusics: { favorites, tracks } } = this.props;\n    this.setState({ favoritesClone: [...favorites], tracksClone: [...tracks] });\n  }\n\n  resetFilter = () => {\n    const { match: { path }, sortMusic, sortFavoriteMusic } = this.props;\n    const { favoritesClone, tracksClone } = this.state;\n\n    this.setState({ filterTitle: '', filterTime: '', filterAlbum: '' });\n\n    const pathConditionToReset = path === pathAlbumId;\n    if (pathConditionToReset) sortMusic(tracksClone);\n    else { sortFavoriteMusic(favoritesClone); }\n  }\n\n  sortMusicAlphOrderAndReverse = () => {\n    const { responseMusics: { tracks, favorites }, sortMusic,\n      match: { path }, sortFavoriteMusic } = this.props;\n    const { filterTime, filterAlbum } = this.state;\n\n    if (filterTime !== '' || filterAlbum !== '') {\n      this.setState({ filterTime: '', filterAlbum: '' });\n    }\n\n    if (path === pathAlbumId) {\n      const sortTracksAlpha = [...tracks]\n        .sort((a, b) => (a.trackName).localeCompare(b.trackName));\n\n      if (tracks[0] === sortTracksAlpha[0]) {\n        const sortTracksDesc = [...tracks]\n          .sort((a, b) => (b.trackName).localeCompare(a.trackName));\n\n        this.setState({ filterTitle: 'z-a' });\n        return sortMusic(sortTracksDesc);\n      }\n      sortMusic(sortTracksAlpha);\n      this.setState({ filterTitle: 'a-z' });\n    }\n\n    if (path === pathFavorites) {\n      const sortTracksAlpha = [...favorites]\n        .sort((a, b) => (a.trackName).localeCompare(b.trackName));\n\n      if (favorites[0] === sortTracksAlpha[0]) {\n        const sortTracksDesc = [...favorites]\n          .sort((a, b) => (b.trackName).localeCompare(a.trackName));\n\n        this.setState({ filterTitle: 'z-a' });\n        return sortFavoriteMusic(sortTracksDesc);\n      }\n      sortFavoriteMusic(sortTracksAlpha);\n      this.setState({ filterTitle: 'a-z' });\n    }\n  }\n\n  sortMusicByTime = () => {\n    const { responseMusics: { tracks, favorites }, match: { path },\n      sortMusic, sortFavoriteMusic } = this.props;\n    const { filterTitle, filterAlbum } = this.state;\n\n    if (filterTitle !== '' || filterAlbum !== '') {\n      this.setState({ filterTitle: '', filterAlbum: '' });\n    }\n\n    if (path === pathAlbumId) {\n      const sortTracksAlpha = [...tracks]\n        .sort((a, b) => (a.trackTimeMillis) - (b.trackTimeMillis));\n\n      if (tracks[0] === sortTracksAlpha[0]) {\n        const sortTracksDesc = [...tracks]\n          .sort((a, b) => (b.trackTimeMillis) - (a.trackTimeMillis));\n\n        this.setState({ filterTime: 'z-a' });\n        return sortMusic(sortTracksDesc);\n      }\n      sortMusic(sortTracksAlpha);\n      this.setState({ filterTime: 'a-z' });\n    }\n\n    if (path === pathFavorites) {\n      const sortTracksAlpha = [...favorites]\n        .sort((a, b) => (a.trackTimeMillis) - (b.trackTimeMillis));\n\n      if (favorites[0] === sortTracksAlpha[0]) {\n        const sortTracksDesc = [...favorites]\n          .sort((a, b) => (b.trackTimeMillis) - (a.trackTimeMillis));\n\n        this.setState({ filterTime: 'z-a' });\n        return sortFavoriteMusic(sortTracksDesc);\n      }\n      sortFavoriteMusic(sortTracksAlpha);\n      this.setState({ filterTime: 'a-z' });\n    }\n  }\n\n  sortMusicByAlbum = () => {\n    const { responseMusics: { favorites }, match: { path },\n      sortFavoriteMusic } = this.props;\n    const { filterTitle, filterTime } = this.state;\n\n    if (filterTitle !== '' || filterTime !== '') {\n      this.setState({ filterTitle: '', filterTime: '' });\n    }\n\n    if (path === pathFavorites) {\n      const sortTracksAlpha = [...favorites]\n        .sort((a, b) => (a.collectionName).localeCompare(b.collectionName));\n\n      if (favorites[0] === sortTracksAlpha[0]) {\n        const sortTracksDesc = [...favorites]\n          .sort((a, b) => (b.collectionName).localeCompare(a.collectionName));\n\n        this.setState({ filterAlbum: 'z-a' });\n        return sortFavoriteMusic(sortTracksDesc);\n      }\n\n      sortFavoriteMusic(sortTracksAlpha);\n      this.setState({ filterAlbum: 'a-z' });\n    }\n  }\n\n  render() {\n    const { path } = this.props;\n    const { filterTitle, filterTime, filterAlbum } = this.state;\n\n    return (\n      <div className=\"musicRow filterRow\">\n        <div className=\"divTrackNumber\">\n          <p\n            className=\"withoutHover albumFilters trackNumberCenter\"\n            onClick={ this.resetFilter }\n            tabIndex=\"-1\"\n            aria-hidden=\"true\"\n          >\n            #\n          </p>\n        </div>\n\n        {\n          path === pathFavorites\n            ? (\n              <div className=\"musicAndArtist titleFilter\">\n                <p\n                  className=\"albumFilters\"\n                  onClick={ this.sortMusicAlphOrderAndReverse }\n                  tabIndex=\"-1\"\n                  aria-hidden=\"true\"\n                >\n                  TITLE\n                  <ConditionFilterTitle filterTitle={ filterTitle } />\n                </p>\n\n              </div>\n            )\n            : (\n              <div className=\"musicAndArtistAlbum\">\n                <p\n                  className=\"albumFilters\"\n                  onClick={ this.sortMusicAlphOrderAndReverse }\n                  tabIndex=\"-1\"\n                  aria-hidden=\"true\"\n                >\n                  TITLE\n                  <ConditionFilterTitle filterTitle={ filterTitle } />\n                </p>\n\n              </div>\n            )\n        }\n\n        {\n          path === pathFavorites\n              && (\n                <div className=\"albumFilter\">\n                  <p\n                    className=\"albumFilters\"\n                    onClick={ this.sortMusicByAlbum }\n                    tabIndex=\"-1\"\n                    aria-hidden\n                  >\n                    ALBUM\n                    <ConditionFilterTitle filterTitle={ filterAlbum } />\n                  </p>\n                </div>\n              )\n        }\n\n        <ConditionClockRender\n          filterTime={ filterTime }\n          path={ path }\n          sortMusicByTime={ this.sortMusicByTime }\n        />\n\n      </div>\n    );\n  }\n}\n\nFilterRow.propTypes = {\n  path: PropTypes.string,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  searchAlbum: state.searchAlbum,\n  responseMusics: state.responseMusics,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  sortMusic: (sorted) => dispatch(sortMusicAct(sorted)),\n  sortFavoriteMusic: (sorted) => dispatch(sortFavoriteMusicsAct(sorted)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(FilterRow));\n\n//\n","export const playAudio = ({ currentTarget }) => {\n  const url = currentTarget.attributes.name.value;\n  const players = document.querySelectorAll('audio');\n\n  players.forEach((player) => {\n    const { id, paused } = player;\n    if (paused === false) return player.pause();\n\n    const targetPlayer = id === url;\n    if (targetPlayer) return player.play();\n  });\n};\n\nexport const placeSelectedClass = ({ target }) => {\n  const classToFind = document.querySelector('.selectedMusic');\n\n  const addClass = target.classList.add('selectedMusic');\n\n  if (classToFind) {\n    const excClass = classToFind.classList.remove('selectedMusic');\n    return excClass && addClass;\n  }\n  return addClass;\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { GiPauseButton } from 'react-icons/gi';\nimport { IoPlaySharp } from 'react-icons/io5';\nimport { playAudio } from '../helpers/play-pause-inside-album-or-fav/player';\n\nclass ButtonPlay extends Component {\n  render() {\n    const {\n      previewUrl,\n      i,\n      handlePlayIcon,\n      handlePauseIcon,\n      played: { name },\n      musicsToPlayer: { played: { status: songGlobStatus } },\n    } = this.props;\n\n    return (\n      <div className=\"divTrackNumber\">\n\n        {\n          name === previewUrl && songGlobStatus\n            ? (\n              <img className=\"tp-icon\" src=\"https://open.scdn.co/cdn/images/equaliser-green.1184ed87.svg\" alt=\"Actual music played icon\" />\n            )\n            : <p className=\"trackNumber font-link\">{ i + 1 }</p>\n        }\n\n        <label htmlFor={ previewUrl }>\n          {\n            (name === previewUrl) && (songGlobStatus)\n              ? (\n                <GiPauseButton\n                  name={ previewUrl }\n                  className=\"focusable trackPlayIcon trackPauseIcon fs-15\"\n                  onClick={ (e) => {\n                    handlePauseIcon(e);\n                    playAudio(e);\n                  } }\n                />\n              )\n              : (\n                <IoPlaySharp\n                  name={ previewUrl }\n                  className=\"focusable trackPlayIcon\"\n                  onClick={ (e) => {\n                    handlePlayIcon(e);\n                    playAudio(e);\n                  } }\n                />\n              )\n          }\n        </label>\n      </div>\n    );\n  }\n}\n\nButtonPlay.propTypes = {\n  favoritesPath: PropTypes.string,\n  i: PropTypes.number,\n  path: PropTypes.string,\n  previewUrl: PropTypes.string,\n  trackNumber: PropTypes.string,\n  playAudio: PropTypes.func,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({ musicsToPlayer: state.musicsToPlayer });\n\nexport default connect(mapStateToProps)(ButtonPlay);\n","import { convertMillsToMin, convertMillsToSeconds } from '../songTime';\n// This function controls verifies when global state for Music Player need to change, following the cases below:\n\n// Global Storage data match with actual sent data?\n// // No: the current Album is sent to Global Storage when user click in Play button at Album or Favorites page.\n\n// // Yes: Data is not sent, global store maintain unchanged.\n\nconst newTrackStructure = (tracks, musicsGlobalState, setMusicPlayer) => {\n  // When musicsGlobalState has some data, we need to verify the content;\n  if (musicsGlobalState.length > 0) {\n    // musicStateVerifier is a boolean, so, in the musicStateVerifier:\n    // 1 - while i(index) of musicsGlobalState is minor than tracks length goes to the next step;\n    // 2 - trackName in tracks must include trackName of musicsGlobalState;\n    // 3 - tracks tracks must be in the same order as musicsGlobalState, trackName parameter is used to verify;\n\n    const musicStateVerifier = musicsGlobalState\n      .every(({ trackName }, i) => i < tracks.length\n    && (tracks[i].trackName).includes(trackName)\n    && tracks[i].trackName === trackName);\n\n    // all verification results are True: the function should do nothing and the globalState should be unchanged;\n    if (musicStateVerifier) { return 'Do nothing!'; }\n  }\n\n  // some verification results are False: the function remodel the data structure and set MusicsPlayer to global store.\n  const musicTracksToGlobal = tracks.map((trk) => {\n    const { trackTimeMillis } = trk;\n    const minutes = convertMillsToMin(trackTimeMillis);\n    const seconds = convertMillsToSeconds(trackTimeMillis);\n\n    return {\n      ...trk,\n      trackDuration: `${minutes}:${seconds}`,\n    };\n  });\n\n  setMusicPlayer(musicTracksToGlobal);\n  return musicTracksToGlobal;\n};\n\nexport default newTrackStructure;\n","const playedSongsStruct = (trackData, songs, songUrl, setPlayedSongs) => {\n  if (trackData === 'Do nothing!') {\n    const trackFilter2 = songs.filter(({ previewUrl }) => previewUrl === songUrl)[0];\n    setPlayedSongs({ ...trackFilter2, status: true, name: songUrl });\n    return { ...trackFilter2, status: true, name: songUrl };\n  }\n\n  const trackFilter = trackData.filter(({ previewUrl }) => previewUrl === songUrl)[0];\n  setPlayedSongs({ ...trackFilter, status: true, name: songUrl });\n  return { ...trackFilter, status: true, name: songUrl };\n};\n\nexport default playedSongsStruct;\n\n// NEED TO REFACTOR PLAYEDSONGSSTRUCT AND DOCUMENTATION THIS FUNCTION\n","import PropTypes from 'prop-types';\nimport { FaHeart, FaRegHeart } from 'react-icons/fa';\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { placeSelectedClass } from '../helpers/play-pause-inside-album-or-fav/player';\nimport { convertMillsToMin, convertMillsToSeconds } from '../helpers/songTime';\nimport ButtonPlay from './ButtonPlay';\nimport { enableRenderAlbumAct, setMusicsToPlayerAct, setSongPlayedAct } from '../actions';\nimport newTrackStructure from '../helpers/dataStructure/newTrackStructure';\nimport playedSongsStruct from '../helpers/dataStructure/playedSongsStruct';\n\nclass MusicMap extends Component {\n  state = { played: { status: false, name: '' } }\n\n  componentDidUpdate(_prevProps, prevState) {\n    const { played: { trackId } } = prevState;\n    const { musicsToPlayer: { played: playedGlobal } } = this.props;\n\n    if (trackId !== playedGlobal.trackId) { this.setState({ played: playedGlobal }); }\n  }\n\n  handlePlayIcon = ({ currentTarget }) => {\n    const { tracks, setMusicPlayer,\n      musicsToPlayer: { songs }, setPlayedSongs } = this.props;\n    const songUrl = currentTarget.attributes.name.value;\n    const trackData = newTrackStructure(tracks, songs, setMusicPlayer);\n    const played = playedSongsStruct(trackData, songs, songUrl, setPlayedSongs);\n    this.setState(({ played }));\n  }\n\n  handlePauseIcon = () => {\n    const { setPlayedSongs } = this.props;\n    const { played } = this.state;\n\n    setPlayedSongs({ ...played, status: false });\n    this.setState(({ played: prevPlayed }) => (\n      { played: { ...prevPlayed, status: false } }\n    ));\n  };\n\n  handleFavorites = () => {\n    const { responseMusics: { favoritesToSidebar } } = this.props;\n    return favoritesToSidebar.map((sng) => sng.trackId);\n  }\n\n  handleArtistNameLink = () => {\n    const { enableRender } = this.props;\n    enableRender(true);\n  }\n\n  render() {\n    const { handleCheck, handleReload, match: { path }, tracks,\n      musicsToPlayer: { played: playedGlobal },\n    } = this.props;\n    const { played } = this.state;\n    const favoritesPath = '/favorites';\n\n    return (\n      <div>\n        {\n          tracks && tracks.map((artist, i) => {\n            const {\n              artistName,\n              artworkUrl60,\n              collectionName,\n              collectionId,\n              previewUrl,\n              trackId,\n              trackName,\n              trackNumber,\n              trackTimeMillis,\n            } = artist;\n            const minutes = convertMillsToMin(trackTimeMillis);\n            const seconds = convertMillsToSeconds(trackTimeMillis);\n\n            return (\n              <div\n                className=\"focusMusicRow\"\n                role=\"button\"\n                key={ trackId }\n                tabIndex=\"-1\"\n                onClick={ (e) => placeSelectedClass(e) }\n                aria-hidden\n              >\n                <div className=\"musicRow notFocusable\">\n                  <ButtonPlay\n                    trackNumber={ trackNumber }\n                    previewUrl={ previewUrl }\n                    i={ i }\n                    handlePlayIcon={ this.handlePlayIcon }\n                    handlePauseIcon={ this.handlePauseIcon }\n                    played={ played }\n                  />\n\n                  {\n                    path === favoritesPath\n                    && (\n                      <div className=\"miniAlbumImage\">\n                        <img\n                          src={ artworkUrl60 }\n                          alt=\"mini album pic\"\n                          className=\"miniAlbumImage\"\n                        />\n                      </div>\n                    )\n                  }\n\n                  {\n                    path === favoritesPath\n                      ? (\n                        <div className=\"musicAndArtist\">\n                          <div className=\"divToEllipsis\">\n                            <p\n                              className={\n                                playedGlobal?.status && played?.trackId === trackId\n                                  ? 'musicName ellipsis songplayed-in-album'\n                                  : 'musicName ellipsis'\n                              }\n                            >\n                              { trackName }\n                            </p>\n                            <Link\n                              className=\"linkStyle focusableLink ellipsis\"\n                              key={ collectionId }\n                              to={ `/album/${collectionId}` }\n                              onClick={ this.handleArtistNameLink }\n                            >\n                              <p\n                                className=\"artistName ellipsis fitLinkContent\"\n                              >\n                                { artistName }\n                              </p>\n                              {' '}\n                            </Link>\n                          </div>\n                        </div>\n                      )\n                      : (\n                        <div className=\"musicAndArtistAlbum\">\n                          <div className=\"\">\n                            <p\n                              className={\n                                playedGlobal?.status && played?.trackId === trackId\n                                  ? 'musicName ellipsis songplayed-in-album'\n                                  : 'musicName ellipsis'\n                              }\n                            >\n                              { trackName }\n                            </p>\n                            <Link\n                              className=\"linkStyle focusableLink\"\n                              key={ collectionId }\n                              to=\"/search\"\n                              onClick={ this.handleArtistNameLink }\n                            >\n                              <p\n                                className=\"artistName ellipsis widthRestriction\"\n                              >\n                                { artistName }\n                              </p>\n                            </Link>\n                          </div>\n                        </div>\n                      )\n                  }\n\n                  {\n                    path === favoritesPath\n                    && (\n                      <div className=\"albumFilter\">\n                        <div className=\"divToEllipsis\">\n                          <Link\n                            className=\"linkStyle focusableLink ellipsis\"\n                            key={ collectionId }\n                            to={ `/album/${collectionId}` }\n                          >\n                            <p\n                              className=\"artistName ellipsis\"\n                            >\n                              {collectionName}\n                            </p>\n                          </Link>\n                        </div>\n                      </div>\n                    )\n                  }\n\n                  <div className=\"filterRight\">\n                    <label htmlFor={ trackId } className=\"previewFavorite\">\n                      {\n                        this.handleFavorites().includes(trackId)\n                          ? (\n                            <FaHeart\n                              className=\"focusable heartColor hi-fi\"\n                            />\n                          )\n                          : <FaRegHeart className=\"heartIcon hi-fi\" />\n                      }\n                      <input\n                        type=\"checkbox\"\n                        name=\"\"\n                        id={ trackId }\n                        data-testid={ `checkbox-music-${trackId}` }\n                        onChange={ () => {\n                          handleCheck(artist, trackId);\n                          handleReload();\n                        } }\n                        checked={ this.handleFavorites().includes(trackId) }\n                        hidden\n                      />\n                    </label>\n                    <div className=\"musicDuration\">\n                      <p className=\"artistName font-link\">{ `${minutes}:${seconds}` }</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })\n        }\n      </div>\n    );\n  }\n}\n\nMusicMap.propTypes = {\n  albumTracks: PropTypes.oneOfType([PropTypes.array]),\n  checkedAndFavorite: PropTypes.oneOfType([PropTypes.array]),\n  handleCheck: PropTypes.func,\n  path: PropTypes.string,\n  enableRender: PropTypes.func,\n  handleReload: PropTypes.func,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  searchAlbum: state.searchAlbum,\n  responseMusics: state.responseMusics,\n  musicsToPlayer: state.musicsToPlayer,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  enableRender: (bool) => dispatch(enableRenderAlbumAct(bool)),\n  setMusicPlayer: (arr) => dispatch(setMusicsToPlayerAct(arr)),\n  setPlayedSongs: (objInsidePlayed) => dispatch(setSongPlayedAct(objInsidePlayed)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MusicMap));\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FilterRow from './FilterRow';\nimport MusicMap from './MusicMap';\n\nclass MusicCard extends Component {\n  render() {\n    const {\n      match: { path },\n      responseMusics: { tracks, favorites },\n    } = this.props;\n\n    return (\n      <div className=\"listMusic listMusicMobile\">\n        <FilterRow path={ path } />\n\n        <hr className=\"horizontalRow\" />\n\n        {\n          path === '/album/:id'\n            ? (\n              <MusicMap tracks={ tracks } { ...this.props } />\n            )\n            : (\n              <MusicMap tracks={ favorites } { ...this.props } />\n            )\n        }\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  path: PropTypes.string,\n}.isRequired;\n\nexport default connect()(MusicCard);\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { totalAlbumTime } from '../helpers/songTime';\nimport '../styles/albumHeaderDetails.css';\nimport { enableRenderAlbumAct, inputSearchAct } from '../actions';\n\nclass AlbumHeaderDetails extends Component {\n  albumYear = (year) => year.split('-')[0];\n\n  sideInfoTracks = (tracks) => tracks.length;\n\n  albumTime = () => {\n    this.setState((prevState) => ({\n      albumTrackTime: prevState.albumTrackTime + 1,\n    }));\n  }\n\n  handleArtistNameLink = (artist) => {\n    const { enableRender, inputSearchGlobal } = this.props;\n    inputSearchGlobal(artist);\n    enableRender(true);\n  }\n\n  render() {\n    const {\n      responseMusics:\n        { albumCollection:\n          { artistName, artworkUrl100, releaseDate, userImage },\n        tracks,\n        favorites,\n        },\n      location: { pathname },\n    } = this.props;\n\n    const favoritesPath = '/favorites';\n\n    return (\n      <div className=\"artistDetails\">\n        {\n          !userImage\n            ? (<img src={ artworkUrl100 } alt=\"\" />)\n            : (<img src={ userImage } alt=\"Profile pic\" />)\n        }\n        {\n          pathname === favoritesPath\n            ? (\n              <Link className=\"linkStyle focusableLink\" to=\"/profile\">\n                <h5 className=\"headerUserOrArtistName\">{artistName}</h5>\n              </Link>\n            )\n            : (\n              <Link\n                className=\"linkStyle focusableLink\"\n                to=\"/search\"\n                onClick={ () => this.handleArtistNameLink(artistName) }\n              >\n                <h5 className=\"headerUserOrArtistName\">{artistName}</h5>\n              </Link>\n            )\n        }\n        <h5 className=\"headingListStyle\">•</h5>\n        <h5>{this.albumYear(releaseDate)}</h5>\n\n        {\n          pathname === favoritesPath\n            ? (\n              <div className=\"albumSideInfo\">\n                <h5 className=\"headingListStyle \">•</h5>\n                <h5>\n                  {this.sideInfoTracks(favorites)}\n                  {' '}\n                  songs,\n                </h5>\n                <h5\n                  className=\"headingListStyle timerHD font-link\"\n                >\n                  {totalAlbumTime(favorites)}\n\n                </h5>\n              </div>\n            )\n            : (\n              <div className=\"albumSideInfo\">\n                <h5 className=\"headingListStyle \">•</h5>\n                <h5>\n                  {this.sideInfoTracks(tracks)}\n                  {' '}\n                  songs,\n                </h5>\n                <h5\n                  className=\"headingListStyle timerHD font-link\"\n                >\n                  {totalAlbumTime(tracks)}\n\n                </h5>\n              </div>\n            )\n        }\n\n      </div>\n    );\n  }\n}\n\nAlbumHeaderDetails.propTypes = {\n  album: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  enableRender: (bool) => dispatch(enableRenderAlbumAct(bool)),\n  inputSearchGlobal: (inputValue) => dispatch(inputSearchAct(inputValue)),\n});\n\nexport default connect(null, mapDispatchToProps)(AlbumHeaderDetails);\n","import { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { enableRender } from '../helpers/artist-music-global';\n\nclass PageController extends Component {\n  albumOrFavPathVerifier = () => {\n    const { history: { location: { pathname } } } = this.props;\n\n    const albumPath = window.location.href.includes('/album');\n    const favoritesPath = window.location.href.includes('/favorites');\n    const albumCondition = pathname !== albumPath;\n    const favoritesCondition = pathname !== favoritesPath;\n    if (albumCondition && favoritesCondition) { return true; } return false;\n  }\n\n  previousPageButton = () => {\n    const { history: { goBack } } = this.props;\n    goBack();\n\n    const condition = this.albumOrFavPathVerifier();\n    if (condition) { enableRender(true); }\n  }\n\n  nextPageButton = () => {\n    const { history: { goForward } } = this.props;\n    goForward();\n\n    const condition = this.albumOrFavPathVerifier();\n    if (condition) { enableRender(true); }\n  }\n\n  render() {\n    return (\n      <div className=\"page-control\">\n        <div\n          role=\"button\"\n          className=\"control\"\n          onClick={ this.previousPageButton }\n          tabIndex=\"-1\"\n          onKeyUp={ () => {} }\n          aria-label=\"controller-button-page-back\"\n        >\n          <FontAwesomeIcon icon={ faAngleLeft } className=\"faCentralizer\" />\n        </div>\n        <div\n          role=\"button\"\n          className=\"control\"\n          onClick={ this.nextPageButton }\n          tabIndex=\"-1\"\n          onKeyUp={ () => {} }\n          aria-label=\"controller-button-page-forward\"\n        >\n          <FontAwesomeIcon icon={ faAngleRight } className=\"faCentralizer\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nPageController.propTypes = {\n  history: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n}.isRequired;\n\nexport default withRouter(PageController);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUser } from '../services/userAPI';\n\nclass ProfileHeader extends Component {\n  state = {\n    name: '',\n    image: 'https://i.pinimg.com/474x/86/0d/cd/860dcdf5cd536bfd86d8fc86efdbdd18.jpg',\n  };\n\n  componentDidMount() {\n    this.catchUser();\n  }\n\n  async catchUser() {\n    const user = await getUser();\n\n    this.setState(() => {\n      if (user.image.length > 0) {\n        return ({\n          isLoading: false,\n          name: user.name,\n          image: user.image,\n        });\n      }\n      return {\n        isLoading: false,\n        name: user.name,\n      };\n    });\n  }\n\n  render() {\n    const { name, image } = this.state;\n\n    return (\n      <Link\n        to=\"/profile\"\n        className=\"linkStyle linkToProfileTopsideBar\"\n      >\n        <div className=\"showUserBar\">\n          <img\n            src={ image }\n            alt=\"profile icon\"\n            className=\"image-icon\"\n          />\n          <p data-testid=\"header-user-name\" className=\"ellipsis\">{ name }</p>\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default ProfileHeader;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { RiSearchLine } from 'react-icons/ri';\nimport fetchAlbumInRedux from '../thunk/fetchAlbumInRedux';\nimport { inputSearchAct } from '../actions';\n\nclass InputSearch extends Component {\n  activateBlur = (e) => {\n    e.preventDefault();\n\n    const { key, keyCode } = e;\n    const THIRTHEEN = 13;\n    const enter = (keyCode === THIRTHEEN || key === 'Enter');\n    // let inputValue = e.target.value;\n    if (enter) {\n      // inputSearchGlobal(inputValue);\n      // searchAlbumGlobal(inputValue);\n      e.target.blur();\n      e.target.value = '';\n      return e.target.value;\n    }\n    return e.target.value;\n  }\n\n  render() {\n    const { match: { path } } = this.props;\n\n    const pathAlbum = '/album/:id';\n    const pathFavorites = '/favorites';\n\n    const { handleClick, handleChange, inputSearch,\n      // isButtonDisabled,\n    } = this.props;\n\n    return (\n      <div className=\"search-hero\">\n        <form action=\"\" onSubmit={ (e) => handleClick(e) }>\n\n          {\n            (path !== pathAlbum && path !== pathFavorites)\n          && (\n            <label htmlFor=\"buttonSearch\" className=\"labelInputSearch\">\n              <RiSearchLine className=\"glassInputSearch\" />\n              <input\n                type=\"text\"\n                id=\"buttonSearch\"\n                name=\"inputSearch\"\n                placeholder=\"Artists, songs or podcasts...\"\n                className=\"inputSearch\"\n                data-testid=\"search-artist-input\"\n                value={ inputSearch }\n                onChange={ handleChange }\n                // onBlur={ (e) => this.activateBlur(e) }\n                onKeyUp={ (e) => this.activateBlur(e) }\n                autoComplete=\"off\"\n              />\n            </label>\n          )\n          }\n        </form>\n      </div>\n    );\n  }\n}\n\nInputSearch.propTypes = {\n  inputSearchGlobal: PropTypes.func,\n  searchAlbumGlobal: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  inputSearchGlobal: (inputValue) => dispatch(inputSearchAct(inputValue)),\n  searchAlbumGlobal: (inputValue) => dispatch(fetchAlbumInRedux(inputValue)),\n});\n\nexport default connect(null, mapDispatchToProps)(withRouter(InputSearch));\n","import '../styles/topsideBar.css';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PageController from './PageController';\nimport ProfileHeader from './ProfileHeader';\nimport InputSearch from './InputSearch';\n\nclass TopsideBar extends Component {\n  render() {\n    const { location: { pathname } } = this.props;\n\n    switch (true) {\n    case pathname === '/search':\n      return (\n        <div className=\"controller-hero padding-search\">\n          <PageController />\n          <InputSearch { ...this.props } />\n          <ProfileHeader />\n        </div>\n      );\n    default:\n      return (\n        <div className=\"controller-hero\">\n          <PageController />\n          <InputSearch { ...this.props } />\n          <ProfileHeader />\n        </div>\n      );\n    }\n  }\n}\n\nTopsideBar.propTypes = {\n  location: PropTypes.string,\n}.isRequired;\n\nexport default withRouter(TopsideBar);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { ColorExtractor } from 'react-color-extractor';\n\nexport default class ColorExtracted extends Component {\n  render() {\n    const { getColors, artistName, artworkUrl100 } = this.props;\n\n    return (\n      <ColorExtractor rgb getColors={ getColors }>\n        <img\n          src={ artworkUrl100.replace('100x100bb.jpg', '600x600bb.jpg') }\n          alt={ `Album cover of ${artistName}` }\n          className=\"imageBackground\"\n        />\n      </ColorExtractor>\n    );\n  }\n}\n\nColorExtracted.propTypes = {\n  artistName: PropTypes.string,\n  artworkUrl100: PropTypes.string,\n  getColors: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n}.isRequired;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AlbumHeaderDetails from './AlbumHeaderDetails';\nimport TopsideBar from './TopsideBar';\nimport ColorExtracted from './ColorExtracted';\n\nclass AlbumHeader extends Component {\n  state= { colors: [] };\n\n  componentDidUpdate() {\n    const { colors } = this.state;\n    const { gradientColorHandler } = this.props;\n    gradientColorHandler(colors); // apenas para jogar a cor gradiente para fora\n  }\n\n  getColors = (colors) => {\n    const SIX = 6;\n    if (colors.length === SIX) {\n      return this\n        .setState({ colors: [] },\n          () => this\n            .setState((state) => ({ colors: [...state.colors, ...colors] })));\n    }\n    this.setState((state) => ({ colors: [...state.colors, ...colors] }));\n  }\n\n  render() {\n    const {\n      responseMusics:\n      { albumCollection:\n        { artistName, collectionName, artworkUrl100 },\n      },\n      // gradientColorHandler,\n    } = this.props;\n\n    const { colors } = this.state;\n    // gradientColorHandler(colors);\n\n    return (\n      <section\n        className=\"albumHeader gradHeader\"\n        data-testid=\"page-album\"\n        style={ {\n          backgroundColor: colors.length !== 0\n            && `rgb(${colors[0][0]}, ${colors[0][1]}, ${colors[0][2]}, 0.4)`,\n        } }\n      >\n        <TopsideBar />\n        <h1 className=\"titlePage\" hidden>Album page</h1>\n        <div className=\"contentAlbum\">\n          <div className=\"albumTitle\">\n\n            <div className=\"albumImage\">\n              <ColorExtracted\n                getColors={ this.getColors }\n                artistName={ artistName }\n                artworkUrl100={ artworkUrl100 }\n              />\n            </div>\n\n            <div className=\"albumDetails\">\n              <h6 className=\"albumTitleFixed\">ALBUM</h6>\n              <h1\n                className=\"albumName albumTitleFixed ellipsis\"\n                data-testid=\"album-name\"\n                hidden\n              >\n                {`Collection Name ${collectionName}`}\n              </h1>\n\n              <h2\n                className=\"albumName albumTitleFixed\"\n              >\n                {collectionName}\n              </h2>\n              <AlbumHeaderDetails { ...this.props } />\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nAlbumHeader.propTypes = {\n  album: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  responseMusics: state.responseMusics,\n});\n\nexport default connect(mapStateToProps)(AlbumHeader);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport '../styles/album.css';\nimport AlbumHeader from '../components/AlbumHeader';\nimport {\n  inputSearchAct,\n  responseMusicsAct,\n  saveAlbumNameAct,\n  saveFavoriteMusicsAct,\n} from '../actions';\nimport fetchAlbumInRedux from '../thunk/fetchAlbumInRedux';\n\nclass Album extends Component {\n  constructor() {\n    super();\n\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleLoad = this.handleLoad.bind(this);\n    this.fetchMusic = this.fetchMusic.bind(this);\n    this.fetchFavoriteSongs = this.fetchFavoriteSongs.bind(this);\n    this.handleReload = this.handleReload.bind(this);\n\n    this.state = {\n      isLoading: true,\n      album: {},\n      albumTracks: [],\n      checked: [],\n      favoriteSongs: [],\n      checkedAndFavorite: [],\n      albumTrackTime: [],\n      forceReload: false,\n      isHeaderLoading: false,\n      url: '',\n      colors: [],\n    };\n  }\n\n  async componentDidMount() {\n    const { checked } = this.state;\n    const {\n      saveResponseMusics,\n      saveAlbumName,\n      inputSearchGlobal,\n      searchAlbumGlobal,\n    } = this.props;\n\n    const music = await this.fetchMusic();\n    const idFavoriteSongs = await this.fetchFavoriteSongs();\n\n    inputSearchGlobal(music[0].artistName);\n    searchAlbumGlobal(music[0].artistName);\n    saveAlbumName(music[0]);\n    saveResponseMusics(music.slice(1));\n\n    this.setState({\n      album: music[0], // sempre o primeiro item do array é o album com as infos\n      albumTracks: music.slice(1), // a partir daqui é apenas música\n      isLoading: false,\n      favoriteSongs: idFavoriteSongs,\n      checkedAndFavorite: [...idFavoriteSongs, ...checked],\n    });\n  }\n\n  handleLoad() {\n    this.setState((prevState) => ({\n      isLoading: !prevState.isLoading,\n    }));\n  }\n\n  handleReload() {\n    this.setState((prevState) => ({\n      forceReload: !prevState.forceReload,\n    }));\n  }\n\n  async handleCheck(artist, id) {\n    const { checkedAndFavorite } = this.state;\n    const { saveFavoriteMusics } = this.props;\n    if (checkedAndFavorite.includes(id)) {\n      // bool\n      const filter = this.filterChecked(checkedAndFavorite, id); // dentro do setState novo\n\n      // this.handleLoad();\n      await removeSong(artist);\n      // this.handleLoad(); // poderei tirar esse loading daqui\n\n      this.setState({\n        checkedAndFavorite: filter,\n      });\n\n      const favorites = await getFavoriteSongs();\n      saveFavoriteMusics(favorites);\n    } else {\n      // this.handleLoad();\n      await addSong(artist);\n      // this.handleLoad();\n\n      this.setState((prevState) => ({\n        checkedAndFavorite: [...prevState.checkedAndFavorite, id],\n      }));\n\n      const favorites = await getFavoriteSongs();\n      saveFavoriteMusics(favorites);\n    }\n  }\n\n  gradientColorHandler = (arr) => {\n    this.setState({ colors: arr });\n  }\n\n  async fetchMusic() {\n    const { match: { params: { id } } } = this.props;\n    const search = await getMusics(id);\n    return search;\n  }\n\n  async fetchFavoriteSongs() {\n    const favorites = await getFavoriteSongs();\n    const idFavoriteSongs = favorites.map(({ trackId }) => trackId);\n    return idFavoriteSongs;\n  }\n\n  filterChecked(arr, id2) {\n    const filtered = arr.filter((musicId) => musicId !== id2);\n    return filtered;\n  }\n\n  render() {\n    const { album: { artistName }, isLoading, colors } = this.state;\n\n    return (\n      <div className=\"headerPattern\">\n        {\n          isLoading\n            ? <Loading />\n            : (\n              <section data-testid=\"page-album\" className=\"album\">\n                <AlbumHeader\n                  { ...this.state }\n                  { ...this.props }\n                  gradientColorHandler={ this.gradientColorHandler }\n                />\n\n                <section className=\"albumContent gradContent\">\n                  <p data-testid=\"artist-name\" hidden>{ `Artist Name ${artistName}`}</p>\n\n                  <div\n                    className=\"bottom-grad\"\n                    style={ {\n                      backgroundImage: colors.length !== 0\n                        && `linear-gradient(\n                          rgb(${colors[0][0]}, ${colors[0][1]}, ${colors[0][2]}, 0.4) 0,\n                          #121212)`,\n                    } }\n                  />\n                  <MusicCard\n                    { ...this.state }\n                    { ...this.props }\n                    handleCheck={ this.handleCheck }\n                    handleLoad={ this.handleLoad }\n                    handleReload={ this.handleReload }\n                  />\n                </section>\n              </section>\n            )\n        }\n\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  saveFavoriteMusics: PropTypes.func,\n  saveResponseMusics: PropTypes.func,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  responseMusics: state.responseMusics,\n  url: state.url,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveResponseMusics: (response) => dispatch(responseMusicsAct(response)),\n  saveFavoriteMusics: (favorites) => dispatch(saveFavoriteMusicsAct(favorites)),\n  saveAlbumName: (albumName) => dispatch(saveAlbumNameAct(albumName)),\n  inputSearchGlobal: (inputValue) => dispatch(inputSearchAct(inputValue)),\n  searchAlbumGlobal: (inputValue) => dispatch(fetchAlbumInRedux(inputValue)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Album));\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { responseMusicsAct, saveAlbumNameAct, saveFavoriteMusicsAct } from '../actions';\nimport AlbumHeader from '../components/AlbumHeader';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport { getUser } from '../services/userAPI';\n\nclass Favorites extends Component {\n  constructor() {\n    super();\n\n    this.handleLoad = this.handleLoad.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleLoad = this.handleLoad.bind(this);\n    this.filterChecked = this.filterChecked.bind(this);\n    this.favoriteHeader = this.favoriteHeader.bind(this);\n    this.handleReload = this.handleReload.bind(this);\n\n    this.state = ({\n      isLoading: true,\n      albumTracks: [],\n      checkedAndFavorite: [],\n      album: {},\n      forceReload: false,\n      colors: [],\n    });\n  }\n\n  async componentDidMount() {\n    await this.favoriteHeader();\n    await this.getFavoriteAndRemoveFromList();\n  }\n\n  handleLoad = () => {\n    this.setState((prevState) => ({\n      isLoading: !prevState.isLoading,\n    }));\n  }\n\n  handleReload() {\n    this.setState((prevState) => ({\n      forceReload: !prevState.forceReload,\n    }));\n  }\n\n  async handleCheck(artist, id) {\n    const { checkedAndFavorite } = this.state;\n    if (checkedAndFavorite.includes(id)) {\n      // this.handleLoad();\n      await removeSong(artist);\n\n      await this.getFavoriteAndRemoveFromList();\n    }\n  }\n\n  async getFavoriteAndRemoveFromList() {\n    const { saveFavoriteMusics } = this.props;\n\n    const favorites = await getFavoriteSongs();\n    const idFavoriteSongs = favorites.map(({ trackId }) => trackId);\n\n    saveFavoriteMusics(favorites);\n    this.setState({\n      albumTracks: favorites,\n      checkedAndFavorite: [...idFavoriteSongs],\n      isLoading: false,\n    });\n  }\n\n  gradientColorHandler = (arr) => {\n    this.setState({ colors: arr });\n  }\n\n  filterChecked(arr, id2) {\n    const filtered = arr.filter((musicId) => musicId !== id2);\n    return filtered;\n  }\n\n  async favoriteHeader() {\n    const { saveAlbumName } = this.props;\n    const currentYear = new Date().getFullYear();\n    const user = await getUser();\n\n    const albumFake = {\n      artistName: user.name,\n      userImage: user.image,\n      favoriteTitle: 'PLAYLIST',\n      collectionName: 'Liked Songs',\n      artworkUrl100: 'https://t.scdn.co/images/3099b3803ad9496896c43f22fe9be8c4.png',\n      releaseDate: currentYear.toString(),\n    };\n\n    this.setState({\n      album: albumFake,\n    });\n\n    saveAlbumName(albumFake);\n  }\n\n  render() {\n    const { isLoading, colors } = this.state;\n\n    return (\n      <div data-testid=\"page-favorite\" className=\"headerPattern\">\n        {\n          isLoading\n            ? <Loading />\n            : (\n              <section className=\"album\">\n                <AlbumHeader\n                  { ...this.state }\n                  { ...this.props }\n                  gradientColorHandler={ this.gradientColorHandler }\n                />\n\n                <section className=\"albumContent gradContent sizeContent\">\n\n                  <div\n                    className=\"bottom-grad\"\n                    style={ {\n                      backgroundImage: colors.length !== 0\n                        && `linear-gradient(\n                          rgb(${colors[0][0]}, ${colors[0][1]}, ${colors[0][2]}, 0.4) 0,\n                          #121212)`,\n                    } }\n                  />\n                  <MusicCard\n                    { ...this.props }\n                    { ...this.state }\n                    handleCheck={ this.handleCheck }\n                    handleReload={ this.handleReload }\n                  />\n                </section>\n              </section>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nFavorites.propTypes = {\n  saveFavoriteMusics: PropTypes.func,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  responseMusics: state.responseMusics,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveResponseMusics: (response) => dispatch(responseMusicsAct(response)),\n  saveFavoriteMusics: (favorites) => dispatch(saveFavoriteMusicsAct(favorites)),\n  saveAlbumName: (albumName) => dispatch(saveAlbumNameAct(albumName)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);\n","export default __webpack_public_path__ + \"static/media/spotify-logo-login-color.4f8bc335.svg\";","import React, { Component } from 'react';\nimport '../styles/loadingLogin.css';\n\nexport default class LoadingLogin extends Component {\n  render() {\n    return (\n      <div className=\"blocksLogin\">\n        <div className=\"titleModalLogin\">\n          <h1>Loading...</h1>\n        </div>\n        {/*\n          Spinner art by Melissa Em in October 7, 2019\n          https://freefrontend.com/css-spinners/\n          Made with\n          HTML / CSS\n          https://codepen.io/meowwwls/pen/OJJPbGb\n        */}\n        <div className=\"blockLogin greenLogin\" />\n        <div className=\"blockLogin whiteLogin\" />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Input from '../components/Input';\nimport '../styles/login.css';\nimport '../styles/loadingLogin.css';\nimport { createUser } from '../services/userAPI';\nimport SpotifyLogo from '../images/spotify-logo-login-color.svg';\nimport LoadingLogin from '../components/LoadingLogin';\nimport GithubButton from '../components/buttons/GithubButton';\nimport LinkedinButton from '../components/buttons/LinkedinButton';\nimport DocButton from '../components/buttons/DocButton';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleChanges = this.handleChanges.bind(this);\n    this.handleEffects = this.handleEffects.bind(this);\n\n    this.state = {\n      inputLogin: '',\n      inputPassword: '',\n      isSubmitBttIsDisabled: true,\n      isLoading: true,\n      authorized: false,\n      lengthLogin: 0,\n      lengthPassword: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: false,\n    });\n  }\n\n  handleChanges({ target: { name, value } }) {\n    if (name === 'inputPassword') {\n      this.setState({\n\n        lengthPassword: value.length,\n        [name]: value,\n      }, () => this.handleEffects());\n    }\n\n    if (name === 'inputLogin') {\n      this.setState({\n\n        lengthLogin: value.length,\n        [name]: value,\n      }, () => this.handleEffects());\n    }\n  }\n\n  handleEffects() {\n    const THREE = 3;\n    const { lengthLogin, lengthPassword } = this.state;\n    const newLoginVerification = lengthLogin >= THREE && lengthPassword >= THREE;\n\n    this.setState({\n      isSubmitBttIsDisabled: !newLoginVerification,\n    });\n  }\n\n  render() {\n    const {\n      inputLogin,\n      inputPassword,\n      isSubmitBttIsDisabled,\n      isLoading,\n      authorized,\n    } = this.state;\n\n    const defaultImg = 'https://i.pinimg.com/474x/86/0d/cd/860dcdf5cd536bfd86d8fc86efdbdd18.jpg';\n    const neuralLogo = '<n4/>';\n\n    return (\n      isLoading\n        ? (\n          <div>\n            <LoadingLogin />\n          </div>\n        )\n        : (\n          <div>\n            <div className=\"page-login\" data-testid=\"page-login\">\n              <div className=\"login-logo-title\">\n                <img src={ SpotifyLogo } alt=\"Spotify Logo\" className=\"llt-i\" />\n                <h1 className=\"login-name\">\n                  <span className=\"span-ln\">by</span>\n                  {neuralLogo}\n                </h1>\n              </div>\n              <br />\n              <form action=\"\" className=\"login-inputs\">\n                <Input\n                  id=\"inputLogin\"\n                  className=\"inputLogin\"\n                  data-testid=\"login-name-input\"\n                  name=\"inputLogin\"\n                  onChange={ this.handleChanges }\n                  placeholder=\"Insert your name...\"\n                  type=\"text\"\n                  value={ inputLogin }\n                  autoComplete=\"off\"\n                />\n\n                <Input\n                  id=\"inputPassword\"\n                  className=\"inputLogin inputPassword\"\n                  name=\"inputPassword\"\n                  onChange={ this.handleChanges }\n                  placeholder=\"Password...\"\n                  type=\"password\"\n                  value={ inputPassword }\n                />\n\n                {\n                  isSubmitBttIsDisabled\n                    ? (\n                      <Input\n                        id=\"loginSubmitButton\"\n                        className=\"loginSubmitButton loginSubmitButtonDisabled\"\n                        data-testid=\"login-submit-button\"\n                        disabled={ isSubmitBttIsDisabled }\n                        name=\"loginSubmitButton\"\n                        type=\"submit\"\n                        value=\"Sign in\"\n                      />\n                    )\n                    : (\n                      <Input\n                        id=\"loginSubmitButton\"\n                        className=\"loginSubmitButton loginSubmitButtonEnabled\"\n                        data-testid=\"login-submit-button\"\n                        disabled={ isSubmitBttIsDisabled }\n                        name=\"loginSubmitButton\"\n                        type=\"submit\"\n                        value=\"Sign in\"\n                        onClick={ async (e) => {\n                          e.preventDefault();\n                          this.setState({ isLoading: true });\n                          await createUser({ name: inputLogin, image: defaultImg });\n                          this.setState({ isLoading: false, authorized: true });\n                        } }\n                      />\n                    )\n                }\n\n                {\n                  authorized && <Redirect to=\"/search\" />\n                }\n              </form>\n            </div>\n\n            <footer className=\"copyright-f\">\n              <div>\n                <GithubButton />\n                <LinkedinButton />\n                <DocButton />\n              </div>\n\n              <p\n                className=\"copyright-p\"\n              >\n                &copy; 2022 Spotify AB Design and Code from neur4l.\n              </p>\n              <p className=\"copyright-p\">All rights reserved.</p>\n            </footer>\n          </div>\n        )\n    );\n  }\n}\n\nexport default Login;\n\n//\n","import React, { Component } from 'react';\nimport '../styles/notFound.css';\n\nclass NotFound extends Component {\n  render() {\n    const notFound = '404: Not found this page :(';\n\n    return (\n      <div>\n        <div className=\"headerPattern\" data-testid=\"page-not-found\">\n          <div className=\"notFoundCentered\">\n            <h1 className=\"titlePage\">{notFound}</h1>\n            <div className=\"easterEggDiv\">\n              <img\n                src=\"https://preview.redd.it/8p9lu946wrb81.jpg?auto=webp&s=5038299dd1c159334be0c3bcc5e57af91a317b66\"\n                alt=\"\"\n                className=\"easterEggImage\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport { getUser } from '../services/userAPI';\nimport '../styles/profile.css';\n\nclass Profile extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      userLoad: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  componentWillUnmount() {\n    this.setState = () => {};\n  }\n\n  handleLoad = (user) => {\n    this.setState((prevState) => ({\n      isLoading: !prevState.isLoading,\n      userLoad: user,\n    }));\n  }\n\n  fetchUser = async () => {\n    const user = await getUser();\n    this.handleLoad(user);\n  }\n\n  render() {\n    const { userLoad: { name, email, image, description }, isLoading } = this.state;\n\n    return (\n      <div className=\"headerPattern\">\n\n        {\n          isLoading ? <Loading />\n            : (\n              <section data-testid=\"page-profile\" className=\"pageProfile  patternPages\">\n                <h1 className=\"titlePage\">Profile page</h1>\n\n                <div className=\"divProfilePicture\">\n\n                  {\n                    image.length > 1\n                      ? (\n                        <img\n                          src={ image }\n                          alt=\"Profile\"\n                          className=\"profilePicture\"\n                          data-testid=\"profile-image\"\n                        />\n                      )\n                      : (\n                        <img\n                          src=\"https://i.pinimg.com/474x/86/0d/cd/860dcdf5cd536bfd86d8fc86efdbdd18.jpg\"\n                          alt=\"Profile\"\n                          className=\"profilePicture\"\n                          data-testid=\"profile-image\"\n                        />\n                      )\n                  }\n                </div>\n\n                <div className=\"cardProfile\">\n\n                  <div className=\"cardDefault\">\n                    <ul>\n                      <li>Name:</li>\n                      <li>E-mail:</li>\n                      <li>Description:</li>\n                    </ul>\n                  </div>\n\n                  <div className=\"cardValue\">\n                    <ul>\n                      <li>{name}</li>\n                      <li>{email}</li>\n                      <li>{description}</li>\n                    </ul>\n                  </div>\n                </div>\n\n                <button\n                  type=\"button\"\n                  className=\"buttonEditProfile\"\n                >\n                  <Link\n                    to=\"/profile/edit\"\n                    className=\"linkStyle\"\n                  >\n                    Edit profile\n\n                  </Link>\n                </button>\n              </section>\n            )\n\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport { getUser, updateUser } from '../services/userAPI';\nimport '../styles/profileEdit.css';\n\nclass ProfileEdit extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      userLoad: [],\n      isButtonDisabled: true,\n      redirect: false,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n    this.buttonVerifier();\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    const { userLoad, infoToUpdate } = this.state;\n\n    let newUserInfo;\n    const destructureUser = { ...userLoad };\n    const destructureInfo = { ...infoToUpdate };\n\n    if (infoToUpdate === undefined) {\n      newUserInfo = destructureUser;\n    } else {\n      newUserInfo = destructureInfo;\n    }\n\n    newUserInfo[name] = value;\n\n    this.setState({\n      infoToUpdate: newUserInfo,\n    }, this.buttonVerifier());\n  }\n\n  handleLoad() {\n    this.setState((prevState) => ({\n      isLoading: !prevState.isLoading,\n    }));\n  }\n\n  fetchUser = async () => {\n    const user = await getUser();\n\n    this.setState({\n      userLoad: user,\n    });\n\n    this.handleLoad();\n\n    return user;\n  }\n\n  handleClick = (e) => {\n    e.preventDefault();\n    const { infoToUpdate } = this.state;\n\n    this.setState({ isLoading: true });\n    updateUser(infoToUpdate);\n    this.setState({\n      isLoading: false,\n      redirect: true,\n    });\n  }\n\n  buttonVerifier = () => {\n    const { infoToUpdate: update } = this.state;\n    const result = { ...update };\n\n    // Se todos forem verdadeiro, botão habilita\n    const boolButton = Object.values(result).every((item) => item);\n\n    // neguei para não usar o prevstate e negar a condição passada, mais linhas para o mesmo\n    this.setState({\n      isButtonDisabled: !boolButton,\n    });\n  }\n\n  render() {\n    const { userLoad: { name, email, image, description },\n      isLoading,\n      isButtonDisabled,\n      redirect,\n    } = this.state;\n\n    return (\n      <div className=\"headerPattern\">\n        {\n          isLoading ? <Loading />\n            : (\n              <div className=\"patternPages\" data-testid=\"page-profile-edit\">\n                <h2 className=\"titlePage\">Edit Profile</h2>\n                <section className=\"formContainer\">\n\n                  <form action=\"\" className=\"formEdit\">\n                    <label htmlFor=\"inputName\">\n                      <div>Name:</div>\n                      <input\n                        type=\"text\"\n                        id=\"inputName\"\n                        name=\"name\"\n                        defaultValue={ name }\n                        onChange={ this.handleChange }\n                        data-testid=\"edit-input-name\"\n                        required\n                        autoComplete=\"off\"\n                      />\n                    </label>\n\n                    <label htmlFor=\"inputEmail\">\n                      <div>E-mail:</div>\n                      <input\n                        type=\"email\"\n                        id=\"inputEmail\"\n                        name=\"email\"\n                        defaultValue={ email }\n                        onChange={ this.handleChange }\n                        data-testid=\"edit-input-email\"\n                        required\n                      />\n                    </label>\n\n                    <label htmlFor=\"inputImage\">\n                      <div>Image:</div>\n                      <input\n                        type=\"text\"\n                        name=\"image\"\n                        id=\"inputImage\"\n                        defaultValue={ image }\n                        onChange={ this.handleChange }\n                        data-testid=\"edit-input-image\"\n                        autoComplete=\"off\"\n                      />\n                    </label>\n\n                    <label htmlFor=\"inputDescription\">\n                      <div>Description:</div>\n                      <input\n                        name=\"description\"\n                        id=\"inputDescription\"\n                        type=\"text\"\n                        maxLength=\"144\"\n                        onChange={ this.handleChange }\n                        data-testid=\"edit-input-description\"\n                        defaultValue={ description }\n                        required\n                        autoComplete=\"off\"\n                      />\n                    </label>\n\n                    <input\n                      id=\"buttonSub\"\n                      className=\"buttonEditProfile\"\n                      type=\"submit\"\n                      value=\"Edit profile\"\n                      onClick={ (e) => this.handleClick(e) }\n                      data-testid=\"edit-button-save\"\n                      disabled={ isButtonDisabled }\n                    />\n\n                    {\n                      redirect && <Redirect to=\"/profile\" />\n                    }\n\n                  </form>\n                </section>\n              </div>\n            )\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class ContentMap extends Component {\n  render() {\n    const { contentToMap } = this.props;\n\n    return (\n      <section className=\"sectionCards\">\n        {\n          contentToMap.map((music) => {\n            const {\n              artistName,\n              artworkUrl100,\n              collectionId,\n              collectionName,\n            } = music;\n\n            return (\n              <Link\n                className=\"linkStyle\"\n                key={ collectionId }\n                to={ `/album/${collectionId}` }\n                data-testid={ `link-to-album-${collectionId}` }\n              >\n                <div className=\"cardMusic\">\n                  <div className=\"imageCard\">\n                    <img\n                      className=\"imageInsideCard\"\n                      src={ artworkUrl100.replace('100x100bb.jpg', '600x600bb.jpg') }\n                      alt={ `Artwork of music ${collectionName}` }\n                    />\n                  </div>\n                  <div className=\"textCard\">\n                    <h5 className=\"ellipsis\">{collectionName}</h5>\n                    <p className=\"ellipsis\">{artistName}</p>\n                  </div>\n                </div>\n              </Link>\n            );\n          })\n        }\n      </section>\n    );\n  }\n}\n\nContentMap.propTypes = {\n  contentToMap: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { enableRenderAlbumAct } from '../actions';\nimport '../styles/contentResult.css';\nimport ContentMap from './ContentMap';\n\nclass ContentResult extends Component {\n  render() {\n    const {\n      searchedMain,\n      searchResult,\n      searchAlbum: { inputSearch, results, render },\n    } = this.props;\n\n    return (\n      <div className=\"contentSpace\">\n\n        <section className=\"sectionResult\">\n          <div className=\"contentSearched\">\n            {\n              (inputSearch.length !== 0 && !inputSearch.includes('No results'))\n                ? (\n                  <h3>\n                    Top results for\n                    {' '}\n                    {inputSearch}\n                  </h3>\n                )\n                : (\n                  <h3>{searchedMain}</h3>\n                )\n            }\n          </div>\n\n          {\n            render\n              ? <ContentMap { ...this.props } contentToMap={ results } />\n              : <ContentMap { ...this.props } contentToMap={ searchResult } />\n          }\n\n        </section>\n      </div>\n    );\n  }\n}\n\nContentResult.propTypes = {\n  searchResult: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n  searchedMain: PropTypes.string,\n  searchedTest: PropTypes.string,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  searchAlbum: state.searchAlbum,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  enableRender: (bool) => dispatch(enableRenderAlbumAct(bool)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentResult);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport '../styles/search.css';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport ContentResult from '../components/ContentResult';\nimport fetchAlbumInRedux from '../thunk/fetchAlbumInRedux';\nimport { inputSearchAct } from '../actions';\nimport TopsideBar from '../components/TopsideBar';\n\nclass Search extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      inputSearch: '',\n      isButtonDisabled: true,\n      isLoading: false,\n      searchedTest: '',\n      searchedMain: '',\n      searchResult: [],\n    };\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    }, () => {\n      const { inputSearch } = this.state;\n      const TWO = 2;\n\n      if (inputSearch.length >= TWO) {\n        this.setState({\n          isButtonDisabled: false,\n        });\n      }\n    });\n  }\n\n  handleClick = async (e) => {\n    e.preventDefault();\n\n    const { inputSearch } = this.state;\n    const { inputSearchGlobal, searchAlbumGlobal } = this.props;\n\n    this.setState({\n      isLoading: true,\n      isButtonDisabled: true,\n      searchResult: [],\n      searchedMain: `Resultados de ${inputSearch}`,\n    });\n\n    const artist = await searchAlbumsAPI(inputSearch);\n\n    if (artist.length === 0) {\n      inputSearchGlobal(`No results found for \"${inputSearch}\".`);\n      return this.setState({\n        inputSearch: '',\n        isLoading: false,\n        searchedTest: 'Nenhum álbum foi encontrado',\n        searchedMain: `No results found for \"${inputSearch}\".`, // ponto para diferenciar do searchedTest\n      });\n    }\n\n    this.setState((prevState) => ({\n      inputSearch: '',\n      searchResult: artist,\n      isLoading: false,\n      searchedTest: `Resultados de álbuns de: ${prevState.inputSearch}`,\n      searchedMain: `Top results for ${prevState.inputSearch}`,\n    }));\n    inputSearchGlobal(inputSearch);\n    searchAlbumGlobal(inputSearch);\n  }\n\n  render() {\n    const {\n      isLoading,\n      inputSearch,\n      isButtonDisabled,\n    } = this.state;\n\n    return (\n      <div className=\"headerPattern\">\n\n        <div data-testid=\"page-search\" className=\"patternPages\">\n          <TopsideBar\n            handleClick={ this.handleClick }\n            handleChange={ this.handleChange }\n            inputSearch={ inputSearch }\n            isButtonDisabled={ isButtonDisabled }\n          />\n\n          {\n            isLoading ? <Loading /> : <ContentResult { ...this.state } />\n          }\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  inputSearchGlobal: PropTypes.func,\n  searchAlbumGlobal: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  inputSearchGlobal: (inputValue) => dispatch(inputSearchAct(inputValue)),\n  searchAlbumGlobal: (inputValue) => dispatch(fetchAlbumInRedux(inputValue)),\n});\n\nexport default connect(null, mapDispatchToProps)(withRouter(Search));\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './app.css';\nimport FriendsActivity from './components/FriendsActivitySidebar';\nimport Header from './components/Header';\nimport { PlayerBottomSide } from './components/PlayerBottomSide';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Login from './pages/Login';\nimport NotFound from './pages/NotFound';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport Search from './pages/Search';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleLoad = this.handleLoad.bind(this);\n  }\n\n  handleLoad() {\n    this.setState((prevState) => ({\n      isLoading: !prevState.isLoading,\n    }));\n  }\n\n  render() {\n    return (\n      <BrowserRouter basename=\"/neur4l.fy\">\n        <Switch>\n          <Route\n            exact\n            path={ ['/search', '/album/:id', '/favorites',\n              '/profile/edit', '/profile'] }\n            component={ (props) => (\n              <div className=\"player-relative-to-header-fa\">\n                <Header { ...props } />\n                <FriendsActivity />\n                <PlayerBottomSide />\n              </div>\n            ) }\n          />\n        </Switch>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Login { ...this.state } handleLoad={ this.handleLoad } />\n          </Route>\n          <Route\n            path=\"/search\"\n            component={ (props) => <Search { ...props } /> }\n          />\n          <Route\n            path=\"/album/:id\"\n            component={ (props) => <Album { ...props } /> }\n          />\n          <Route\n            path=\"/favorites\"\n            component={ (props) => <Favorites { ...props } /> }\n          />\n          <Route\n            path=\"/profile/edit\"\n            component={ (props) => <ProfileEdit { ...props } /> }\n          />\n          <Route\n            path=\"/profile\"\n            component={ (props) => <Profile { ...props } /> }\n          />\n          <Route\n            exact\n            path=\"*\"\n            component={ (props) => <NotFound { ...props } /> }\n          />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n//\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}