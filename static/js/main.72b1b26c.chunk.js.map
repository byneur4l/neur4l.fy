{"version":3,"sources":["services/userAPI.js","services/favoriteSongsAPI.js","images/spotifyLogoHeader.png","components/TopsideHeader.js","components/FavSideList.js","components/LoadingHeader.js","components/Header.js","components/Loading.js","actions/index.js","components/ConditionFilterTitle.js","components/ConditionFilterTime.js","components/ConditionClockRender.js","components/FilterRow.js","helpers/player.js","helpers/songTime.js","components/ButtonPlay.js","components/MusicMap.js","components/MusicCard.js","services/musicsAPI.js","components/AlbumHeaderDetails.js","components/PageController.js","components/ProfileHeader.js","components/Input.js","thunk/fetchAlbumInRedux.js","components/InputSearch.js","components/TopsideBar.js","components/AlbumHeader.js","pages/Album.js","pages/Favorites.js","images/spotify-logo-login-color.svg","components/LoadingLogin.js","pages/Login.js","pages/NotFound.js","pages/Profile.js","pages/ProfileEdit.js","services/searchAlbumsAPI.js","components/ContentMap.js","components/ContentResult.js","pages/Search.js","App.js","reducers/responseMusics.js","reducers/searchAlbum.js","reducers/index.js","store/index.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","TopsideHeader","className","to","src","SpotifyLogoHeader","alt","icon","faMagnifyingGlass","faHeart","faUser","Component","FavSideList","saveUrl","url","props","match","setState","pathVerifier","urlSideLink","state","window","location","reload","this","map","collectionId","trackName","onClick","LoadingHeader","Header","fetchFavoriteSongs","a","favSongs","isLoading","catchUser","bind","forceReloadVerifier","length","forceReload","handleReload","prevState","Loading","SEARCH_ALBUM","INPUT_SEARCH","ENABLE_RENDER_AFTER_CLICK_ON_LINK","SORT_MUSIC","RESPONSE_MUSICS","SAVE_FAVORITE_MUSICS","SORT_FAV_MUSICS","inputSearchAct","inputValue","type","searchAlbumAct","enableRenderAlbumAct","boolStringfied","responseMusicsAct","musics","saveFavoriteMusicsAct","favorites","ConditionFilterTitle","filterTitle","faSortDown","faSortUp","ConditionFilterTime","filterTime","ConditionClockRender","path","pathFavorites","sortMusicByTime","tabIndex","faClock","pathAlbumId","FilterRow","favoritesClone","tracksClone","filterAlbum","saveTracksToReset","responseMusics","tracks","resetFilter","sortMusic","sortFavoriteMusic","sortMusicAlphOrderAndReverse","sortTracksAlpha","sort","b","localeCompare","sortTracksDesc","trackTimeMillis","sortMusicByAlbum","collectionName","connect","searchAlbum","dispatch","sorted","sortMusicAct","sortedFav","withRouter","playAudio","currentTarget","attributes","value","document","querySelectorAll","forEach","player","id","paused","volume","pause","play","THOUSAND","totalAlbumTime","hoursHouse","reduce","acc","hours","Math","trunc","minutesHouse","toFixed","toString","split","minutesToNum","minutes","round","ButtonPlay","previewUrl","favoritesPath","i","handlePlayIcon","handlePauseIcon","played","status","htmlFor","faPause","e","faPlay","controls","hidden","kind","MusicMap","handleArtistNameLink","enableRender","handleCheck","checkedAndFavorite","artist","artistName","artworkUrl60","trackNumber","ms","convertMillsToMin","seconds","secondsHouse","join","convertMillsToSeconds","role","target","classToFind","querySelector","addClass","classList","add","remove","placeSelectedClass","onKeyPress","includes","onChange","checked","bool","MusicCard","getMusics","fetch","request","json","requestJson","results","AlbumHeaderDetails","albumYear","year","sideInfoTracks","albumTime","albumTrackTime","album","artworkUrl100","releaseDate","userImage","albumTracks","pathname","PageController","previousPageButton","goBack","history","nextPageButton","goForward","onKeyUp","faAngleLeft","faAngleRight","ProfileHeader","Input","defaultProps","fetchAlbum","artistNameURL","InputSearch","handleClick","handleChange","inputSearch","isButtonDisabled","action","placeholder","disabled","inputSearchGlobal","searchAlbumGlobal","TopsideBar","AlbumHeader","replace","Album","handleLoad","fetchMusic","isHeaderLoading","saveResponseMusics","music","idFavoriteSongs","slice","saveFavoriteMusics","filterChecked","params","search","arr","id2","musicId","Favorites","favoriteHeader","getFavoriteAndRemoveFromList","currentYear","Date","getFullYear","albumFake","favoriteTitle","LoadingLogin","Login","handleChanges","handleEffects","inputLogin","inputPassword","isSubmitBttIsDisabled","authorized","lengthLogin","lengthPassword","newLoginVerification","SpotifyLogo","preventDefault","NotFound","Profile","userLoad","fetchUser","ProfileEdit","newUserInfo","infoToUpdate","destructureUser","destructureInfo","undefined","buttonVerifier","updatedUser","redirect","update","result","boolButton","Object","values","every","item","defaultValue","required","maxLength","searchAlbumsAPI","encodeURI","replaceAll","getAlbumsAPI","APIResponse","artistId","collectionPrice","trackCount","ContentMap","contentToMap","ContentResult","isEnabledToRenderLinkContent","render","searchedMain","searchResult","searchedTest","Search","App","basename","exact","component","React","initialState","sortedTracks","favoritesSorted","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.72b1b26c.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    if (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n      localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n    }\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","export default __webpack_public_path__ + \"static/media/spotifyLogoHeader.f48fb565.png\";","import PropTypes from 'prop-types';\nimport { faHeart, faMagnifyingGlass, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport SpotifyLogoHeader from '../images/spotifyLogoHeader.png';\n\nexport default class TopsideHeader extends Component {\n  render() {\n    return (\n      <div className=\"headerTopside\">\n        <div className=\"header-content\">\n          <Link to=\"/search\" className=\"header-link-style\">\n            <div className=\"header-title\">\n              <img src={ SpotifyLogoHeader } alt=\"Spotify Logo\" />\n              <h4 className=\"header-collab\">X</h4>\n              <h2>neur4l</h2>\n            </div>\n          </Link>\n        </div>\n\n        <div className=\"navLinks-container\">\n          <div className=\"alignNavSideBar\">\n            <NavLink\n              className=\"navLinks\"\n              to=\"/search\"\n              data-testid=\"link-to-search\"\n            >\n              <FontAwesomeIcon icon={ faMagnifyingGlass } className=\"iconSet\" />\n              <span>Search</span>\n            </NavLink>\n          </div>\n\n          <div className=\"alignNavSideBar\">\n            <NavLink\n              className=\"navLinks\"\n              to=\"/favorites\"\n              data-testid=\"link-to-favorites\"\n            >\n              <FontAwesomeIcon icon={ faHeart } className=\"iconSet\" />\n              <span>Favorites</span>\n            </NavLink>\n          </div>\n\n          <div className=\"alignNavSideBar\">\n            <NavLink\n              className=\"navLinks\"\n              to=\"/profile\"\n              data-testid=\"link-to-profile\"\n            >\n              <FontAwesomeIcon icon={ faUser } className=\"iconSet\" />\n              <span>Profile</span>\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTopsideHeader.propTypes = {\n  image: PropTypes.string,\n  isLoading: PropTypes.bool,\n  name: PropTypes.string,\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class FavSideList extends Component {\n  componentDidMount() {\n    this.saveUrl();\n  }\n\n  saveUrl = () => {\n    const { match: { url } } = this.props;\n    this.setState({ url }, () => this.pathVerifier());\n  }\n\n  pathVerifier = () => {\n    const { match: { url: urlSideLink } } = this.props;\n    const { url: urlCurrentPage } = this.state;\n\n    if (urlCurrentPage !== urlSideLink) {\n      window.location.reload();\n    }\n  }\n\n  render() {\n    const { favoriteSongs } = this.props;\n\n    return (\n      <div className=\"favList\">\n        {\n          favoriteSongs.map((song) => {\n            const { collectionId, trackId, trackName } = song;\n            return (\n              <Link\n                to={ `/album/${collectionId}` }\n                key={ trackId }\n                className=\"sideLinkStyle\"\n                onClick={ () => this.saveUrl() }\n              >\n                <p className=\"ellipsis\">{trackName}</p>\n              </Link>\n            );\n          })\n        }\n      </div>\n    );\n  }\n}\n\nFavSideList.propTypes = {\n  favoriteSongs: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n}.isRequired;\n","import React, { Component } from 'react';\nimport '../styles/loadingHeader.css';\n\nclass LoadingHeader extends Component {\n  render() {\n    return (\n      <div className=\"blocksHeader\">\n        {/*\n          Spinner art by Melissa Em in October 7, 2019\n          https://freefrontend.com/css-spinners/\n          Made with\n          HTML / CSS\n          https://codepen.io/meowwwls/pen/OJJPbGb\n        */}\n        <div className=\"blockHeader greenHeader\" />\n        <div className=\"blockHeader whiteHeader\" />\n      </div>\n    );\n  }\n}\n\nexport default LoadingHeader;\n","import React, { Component } from 'react';\nimport '../styles/header.css';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../services/userAPI';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport TopsideHeader from './TopsideHeader';\nimport FavSideList from './FavSideList';\nimport LoadingHeader from './LoadingHeader';\n\nclass Header extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      name: '',\n      image: 'https://i.pinimg.com/474x/86/0d/cd/860dcdf5cd536bfd86d8fc86efdbdd18.jpg',\n      favoriteSongs: [],\n    };\n\n    this.catchUser = this.catchUser.bind(this);\n    this.forceReloadVerifier = this.forceReloadVerifier.bind(this);\n  }\n\n  componentDidMount() {\n    this.catchUser();\n    this.fetchFavoriteSongs();\n  }\n\n  fetchFavoriteSongs = async () => {\n    const favSongs = await getFavoriteSongs();\n    this.setState({\n      favoriteSongs: favSongs,\n    });\n  }\n\n  async catchUser() {\n    this.setState({ isLoading: true });\n    const user = await getUser();\n\n    this.setState(() => {\n      if (user.image.length > 0) {\n        return ({\n          isLoading: false,\n          name: user.name,\n          image: user.image,\n        });\n      }\n      return {\n        isLoading: false,\n        name: user.name,\n      };\n    });\n  }\n\n  forceReloadVerifier() {\n    const { forceReload, handleReload } = this.props;\n    const ms500 = 500;\n\n    if (forceReload) {\n      this.setState((prevState) => ({\n        reload: !prevState.reload,\n        isLoading: true,\n      }), () => {\n        this.fetchFavoriteSongs();\n        setTimeout(() => this.setState({ isLoading: false }), ms500);\n      });\n      handleReload();\n    }\n  }\n\n  render() {\n    const { favoriteSongs, isLoading } = this.state;\n\n    this.forceReloadVerifier();\n\n    return (\n      <header className=\"header-hero\" data-testid=\"header-component\">\n        <TopsideHeader { ...this.state } />\n\n        <hr className=\"sideBarHorizontalRow\" />\n\n        <div className=\"sideFavSongsContainer\">\n\n          {\n            isLoading\n              ? (\n                <LoadingHeader />\n              )\n              : (\n                <FavSideList\n                  { ...this.props }\n                  favoriteSongs={ favoriteSongs }\n                />\n              )\n          }\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  url: PropTypes.string,\n}.isRequired;\n\nexport default Header;\n","import React, { Component } from 'react';\nimport '../styles/loading.css';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"titleModal\">\n          <h1>Loading...</h1>\n        </div>\n\n        {/*\n          Spinner art by Melissa Em in October 7, 2019\n          https://freefrontend.com/css-spinners/\n          Made with\n          HTML / CSS\n          https://codepen.io/meowwwls/pen/OJJPbGb\n        */}\n        <div className=\"blocks\">\n          <div className=\"block green\" />\n          <div className=\"block white\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","export const SEARCH_ALBUM = 'SEARCH_ALBUM';\nexport const INPUT_SEARCH = 'INPUT_SEARCH';\nexport const ENABLE_RENDER_AFTER_CLICK_ON_LINK = 'ENABLE_RENDER_AFTER_CLICK_ON_LINK';\nexport const SORT_MUSIC = 'SORT_MUSIC';\nexport const RESPONSE_MUSICS = 'RESPONSE_MUSICS';\nexport const SAVE_FAVORITE_MUSICS = 'SAVE_FAVORITE_MUSICS';\nexport const SORT_FAV_MUSICS = 'SORT_FAV_MUSICS';\n\nexport const inputSearchAct = (inputValue) => ({\n  type: INPUT_SEARCH,\n  inputValue,\n});\n\nexport const searchAlbumAct = (response) => ({\n  type: SEARCH_ALBUM,\n  response,\n});\n\nexport const enableRenderAlbumAct = (boolStringfied) => ({\n  type: ENABLE_RENDER_AFTER_CLICK_ON_LINK,\n  boolStringfied,\n});\n\nexport const responseMusicsAct = (musics) => ({\n  type: RESPONSE_MUSICS,\n  musics,\n});\n\nexport const saveFavoriteMusicsAct = (favorites) => ({\n  type: SAVE_FAVORITE_MUSICS,\n  favorites,\n});\n\nexport const sortFavoriteMusicsAct = (sortedFav) => ({\n  type: SORT_FAV_MUSICS,\n  sortedFav,\n});\n\nexport const sortMusicAct = (sorted) => ({\n  type: SORT_MUSIC,\n  sorted,\n});\n","import PropTypes from 'prop-types';\nimport { faSortDown, faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\n\nexport default class ConditionFilterTitle extends Component {\n  render() {\n    const { filterTitle } = this.props;\n    return (\n      <>\n        {\n          filterTitle === 'a-z'\n          && (\n            <FontAwesomeIcon\n              icon={ faSortDown }\n              className=\"faCentralizerFilter\"\n            />\n          )\n        }\n\n        {\n          filterTitle === 'z-a'\n          && (\n            <FontAwesomeIcon icon={ faSortUp } className=\"faCentralizerFilter\" />\n          )\n        }\n      </>\n    );\n  }\n}\n\nConditionFilterTitle.propTypes = {\n  filterTitle: PropTypes.string,\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport { faSortDown, faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\n\nexport default class ConditionFilterTime extends Component {\n  render() {\n    const { filterTime } = this.props;\n\n    return (\n      <>\n        {\n          filterTime === 'a-z'\n          && (\n            <FontAwesomeIcon\n              icon={ faSortDown }\n              className=\"faCentralizerFilter\"\n            />\n          )\n        }\n\n        {\n          filterTime === 'z-a'\n          && (\n            <FontAwesomeIcon icon={ faSortUp } className=\"faCentralizerFilter\" />\n          )\n        }\n      </>\n    );\n  }\n}\n\nConditionFilterTime.propTypes = {\n  filterTime: PropTypes.string,\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport ConditionFilterTime from './ConditionFilterTime';\n\nexport default class ConditionClockRender extends Component {\n  render() {\n    const { filterTime, path, pathFavorites, sortMusicByTime } = this.props;\n\n    return (\n      <div>\n        {\n          path === pathFavorites\n            ? (\n              <div className=\"filterRight\">\n                <div className=\"previewFavorite\" />\n                <div className=\"timeFilter\">\n                  <p\n                    className=\"albumFilters fitLinkContent\"\n                    onClick={ sortMusicByTime }\n                    tabIndex=\"-1\"\n                    aria-hidden=\"true\"\n                  >\n                    <FontAwesomeIcon icon={ faClock } />\n                    <ConditionFilterTime filterTime={ filterTime } />\n                  </p>\n                </div>\n              </div>\n            )\n            : (\n              <div className=\"filterRightAlbum\">\n                <div className=\"previewFavorite\" />\n                <div className=\"musicDurationAlbum\">\n                  <p\n                    className=\"albumFilters fitLinkContent\"\n                    onClick={ sortMusicByTime }\n                    tabIndex=\"-1\"\n                    aria-hidden=\"true\"\n                  >\n                    <FontAwesomeIcon icon={ faClock } />\n                    <ConditionFilterTime filterTime={ filterTime } />\n                  </p>\n                </div>\n              </div>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nConditionClockRender.propTypes = {\n  filterTime: PropTypes.func,\n  path: PropTypes.string,\n  pathFavorites: PropTypes.string,\n  sortMusicByTime: PropTypes.func,\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { sortFavoriteMusicsAct, sortMusicAct } from '../actions';\nimport ConditionFilterTitle from './ConditionFilterTitle';\nimport ConditionClockRender from './ConditionClockRender';\n\nconst pathAlbumId = '/album/:id';\nconst pathFavorites = '/favorites';\n\nclass FilterRow extends Component {\n  state = {\n    favoritesClone: [],\n    tracksClone: [],\n    filterTitle: '',\n    filterAlbum: '',\n    filterTime: '',\n  }\n\n  componentDidMount() {\n    this.saveTracksToReset();\n  }\n\n  saveTracksToReset = () => {\n    const { responseMusics: { favorites, tracks } } = this.props;\n    this.setState({ favoritesClone: [...favorites], tracksClone: [...tracks] });\n  }\n\n  resetFilter = () => {\n    const { match: { path }, sortMusic, sortFavoriteMusic } = this.props;\n    const { favoritesClone, tracksClone } = this.state;\n\n    this.setState({ filterTitle: '', filterTime: '', filterAlbum: '' });\n\n    const pathConditionToReset = path === pathAlbumId;\n    if (pathConditionToReset) sortMusic(tracksClone);\n    else { sortFavoriteMusic(favoritesClone); }\n  }\n\n  sortMusicAlphOrderAndReverse = () => {\n    const { responseMusics: { tracks, favorites }, sortMusic,\n      match: { path }, sortFavoriteMusic } = this.props;\n    const { filterTime, filterAlbum } = this.state;\n\n    if (filterTime !== '' || filterAlbum !== '') {\n      this.setState({ filterTime: '', filterAlbum: '' });\n    }\n\n    if (path === pathAlbumId) {\n      const sortTracksAlpha = [...tracks]\n        .sort((a, b) => (a.trackName).localeCompare(b.trackName));\n\n      if (tracks[0] === sortTracksAlpha[0]) {\n        const sortTracksDesc = [...tracks]\n          .sort((a, b) => (b.trackName).localeCompare(a.trackName));\n\n        this.setState({ filterTitle: 'z-a' });\n        return sortMusic(sortTracksDesc);\n      }\n      sortMusic(sortTracksAlpha);\n      this.setState({ filterTitle: 'a-z' });\n    }\n\n    if (path === pathFavorites) {\n      const sortTracksAlpha = [...favorites]\n        .sort((a, b) => (a.trackName).localeCompare(b.trackName));\n\n      if (favorites[0] === sortTracksAlpha[0]) {\n        const sortTracksDesc = [...favorites]\n          .sort((a, b) => (b.trackName).localeCompare(a.trackName));\n\n        this.setState({ filterTitle: 'z-a' });\n        return sortFavoriteMusic(sortTracksDesc);\n      }\n      sortFavoriteMusic(sortTracksAlpha);\n      this.setState({ filterTitle: 'a-z' });\n    }\n  }\n\n  sortMusicByTime = () => {\n    const { responseMusics: { tracks, favorites }, match: { path },\n      sortMusic, sortFavoriteMusic } = this.props;\n    const { filterTitle, filterAlbum } = this.state;\n\n    if (filterTitle !== '' || filterAlbum !== '') {\n      this.setState({ filterTitle: '', filterAlbum: '' });\n    }\n\n    if (path === pathAlbumId) {\n      const sortTracksAlpha = [...tracks]\n        .sort((a, b) => (a.trackTimeMillis) - (b.trackTimeMillis));\n\n      if (tracks[0] === sortTracksAlpha[0]) {\n        const sortTracksDesc = [...tracks]\n          .sort((a, b) => (b.trackTimeMillis) - (a.trackTimeMillis));\n\n        this.setState({ filterTime: 'z-a' });\n        return sortMusic(sortTracksDesc);\n      }\n      sortMusic(sortTracksAlpha);\n      this.setState({ filterTime: 'a-z' });\n    }\n\n    if (path === pathFavorites) {\n      const sortTracksAlpha = [...favorites]\n        .sort((a, b) => (a.trackTimeMillis) - (b.trackTimeMillis));\n\n      if (favorites[0] === sortTracksAlpha[0]) {\n        const sortTracksDesc = [...favorites]\n          .sort((a, b) => (b.trackTimeMillis) - (a.trackTimeMillis));\n\n        this.setState({ filterTime: 'z-a' });\n        return sortFavoriteMusic(sortTracksDesc);\n      }\n      sortFavoriteMusic(sortTracksAlpha);\n      this.setState({ filterTime: 'a-z' });\n    }\n  }\n\n  sortMusicByAlbum = () => {\n    const { responseMusics: { favorites }, match: { path },\n      sortFavoriteMusic } = this.props;\n    const { filterTitle, filterTime } = this.state;\n\n    if (filterTitle !== '' || filterTime !== '') {\n      this.setState({ filterTitle: '', filterTime: '' });\n    }\n\n    if (path === pathFavorites) {\n      const sortTracksAlpha = [...favorites]\n        .sort((a, b) => (a.collectionName).localeCompare(b.collectionName));\n\n      if (favorites[0] === sortTracksAlpha[0]) {\n        const sortTracksDesc = [...favorites]\n          .sort((a, b) => (b.collectionName).localeCompare(a.collectionName));\n\n        this.setState({ filterAlbum: 'z-a' });\n        return sortFavoriteMusic(sortTracksDesc);\n      }\n\n      sortFavoriteMusic(sortTracksAlpha);\n      this.setState({ filterAlbum: 'a-z' });\n    }\n  }\n\n  render() {\n    const { path } = this.props;\n    const { filterTitle, filterTime } = this.state;\n\n    return (\n      <div className=\"musicRow filterRow\">\n        <div className=\"divTrackNumber\">\n          <p\n            className=\"withoutHover albumFilters trackNumberCenter\"\n            onClick={ this.resetFilter }\n            tabIndex=\"-1\"\n            aria-hidden=\"true\"\n          >\n            #\n          </p>\n        </div>\n\n        {\n          path === pathFavorites\n            ? (\n              <div className=\"musicAndArtist titleFilter\">\n                <p\n                  className=\"albumFilters\"\n                  onClick={ this.sortMusicAlphOrderAndReverse }\n                  tabIndex=\"-1\"\n                  aria-hidden=\"true\"\n                >\n                  TITLE\n                  <ConditionFilterTitle filterTitle={ filterTitle } />\n                </p>\n\n              </div>\n            )\n            : (\n              <div className=\"musicAndArtistAlbum\">\n                <p\n                  className=\"albumFilters\"\n                  onClick={ this.sortMusicAlphOrderAndReverse }\n                  tabIndex=\"-1\"\n                  aria-hidden=\"true\"\n                >\n                  TITLE\n                  <ConditionFilterTitle filterTitle={ filterTitle } />\n                </p>\n\n              </div>\n            )\n        }\n\n        {\n          path === pathFavorites\n              && (\n                <div className=\"albumFilter\">\n                  <p\n                    className=\"albumFilters\"\n                    onClick={ this.sortMusicByAlbum }\n                    tabIndex=\"-1\"\n                    aria-hidden\n                  >\n                    ALBUM\n\n                  </p>\n                </div>\n              )\n        }\n\n        <ConditionClockRender\n          filterTime={ filterTime }\n          path={ path }\n          sortMusicByTime={ this.sortMusicByTime }\n        />\n\n      </div>\n    );\n  }\n}\n\nFilterRow.propTypes = {\n  path: PropTypes.string,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  searchAlbum: state.searchAlbum,\n  responseMusics: state.responseMusics,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  sortMusic: (sorted) => dispatch(sortMusicAct(sorted)),\n  sortFavoriteMusic: (sorted) => dispatch(sortFavoriteMusicsAct(sorted)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(FilterRow));\n\n//\n","export const playAudio = ({ currentTarget }) => {\n  const url = currentTarget.attributes.name.value;\n  const players = document.querySelectorAll('audio');\n\n  players.forEach((player) => {\n    const { id, paused } = player;\n    player.volume = 0.2;\n    if (paused === false) return player.pause();\n\n    const targetPlayer = id === url;\n    if (targetPlayer) return player.play();\n  });\n};\n\nexport const placeSelectedClass = ({ target }) => {\n  const classToFind = document.querySelector('.selectedMusic');\n\n  const addClass = target.classList.add('selectedMusic');\n\n  if (classToFind) {\n    const excClass = classToFind.classList.remove('selectedMusic');\n    return excClass && addClass;\n  }\n  return addClass;\n};\n","const THOUSAND = 1000;\nconst SIXTY = 60;\n\nexport const convertMillsToMin = (ms) => {\n  const minutes = ((ms / THOUSAND) / SIXTY);\n  const minutesHouse = Math.trunc(minutes);\n  return minutesHouse;\n};\n\nexport const convertMillsToSeconds = (ms) => {\n  const seconds = ((ms / THOUSAND) % SIXTY);\n  const secondsHouse = Math.round(seconds);\n\n  const TEN = 10;\n  if (secondsHouse < TEN) {\n    const verifier = [0, secondsHouse];\n    return verifier.join('');\n  }\n  return secondsHouse;\n};\n\nexport const totalAlbumTime = (tracks) => {\n  const totalTime = tracks\n    .reduce((acc, { trackTimeMillis }) => {\n      const counter = acc + trackTimeMillis;\n      return counter;\n    }, 0);\n\n  const hoursHouse = (((totalTime / THOUSAND) / SIXTY) / SIXTY); // ms / s / min / h\n  const hours = Math.trunc(hoursHouse);\n\n  const minutesHouse = hoursHouse.toFixed(2).toString().split('.')[1];\n  const minutesToNum = +`0.${minutesHouse}`;\n  const minutes = Math.round(minutesToNum * SIXTY);\n\n  if (hours <= 0) {\n    return `${minutes} min`;\n  }\n  return `${hours} hr ${minutes} min`;\n};\n","import PropTypes from 'prop-types';\nimport { faPause, faPlay } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport { playAudio } from '../helpers/player';\n\nexport default class ButtonPlay extends Component {\n  render() {\n    const {\n      path,\n      favoritesPath,\n      // trackNumber,\n      previewUrl,\n      i,\n      handlePlayIcon,\n      handlePauseIcon,\n      played: { name, status },\n    } = this.props;\n\n    return (\n      <div className=\"divTrackNumber\">\n        {\n          path === favoritesPath\n            ? (\n              <p className=\"trackNumber font-link\">{ i + 1 }</p>\n            )\n            : (\n              <p className=\"trackNumber font-link\">{ i + 1 }</p>\n            )\n        }\n        <label htmlFor={ previewUrl }>\n          {\n            (name === previewUrl) && (status)\n              ? (\n                <FontAwesomeIcon\n                  name={ previewUrl }\n                  icon={ faPause }\n                  className=\"focusable trackPlayIcon trackPauseIcon\"\n                  onClick={ (e) => {\n                    handlePauseIcon(e);\n                    playAudio(e);\n                  } }\n                />\n              )\n              : (\n                <FontAwesomeIcon\n                  name={ previewUrl }\n                  icon={ faPlay }\n                  className=\"focusable trackPlayIcon\"\n                  onClick={ (e) => {\n                    handlePlayIcon(e);\n                    playAudio(e);\n                  } }\n                />\n              )\n          }\n\n          <div className=\"previewMusic\">\n            <audio\n              id={ previewUrl }\n              data-testid=\"audio-component\"\n              src={ previewUrl }\n              controls\n              hidden\n            >\n              <track kind=\"captions\" />\n              O seu navegador não suporta o elemento\n              {' '}\n              <code>audio</code>\n              .\n            </audio>\n          </div>\n        </label>\n      </div>\n    );\n  }\n}\n\nButtonPlay.propTypes = {\n  favoritesPath: PropTypes.string,\n  i: PropTypes.number,\n  path: PropTypes.string,\n  previewUrl: PropTypes.string,\n  trackNumber: PropTypes.string,\n  playAudio: PropTypes.func,\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { placeSelectedClass } from '../helpers/player';\nimport { convertMillsToMin, convertMillsToSeconds } from '../helpers/songTime';\nimport ButtonPlay from './ButtonPlay';\nimport { enableRenderAlbumAct } from '../actions';\n\nclass MusicMap extends Component {\n  state = {\n    played: false,\n  }\n\n  handlePlayIcon = ({ currentTarget }) => {\n    this.setState(({\n      played: {\n        status: true,\n        name: currentTarget.attributes.name.value,\n      },\n    }));\n  }\n\n  handlePauseIcon = () => {\n    this.setState({\n      played: {\n        status: false,\n      },\n    });\n  }\n\n  handleArtistNameLink = () => {\n    const { enableRender } = this.props;\n    enableRender(true);\n  }\n\n  render() {\n    const {\n      // albumTracks,\n      handleCheck,\n      handleReload,\n      checkedAndFavorite,\n      match: { path },\n      // responseMusics: { tracks },\n      // tracks,\n      tracks,\n    } = this.props;\n\n    const { played } = this.state;\n\n    const favoritesPath = '/favorites';\n\n    return (\n      <div>\n        {\n          tracks && tracks.map((artist, i) => {\n            const {\n              artistName,\n              artworkUrl60,\n              collectionName,\n              collectionId,\n              previewUrl,\n              trackId,\n              trackName,\n              trackNumber,\n              trackTimeMillis,\n            } = artist;\n            const minutes = convertMillsToMin(trackTimeMillis);\n            const seconds = convertMillsToSeconds(trackTimeMillis);\n\n            return (\n              <div\n                className=\"focusMusicRow\"\n                role=\"button\"\n                key={ trackId }\n                tabIndex=\"-1\"\n                onClick={ (e) => placeSelectedClass(e) }\n                onKeyPress={ () => {} }\n                aria-hidden=\"true\"\n              >\n                <div className=\"musicRow notFocusable\">\n                  <ButtonPlay\n                    path={ path }\n                    favoritesPath={ favoritesPath }\n                    trackNumber={ trackNumber }\n                    previewUrl={ previewUrl }\n                    i={ i }\n                    handlePlayIcon={ this.handlePlayIcon }\n                    handlePauseIcon={ this.handlePauseIcon }\n                    played={ played }\n                  />\n\n                  {\n                    path === favoritesPath\n                    && (\n                      <div className=\"miniAlbumImage\">\n                        <img\n                          src={ artworkUrl60 }\n                          alt=\"mini album pic\"\n                          className=\"miniAlbumImage\"\n                        />\n                      </div>\n                    )\n                  }\n\n                  {\n                    path === favoritesPath\n                      ? (\n                        <div className=\"musicAndArtist\">\n                          <div className=\"divToEllipsis\">\n                            <p className=\"musicName ellipsis\">{ trackName }</p>\n                            <Link\n                              className=\"linkStyle focusableLink ellipsis\"\n                              key={ collectionId }\n                              to={ `/album/${collectionId}` }\n                            >\n                              <p\n                                className=\"artistName ellipsis fitLinkContent\"\n                              >\n                                { artistName }\n\n                              </p>\n                              {' '}\n                            </Link>\n                          </div>\n                        </div>\n                      )\n                      : (\n                        <div className=\"musicAndArtistAlbum\">\n                          {/* Ellipsis fix in Album */}\n                          <div className=\"\">\n                            <p className=\"musicName ellipsis\">{ trackName }</p>\n                            <Link\n                              className=\"linkStyle focusableLink\"\n                              key={ collectionId }\n                              to=\"/search\"\n                              onClick={ this.handleArtistNameLink }\n                            >\n                              <p\n                                className=\"artistName ellipsis\"\n                              >\n                                { artistName }\n\n                              </p>\n                            </Link>\n                          </div>\n                        </div>\n                      )\n                  }\n\n                  {\n                    path === favoritesPath\n                    && (\n                      <div className=\"albumFilter\">\n                        <div className=\"divToEllipsis\">\n                          <Link\n                            className=\"linkStyle focusableLink ellipsis\"\n                            key={ collectionId }\n                            to={ `/album/${collectionId}` }\n                          >\n                            <p className=\"artistName ellipsis\">{collectionName}</p>\n                          </Link>\n                        </div>\n                      </div>\n                    )\n                  }\n\n                  <div className=\"filterRight\">\n                    {\n                      checkedAndFavorite.includes(trackId)\n                        ? (\n                          <label htmlFor={ trackId } className=\"previewFavorite\">\n                            <FontAwesomeIcon\n                              icon={ faHeart }\n                              className=\"focusable heartColor\"\n                            />\n                            <input\n                              type=\"checkbox\"\n                              name=\"\"\n                              id={ trackId }\n                              data-testid={ `checkbox-music-${trackId}` }\n                              onChange={ () => {\n                                handleCheck(artist, trackId);\n                                handleReload();\n                              } }\n                              checked={ checkedAndFavorite.includes(trackId) }\n                              hidden\n                            />\n                          </label>\n                        )\n                        : (\n                          <label htmlFor={ trackId } className=\"previewFavorite\">\n                            <FontAwesomeIcon icon={ faHeart } className=\"heartIcon\" />\n                            <input\n                              type=\"checkbox\"\n                              name=\"\"\n                              id={ trackId }\n                              data-testid={ `checkbox-music-${trackId}` }\n                              onChange={ () => {\n                                handleCheck(artist, trackId);\n                                handleReload();\n                              } }\n                              checked={ checkedAndFavorite.includes(trackId) }\n                              hidden\n                            />\n                          </label>\n                        )\n                    }\n                    <div className=\"musicDuration\">\n                      <p className=\"artistName font-link\">{ `${minutes}:${seconds}` }</p>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n            );\n          })\n        }\n      </div>\n    );\n  }\n}\n\nMusicMap.propTypes = {\n  albumTracks: PropTypes.oneOfType([PropTypes.array]),\n  checkedAndFavorite: PropTypes.oneOfType([PropTypes.array]),\n  handleCheck: PropTypes.func,\n  path: PropTypes.string,\n  enableRender: PropTypes.func,\n  handleReload: PropTypes.func,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  searchAlbum: state.searchAlbum,\n  responseMusics: state.responseMusics,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  enableRender: (bool) => dispatch(enableRenderAlbumAct(bool)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MusicMap));\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FilterRow from './FilterRow';\nimport MusicMap from './MusicMap';\n\nclass MusicCard extends Component {\n  render() {\n    const {\n      match: { path },\n      responseMusics: { tracks, favorites },\n    } = this.props;\n\n    return (\n      <div className=\"listMusic listMusicMobile\">\n        <FilterRow path={ path } />\n\n        <hr className=\"horizontalRow\" />\n\n        <MusicMap { ...this.props } />\n\n        {\n          path === '/album/:id'\n            ? (\n              <MusicMap tracks={ tracks } { ...this.props } />\n            )\n            : (\n              <MusicMap tracks={ favorites } { ...this.props } />\n            )\n        }\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  path: PropTypes.string,\n}.isRequired;\n\nexport default connect()(MusicCard);\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { totalAlbumTime } from '../helpers/songTime';\nimport '../styles/albumHeaderDetails.css';\nimport { enableRenderAlbumAct } from '../actions';\n\nclass AlbumHeaderDetails extends Component {\n  albumYear = (year) => year.split('-')[0];\n\n  sideInfoTracks = (tracks) => tracks.length;\n\n  albumTime = () => {\n    this.setState((prevState) => ({\n      albumTrackTime: prevState.albumTrackTime + 1,\n    }));\n  }\n\n  handleArtistNameLink = () => {\n    const { enableRender } = this.props;\n    enableRender(true);\n  }\n\n  render() {\n    const {\n      album: { artistName, artworkUrl100, releaseDate, userImage },\n      albumTracks,\n      location: { pathname },\n    } = this.props;\n\n    const favoritesPath = '/favorites';\n\n    return (\n      <div className=\"artistDetails\">\n        {\n          !userImage\n            ? (<img src={ artworkUrl100 } alt=\"\" />)\n            : (<img src={ userImage } alt=\"Profile pic\" />)\n        }\n        {\n          pathname === favoritesPath\n            ? (\n              <Link className=\"linkStyle focusableLink\" to=\"/profile\">\n                <h5 className=\"headerUserOrArtistName\">{artistName}</h5>\n              </Link>\n            )\n            : (\n              <Link\n                className=\"linkStyle focusableLink\"\n                to=\"/search\"\n                onClick={ this.handleArtistNameLink }\n              >\n                <h5 className=\"headerUserOrArtistName\">{artistName}</h5>\n              </Link>\n            )\n        }\n        <h5 className=\"headingListStyle\">•</h5>\n        <h5>{this.albumYear(releaseDate)}</h5>\n        <div className=\"albumSideInfo\">\n          <h5 className=\"headingListStyle \">•</h5>\n          <h5>\n            {this.sideInfoTracks(albumTracks)}\n            {' '}\n            songs,\n          </h5>\n          <h5\n            className=\"headingListStyle timerHD font-link\"\n          >\n            {totalAlbumTime(albumTracks)}\n\n          </h5>\n        </div>\n      </div>\n    );\n  }\n}\n\nAlbumHeaderDetails.propTypes = {\n  album: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  enableRender: (bool) => dispatch(enableRenderAlbumAct(bool)),\n});\n\nexport default connect(null, mapDispatchToProps)(AlbumHeaderDetails);\n","import { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass PageController extends Component {\n  previousPageButton = () => {\n    const { history: { goBack } } = this.props;\n    goBack();\n  }\n\n  nextPageButton = () => {\n    const { history: { goForward } } = this.props;\n    goForward();\n  }\n\n  render() {\n    return (\n      <div className=\"page-control\">\n        <div\n          role=\"button\"\n          className=\"control\"\n          onClick={ this.previousPageButton }\n          tabIndex=\"-1\"\n          onKeyUp={ () => {} }\n        >\n          <FontAwesomeIcon icon={ faAngleLeft } className=\"faCentralizer\" />\n        </div>\n        <div\n          role=\"button\"\n          className=\"control\"\n          onClick={ this.nextPageButton }\n          tabIndex=\"-1\"\n          onKeyUp={ () => {} }\n        >\n          <FontAwesomeIcon icon={ faAngleRight } className=\"faCentralizer\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nPageController.propTypes = {\n  history: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n}.isRequired;\n\nexport default withRouter(PageController);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUser } from '../services/userAPI';\n\nexport default class ProfileHeader extends Component {\n  state = {\n    name: '',\n    image: 'https://i.pinimg.com/474x/86/0d/cd/860dcdf5cd536bfd86d8fc86efdbdd18.jpg',\n  };\n\n  componentDidMount() {\n    this.catchUser();\n  }\n\n  async catchUser() {\n    const user = await getUser();\n\n    this.setState(() => {\n      if (user.image.length > 0) {\n        return ({\n          isLoading: false,\n          name: user.name,\n          image: user.image,\n        });\n      }\n      return {\n        isLoading: false,\n        name: user.name,\n      };\n    });\n  }\n\n  render() {\n    const { name, image } = this.state;\n\n    return (\n      <Link to=\"/profile\" className=\"linkStyle linkToProfileTopsideBar\">\n        <div className=\"showUserBar\">\n          <img\n            src={ image }\n            alt=\"profile icon\"\n            className=\"image-icon\"\n          />\n          <h4 data-testid=\"header-user-name\" className=\"ellipsis\">{ name }</h4>\n        </div>\n      </Link>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nclass Input extends Component {\n  render() {\n    const {\n      id,\n    } = this.props;\n\n    return (\n      <label htmlFor={ id }>\n        <input\n          { ...this.props }\n        />\n      </label>\n    );\n  }\n}\n\nInput.defaultProps = {\n  id: 'nomeQualquer',\n};\n\nInput.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default Input;\n","import { searchAlbumAct } from '../actions';\n\nconst fetchAlbum = (artistNameURL) => async (dispatch) => {\n  const url = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  try {\n    const request = await fetch(url);\n    const { results } = await request.json();\n    dispatch(searchAlbumAct(results));\n  } catch (error) {\n    dispatch(searchAlbumAct(error));\n  }\n};\n\nexport default fetchAlbum;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\nimport Input from './Input';\nimport fetchAlbum from '../thunk/fetchAlbumInRedux';\nimport { inputSearchAct } from '../actions';\n\nclass InputSearch extends Component {\n  render() {\n    const { match: { path } } = this.props;\n\n    const pathAlbum = '/album/:id';\n    const pathFavorites = '/favorites';\n\n    const { handleClick, handleChange, inputSearch, isButtonDisabled } = this.props;\n\n    return (\n      <div className=\"search-hero\">\n        <form action=\"\">\n\n          {\n            (path !== pathAlbum && path !== pathFavorites)\n          && (\n            <div>\n              <FontAwesomeIcon icon={ faMagnifyingGlass } className=\"glassInputSearch\" />\n              <Input\n                type=\"text\"\n                id=\"buttonSearch\"\n                name=\"inputSearch\"\n                placeholder=\"Artists, songs or podcasts...\"\n                className=\"inputSearch\"\n                data-testid=\"search-artist-input\"\n                value={ inputSearch }\n                onChange={ handleChange }\n              />\n            </div>\n          )\n          }\n\n          <button\n            className=\"buttonSearch\"\n            type=\"submit\"\n            data-testid=\"search-artist-button\"\n            disabled={ isButtonDisabled }\n            onClick={ handleClick }\n            hidden\n          >\n            Search\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nInputSearch.propTypes = {\n  inputSearchGlobal: PropTypes.func,\n  searchAlbumGlobal: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  inputSearchGlobal: (inputValue) => dispatch(inputSearchAct(inputValue)),\n  searchAlbumGlobal: (inputValue) => dispatch(fetchAlbum(inputValue)),\n});\n\nexport default connect(null, mapDispatchToProps)(withRouter(InputSearch));\n","import '../styles/topsideBar.css';\nimport React, { Component } from 'react';\nimport PageController from './PageController';\nimport ProfileHeader from './ProfileHeader';\nimport InputSearch from './InputSearch';\n\nexport default class TopsideBar extends Component {\n  render() {\n    return (\n      <div className=\"controller-hero\">\n        <PageController />\n        <InputSearch { ...this.props } />\n        <ProfileHeader />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AlbumHeaderDetails from './AlbumHeaderDetails';\nimport TopsideBar from './TopsideBar';\n\nexport default class AlbumHeader extends Component {\n  render() {\n    const { album: { artistName, collectionName, artworkUrl100 } } = this.props;\n\n    return (\n      <section\n        className=\"patternPages albumHeader gradHeader\"\n        data-testid=\"page-album\"\n      >\n        <TopsideBar />\n        <h1 className=\"titlePage\" hidden>Album page</h1>\n        <div className=\"contentAlbum\">\n          <div className=\"albumTitle\">\n            <div className=\"albumImage\">\n              <img\n                src={ artworkUrl100.replace('100x100bb.jpg', '600x600bb.jpg') }\n                alt={ `Album cover of ${artistName}` }\n              />\n            </div>\n            <div className=\"albumDetails\">\n              <h6 className=\"albumTitleFixed\">ALBUM</h6>\n              <h1\n                className=\"albumName albumTitleFixed ellipsis\"\n                data-testid=\"album-name\"\n                hidden\n              >\n                {`Collection Name ${collectionName}`}\n              </h1>\n\n              <h2\n                className=\"albumName albumTitleFixed\"\n              >\n                {collectionName}\n              </h2>\n              <AlbumHeaderDetails { ...this.props } />\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nAlbumHeader.propTypes = {\n  album: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport '../styles/album.css';\nimport AlbumHeader from '../components/AlbumHeader';\nimport { responseMusicsAct, saveFavoriteMusicsAct } from '../actions';\n\nclass Album extends Component {\n  constructor() {\n    super();\n\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleLoad = this.handleLoad.bind(this);\n    this.fetchMusic = this.fetchMusic.bind(this);\n    this.fetchFavoriteSongs = this.fetchFavoriteSongs.bind(this);\n    this.handleReload = this.handleReload.bind(this);\n\n    this.state = {\n      isLoading: true,\n      album: {},\n      albumTracks: [],\n      checked: [],\n      favoriteSongs: [],\n      checkedAndFavorite: [],\n      albumTrackTime: [],\n      forceReload: false,\n      isHeaderLoading: false,\n    };\n  }\n\n  async componentDidMount() {\n    const { checked } = this.state;\n    const { saveResponseMusics } = this.props;\n\n    const music = await this.fetchMusic();\n    const idFavoriteSongs = await this.fetchFavoriteSongs();\n\n    saveResponseMusics(music.slice(1));\n\n    this.setState({\n      album: music[0], // sempre o primeiro item do array é o album com as infos\n      albumTracks: music.slice(1), // a partir daqui é apenas música\n      isLoading: false,\n      favoriteSongs: idFavoriteSongs,\n      checkedAndFavorite: [...idFavoriteSongs, ...checked],\n    });\n  }\n\n  handleLoad() {\n    this.setState((prevState) => ({\n      isLoading: !prevState.isLoading,\n    }));\n  }\n\n  handleReload() {\n    this.setState((prevState) => ({\n      forceReload: !prevState.forceReload,\n    }));\n  }\n\n  async handleCheck(artist, id) {\n    const { checkedAndFavorite } = this.state;\n    const { saveFavoriteMusics } = this.props;\n    if (checkedAndFavorite.includes(id)) {\n      // bool\n      const filter = this.filterChecked(checkedAndFavorite, id); // dentro do setState novo\n\n      // this.handleLoad();\n      await removeSong(artist);\n      // this.handleLoad(); // poderei tirar esse loading daqui\n\n      this.setState({\n        checkedAndFavorite: filter,\n      });\n\n      saveFavoriteMusics(filter);\n    } else {\n      // this.handleLoad();\n      await addSong(artist);\n      // this.handleLoad();\n\n      this.setState((prevState) => ({\n        checkedAndFavorite: [...prevState.checkedAndFavorite, id],\n      }));\n\n      saveFavoriteMusics([...checkedAndFavorite, id]);\n    }\n  }\n\n  async fetchMusic() {\n    const { match: { params: { id } } } = this.props;\n    const search = await getMusics(id);\n    return search;\n  }\n\n  async fetchFavoriteSongs() {\n    const favorites = await getFavoriteSongs();\n    const idFavoriteSongs = favorites.map(({ trackId }) => trackId);\n    return idFavoriteSongs;\n  }\n\n  filterChecked(arr, id2) {\n    const filtered = arr.filter((musicId) => musicId !== id2);\n    return filtered;\n  }\n\n  render() {\n    const { album: { artistName }, isLoading } = this.state;\n\n    return (\n      <div className=\"headerPattern\">\n        <Header\n          { ...this.props }\n          { ...this.state }\n          handleReload={ this.handleReload }\n        />\n        {\n          isLoading\n            ? <Loading />\n            : (\n              <section data-testid=\"page-album\" className=\"album\">\n                <AlbumHeader { ...this.state } { ...this.props } />\n\n                <section className=\"patternPages albumContent gradContent\">\n                  <p data-testid=\"artist-name\" hidden>{ `Artist Name ${artistName}`}</p>\n                  <MusicCard\n                    { ...this.state }\n                    { ...this.props }\n                    handleCheck={ this.handleCheck }\n                    handleLoad={ this.handleLoad }\n                    handleReload={ this.handleReload }\n                  />\n                </section>\n              </section>\n            )\n        }\n\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  saveFavoriteMusics: PropTypes.func,\n  saveResponseMusics: PropTypes.func,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  responseMusics: state.responseMusics,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveResponseMusics: (response) => dispatch(responseMusicsAct(response)),\n  saveFavoriteMusics: (favorites) => dispatch(saveFavoriteMusicsAct(favorites)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Album);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { responseMusicsAct, saveFavoriteMusicsAct } from '../actions';\nimport AlbumHeader from '../components/AlbumHeader';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport { getUser } from '../services/userAPI';\n\nclass Favorites extends Component {\n  constructor() {\n    super();\n\n    this.handleLoad = this.handleLoad.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleLoad = this.handleLoad.bind(this);\n    this.filterChecked = this.filterChecked.bind(this);\n    this.favoriteHeader = this.favoriteHeader.bind(this);\n    this.handleReload = this.handleReload.bind(this);\n\n    this.state = ({\n      isLoading: true,\n      albumTracks: [],\n      checkedAndFavorite: [],\n      album: {},\n      forceReload: false,\n    });\n  }\n\n  async componentDidMount() {\n    await this.favoriteHeader();\n    await this.getFavoriteAndRemoveFromList();\n  }\n\n  handleLoad = () => {\n    this.setState((prevState) => ({\n      isLoading: !prevState.isLoading,\n    }));\n  }\n\n  handleReload() {\n    this.setState((prevState) => ({\n      forceReload: !prevState.forceReload,\n    }));\n  }\n\n  async handleCheck(artist, id) {\n    const { checkedAndFavorite } = this.state;\n    if (checkedAndFavorite.includes(id)) {\n      // this.handleLoad();\n      await removeSong(artist);\n\n      await this.getFavoriteAndRemoveFromList();\n    }\n  }\n\n  async getFavoriteAndRemoveFromList() {\n    const { saveFavoriteMusics } = this.props;\n\n    const favorites = await getFavoriteSongs();\n    const idFavoriteSongs = favorites.map(({ trackId }) => trackId);\n\n    saveFavoriteMusics(favorites);\n    this.setState({\n      albumTracks: favorites,\n      checkedAndFavorite: [...idFavoriteSongs],\n      isLoading: false,\n    });\n  }\n\n  filterChecked(arr, id2) {\n    const filtered = arr.filter((musicId) => musicId !== id2);\n    return filtered;\n  }\n\n  async favoriteHeader() {\n    const currentYear = new Date().getFullYear();\n    const user = await getUser();\n\n    const albumFake = {\n      artistName: user.name,\n      userImage: user.image,\n      favoriteTitle: 'PLAYLIST',\n      collectionName: 'Liked Songs',\n      artworkUrl100: 'https://t.scdn.co/images/3099b3803ad9496896c43f22fe9be8c4.png',\n      releaseDate: currentYear.toString(),\n    };\n\n    this.setState({\n      album: albumFake,\n    });\n  }\n\n  render() {\n    const { isLoading } = this.state;\n\n    return (\n      <div data-testid=\"page-favorite\" className=\"headerPattern\">\n        <Header\n          { ...this.props }\n          { ...this.state }\n          handleReload={ this.handleReload }\n        />\n        {\n          isLoading\n            ? <Loading />\n            : (\n              <section className=\"album\">\n                <AlbumHeader { ...this.state } { ...this.props } />\n\n                <section className=\"patternPages albumContent gradContent sizeContent\">\n                  <MusicCard\n                    { ...this.props }\n                    { ...this.state }\n                    handleCheck={ this.handleCheck }\n                    handleReload={ this.handleReload }\n                  />\n                </section>\n              </section>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nFavorites.propTypes = {\n  saveFavoriteMusics: PropTypes.func,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  responseMusics: state.responseMusics,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveResponseMusics: (response) => dispatch(responseMusicsAct(response)),\n  saveFavoriteMusics: (favorites) => dispatch(saveFavoriteMusicsAct(favorites)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);\n","export default __webpack_public_path__ + \"static/media/spotify-logo-login-color.4f8bc335.svg\";","import React, { Component } from 'react';\nimport '../styles/loadingLogin.css';\n\nexport default class LoadingLogin extends Component {\n  render() {\n    return (\n      <div className=\"blocksLogin\">\n        <div className=\"titleModalLogin\">\n          <h1>Loading...</h1>\n        </div>\n        {/*\n          Spinner art by Melissa Em in October 7, 2019\n          https://freefrontend.com/css-spinners/\n          Made with\n          HTML / CSS\n          https://codepen.io/meowwwls/pen/OJJPbGb\n        */}\n        <div className=\"blockLogin greenLogin\" />\n        <div className=\"blockLogin whiteLogin\" />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Input from '../components/Input';\nimport '../styles/login.css';\nimport '../styles/loadingLogin.css';\nimport { createUser } from '../services/userAPI';\nimport SpotifyLogo from '../images/spotify-logo-login-color.svg';\nimport LoadingLogin from '../components/LoadingLogin';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleChanges = this.handleChanges.bind(this);\n    this.handleEffects = this.handleEffects.bind(this);\n\n    this.state = {\n      inputLogin: '',\n      inputPassword: '',\n      isSubmitBttIsDisabled: true,\n      isLoading: true,\n      authorized: false,\n      lengthLogin: 0,\n      lengthPassword: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: false,\n    });\n  }\n\n  handleChanges({ target: { name, value } }) {\n    if (name === 'inputPassword') {\n      this.setState({\n\n        lengthPassword: value.length,\n        [name]: value,\n      }, () => this.handleEffects());\n    }\n\n    if (name === 'inputLogin') {\n      this.setState({\n\n        lengthLogin: value.length,\n        [name]: value,\n      }, () => this.handleEffects());\n    }\n  }\n\n  handleEffects() {\n    const THREE = 3;\n    const { lengthLogin, lengthPassword } = this.state;\n    const newLoginVerification = lengthLogin >= THREE && lengthPassword >= THREE;\n\n    this.setState({\n      isSubmitBttIsDisabled: !newLoginVerification,\n    });\n  }\n\n  render() {\n    const {\n      inputLogin,\n      inputPassword,\n      isSubmitBttIsDisabled,\n      isLoading,\n      authorized,\n    } = this.state;\n\n    const defaultImg = 'https://i.pinimg.com/474x/86/0d/cd/860dcdf5cd536bfd86d8fc86efdbdd18.jpg';\n\n    return (\n      isLoading\n        ? (\n          <div>\n            <LoadingLogin />\n          </div>\n        )\n        : (\n          <div>\n            <div className=\"page-login\" data-testid=\"page-login\">\n              <div className=\"login-logo-title\">\n                <img src={ SpotifyLogo } alt=\"Spotify Logo\" />\n                <h2 className=\"header-collab\">X</h2>\n                <h1 className=\"login-name\">neur4l</h1>\n              </div>\n              <br />\n              <form action=\"\" className=\"login-inputs\">\n                <Input\n                  id=\"inputLogin\"\n                  className=\"inputLogin\"\n                  data-testid=\"login-name-input\"\n                  name=\"inputLogin\"\n                  onChange={ this.handleChanges }\n                  placeholder=\"Insert your name...\"\n                  type=\"text\"\n                  value={ inputLogin }\n                />\n\n                <Input\n                  id=\"inputPassword\"\n                  className=\"inputLogin inputPassword\"\n                  name=\"inputPassword\"\n                  onChange={ this.handleChanges }\n                  placeholder=\"Password...\"\n                  type=\"password\"\n                  value={ inputPassword }\n                />\n\n                {\n                  isSubmitBttIsDisabled\n                    ? (\n                      <Input\n                        id=\"loginSubmitButton\"\n                        className=\"loginSubmitButton loginSubmitButtonDisabled\"\n                        data-testid=\"login-submit-button\"\n                        disabled={ isSubmitBttIsDisabled }\n                        name=\"loginSubmitButton\"\n                        type=\"submit\"\n                        value=\"Sign in\"\n                      />\n                    )\n                    : (\n                      <Input\n                        id=\"loginSubmitButton\"\n                        className=\"loginSubmitButton loginSubmitButtonEnabled\"\n                        data-testid=\"login-submit-button\"\n                        disabled={ isSubmitBttIsDisabled }\n                        name=\"loginSubmitButton\"\n                        type=\"submit\"\n                        value=\"Sign in\"\n                        onClick={ async (e) => {\n                          e.preventDefault();\n                          this.setState({ isLoading: true });\n                          await createUser({ name: inputLogin, image: defaultImg });\n                          this.setState({ isLoading: false, authorized: true });\n                        } }\n                      />\n                    )\n                }\n\n                {\n                  authorized && <Redirect to=\"/search\" />\n                }\n              </form>\n            </div>\n          </div>\n        )\n    );\n  }\n}\n\nexport default Login;\n\n//\n","import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport '../styles/notFound.css';\n\nclass NotFound extends Component {\n  render() {\n    const notFound = '404: Not found this page :(';\n\n    return (\n      <div>\n        <div className=\"headerPattern patternPages\" data-testid=\"page-not-found\">\n          <Header { ...this.props } />\n          <div className=\"patternPages notFoundCentered\">\n            <h1 className=\"titlePage\">{notFound}</h1>\n            <div className=\"easterEggDiv\">\n              <img\n                src=\"https://preview.redd.it/8p9lu946wrb81.jpg?auto=webp&s=5038299dd1c159334be0c3bcc5e57af91a317b66\"\n                alt=\"\"\n                className=\"easterEggImage\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport { getUser } from '../services/userAPI';\nimport '../styles/profile.css';\n\nclass Profile extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      userLoad: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  componentWillUnmount() {\n    this.setState = () => {};\n  }\n\n  handleLoad = (user) => {\n    this.setState((prevState) => ({\n      isLoading: !prevState.isLoading,\n      userLoad: user,\n    }));\n  }\n\n  fetchUser = async () => {\n    const user = await getUser();\n    this.handleLoad(user);\n  }\n\n  render() {\n    const { userLoad: { name, email, image, description }, isLoading } = this.state;\n\n    return (\n      <div className=\"headerPattern\">\n        <Header { ...this.props } />\n\n        {\n          isLoading ? <Loading />\n            : (\n              <section data-testid=\"page-profile\" className=\"pageProfile  patternPages\">\n                <h1 className=\"titlePage\">Profile page</h1>\n\n                <div className=\"divProfilePicture\">\n\n                  {\n                    image.length > 1\n                      ? (\n                        <img\n                          src={ image }\n                          alt=\"Profile\"\n                          className=\"profilePicture\"\n                          data-testid=\"profile-image\"\n                        />\n                      )\n                      : (\n                        <img\n                          src=\"https://i.pinimg.com/474x/86/0d/cd/860dcdf5cd536bfd86d8fc86efdbdd18.jpg\"\n                          alt=\"Profile\"\n                          className=\"profilePicture\"\n                          data-testid=\"profile-image\"\n                        />\n                      )\n                  }\n                </div>\n\n                <div className=\"cardProfile\">\n\n                  <div className=\"cardDefault\">\n                    <ul>\n                      <li>Name:</li>\n                      <li>E-mail:</li>\n                      <li>Description:</li>\n                    </ul>\n                  </div>\n\n                  <div className=\"cardValue\">\n                    <ul>\n                      <li>{name}</li>\n                      <li>{email}</li>\n                      <li>{description}</li>\n                    </ul>\n                  </div>\n                </div>\n\n                <button\n                  type=\"button\"\n                  className=\"buttonEditProfile\"\n                >\n                  <Link\n                    to=\"/profile/edit\"\n                    className=\"linkStyle\"\n                  >\n                    Edit profile\n\n                  </Link>\n                </button>\n              </section>\n            )\n\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport { getUser, updateUser } from '../services/userAPI';\nimport '../styles/profileEdit.css';\n\nclass ProfileEdit extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      userLoad: [],\n      isButtonDisabled: true,\n      redirect: false,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n    this.buttonVerifier();\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    const { userLoad, infoToUpdate } = this.state;\n\n    let newUserInfo;\n    const destructureUser = { ...userLoad };\n    const destructureInfo = { ...infoToUpdate };\n\n    if (infoToUpdate === undefined) {\n      newUserInfo = destructureUser;\n    } else {\n      newUserInfo = destructureInfo;\n    }\n\n    newUserInfo[name] = value;\n\n    this.setState({\n      infoToUpdate: newUserInfo,\n    }, this.buttonVerifier());\n  }\n\n  handleLoad() {\n    this.setState((prevState) => ({\n      isLoading: !prevState.isLoading,\n    }));\n  }\n\n  fetchUser = async () => {\n    const user = await getUser();\n\n    this.setState({\n      userLoad: user,\n    });\n\n    this.handleLoad();\n\n    return user;\n  }\n\n  handleClick = (e) => {\n    e.preventDefault();\n    const { infoToUpdate } = this.state;\n\n    this.setState({ isLoading: true });\n    updateUser(infoToUpdate);\n    this.setState({\n      isLoading: false,\n      redirect: true,\n    });\n  }\n\n  buttonVerifier = () => {\n    const { infoToUpdate: update } = this.state;\n    const result = { ...update };\n\n    // Se todos forem verdadeiro, botão habilita\n    const boolButton = Object.values(result).every((item) => item);\n\n    // neguei para não usar o prevstate e negar a condição passada, mais linhas para o mesmo\n    this.setState({\n      isButtonDisabled: !boolButton,\n    });\n  }\n\n  render() {\n    const { userLoad: { name, email, image, description },\n      isLoading,\n      isButtonDisabled,\n      redirect,\n    } = this.state;\n\n    return (\n      <div className=\"headerPattern\">\n        <Header { ...this.props } />\n\n        {\n          isLoading ? <Loading />\n            : (\n              <div className=\"patternPages\" data-testid=\"page-profile-edit\">\n                <h2 className=\"titlePage\">Edit Profile</h2>\n                <section className=\"formContainer\">\n\n                  <form action=\"\" className=\"formEdit\">\n                    <label htmlFor=\"inputName\">\n                      <div>Name:</div>\n                      <input\n                        type=\"text\"\n                        id=\"inputName\"\n                        name=\"name\"\n                        defaultValue={ name }\n                        onChange={ this.handleChange }\n                        data-testid=\"edit-input-name\"\n                        required\n                      />\n                    </label>\n\n                    <label htmlFor=\"inputEmail\">\n                      <div>E-mail:</div>\n                      <input\n                        type=\"email\"\n                        id=\"inputEmail\"\n                        name=\"email\"\n                        defaultValue={ email }\n                        onChange={ this.handleChange }\n                        data-testid=\"edit-input-email\"\n                        required\n                      />\n                    </label>\n\n                    <label htmlFor=\"inputImage\">\n                      <div>Image:</div>\n                      <input\n                        type=\"text\"\n                        name=\"image\"\n                        id=\"inputImage\"\n                        defaultValue={ image }\n                        onChange={ this.handleChange }\n                        data-testid=\"edit-input-image\"\n                      />\n                    </label>\n\n                    <label htmlFor=\"inputDescription\">\n                      <div>Description:</div>\n                      <input\n                        name=\"description\"\n                        id=\"inputDescription\"\n                        type=\"text\"\n                        maxLength=\"144\"\n                        onChange={ this.handleChange }\n                        data-testid=\"edit-input-description\"\n                        defaultValue={ description }\n                        required\n                      />\n                    </label>\n\n                    <input\n                      id=\"buttonSub\"\n                      className=\"buttonEditProfile\"\n                      type=\"submit\"\n                      value=\"Edit profile\"\n                      onClick={ (e) => this.handleClick(e) }\n                      data-testid=\"edit-button-save\"\n                      disabled={ isButtonDisabled }\n                    />\n\n                    {\n                      redirect && <Redirect to=\"/profile\" />\n                    }\n\n                  </form>\n                </section>\n              </div>\n            )\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class ContentMap extends Component {\n  render() {\n    const { contentToMap } = this.props;\n\n    return (\n      <section className=\"sectionCards\">\n        {\n          contentToMap.map((music) => {\n            const {\n              artistName,\n              artworkUrl100,\n              collectionId,\n              collectionName,\n            } = music;\n\n            return (\n              <Link\n                className=\"linkStyle\"\n                key={ collectionId }\n                to={ `/album/${collectionId}` }\n                data-testid={ `link-to-album-${collectionId}` }\n              >\n                <div className=\"cardMusic\">\n                  <div className=\"imageCard\">\n                    <img\n                      className=\"imageInsideCard\"\n                      src={ artworkUrl100.replace('100x100bb.jpg', '600x600bb.jpg') }\n                      alt={ `Artwork of music ${collectionName}` }\n                    />\n                  </div>\n                  <div className=\"textCard\">\n                    <h5 className=\"ellipsis\">{collectionName}</h5>\n                    <p className=\"ellipsis\">{artistName}</p>\n                  </div>\n                </div>\n              </Link>\n            );\n          })\n        }\n      </section>\n    );\n  }\n}\n\nContentMap.propTypes = {\n  contentToMap: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { enableRenderAlbumAct } from '../actions';\nimport '../styles/contentResult.css';\nimport ContentMap from './ContentMap';\n\nclass ContentResult extends Component {\n  state = {\n    isEnabledToRenderLinkContent: false,\n  }\n\n  async componentDidMount() {\n    const { enableRender, searchAlbum: { render } } = this.props;\n\n    if (render) {\n      await enableRender(false);\n      this.setState({\n        isEnabledToRenderLinkContent: true,\n      });\n    }\n  }\n\n  render() {\n    const {\n      searchedMain,\n      searchResult,\n      searchedTest,\n      searchAlbum: { results },\n    } = this.props;\n\n    const { isEnabledToRenderLinkContent } = this.state;\n\n    return (\n      <div className=\"contentSpace\">\n\n        <section className=\"sectionResult\">\n          <div className=\"contentSearched\">\n            <h3>{searchedMain}</h3>\n            <p hidden>{ searchedTest }</p>\n          </div>\n\n          {\n            isEnabledToRenderLinkContent\n              ? <ContentMap { ...this.props } contentToMap={ results } />\n              : <ContentMap { ...this.props } contentToMap={ searchResult } />\n          }\n\n        </section>\n      </div>\n    );\n  }\n}\n\nContentResult.propTypes = {\n  searchResult: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n  searchedMain: PropTypes.string,\n  searchedTest: PropTypes.string,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  searchAlbum: state.searchAlbum,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  enableRender: (bool) => dispatch(enableRenderAlbumAct(bool)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentResult);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport '../styles/search.css';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport ContentResult from '../components/ContentResult';\nimport fetchAlbum from '../thunk/fetchAlbumInRedux';\nimport { inputSearchAct } from '../actions';\nimport TopsideBar from '../components/TopsideBar';\n// import FriendsActivity from '../components/FriendsActivity';\n\nclass Search extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      inputSearch: '',\n      isButtonDisabled: true,\n      isLoading: false,\n      searchedTest: '',\n      searchedMain: '',\n      searchResult: [],\n    };\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    }, () => {\n      const { inputSearch } = this.state;\n      const TWO = 2;\n\n      if (inputSearch.length >= TWO) {\n        this.setState({\n          isButtonDisabled: false,\n        });\n      }\n    });\n  }\n\n  handleClick = async () => {\n    const { inputSearch } = this.state;\n    const { inputSearchGlobal, searchAlbumGlobal } = this.props;\n\n    this.setState({\n      isLoading: true,\n      isButtonDisabled: true,\n      searchResult: [],\n      searchedMain: `Resultados de ${inputSearch}`,\n    });\n\n    const artist = await searchAlbumsAPI(inputSearch);\n\n    if (artist.length === 0) {\n      inputSearchGlobal('Nenhum álbum foi encontrado.');\n      return this.setState({\n        inputSearch: '',\n        isLoading: false,\n        searchedTest: 'Nenhum álbum foi encontrado',\n        searchedMain: `No results found for \"${inputSearch}\".`, // ponto para diferenciar do searchedTest\n      });\n    }\n\n    this.setState((prevState) => ({\n      inputSearch: '',\n      searchResult: artist,\n      isLoading: false,\n      searchedTest: `Resultados de álbuns de: ${prevState.inputSearch}`,\n      searchedMain: `Top results for ${prevState.inputSearch}`,\n    }));\n    inputSearchGlobal(inputSearch);\n    searchAlbumGlobal(inputSearch);\n  }\n\n  render() {\n    const {\n      isLoading,\n      inputSearch,\n      isButtonDisabled,\n    } = this.state;\n\n    return (\n      <div className=\"headerPattern\">\n        <Header { ...this.props } />\n        {\n          isLoading && <Loading />\n        }\n        <div data-testid=\"page-search\" className=\"patternPages\">\n          <TopsideBar\n            handleClick={ this.handleClick }\n            handleChange={ this.handleChange }\n            inputSearch={ inputSearch }\n            isButtonDisabled={ isButtonDisabled }\n          />\n\n          <ContentResult { ...this.state } />\n        </div>\n\n        {/* FriendsActivity sidebar */}\n        {/* <FriendsActivity /> */}\n\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  inputSearchGlobal: PropTypes.func,\n  searchAlbumGlobal: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  inputSearchGlobal: (inputValue) => dispatch(inputSearchAct(inputValue)),\n  searchAlbumGlobal: (inputValue) => dispatch(fetchAlbum(inputValue)),\n});\n\nexport default connect(null, mapDispatchToProps)(withRouter(Search));\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './app.css';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Login from './pages/Login';\nimport NotFound from './pages/NotFound';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport Search from './pages/Search';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleLoad = this.handleLoad.bind(this);\n  }\n\n  handleLoad() {\n    this.setState((prevState) => ({\n      isLoading: !prevState.isLoading,\n    }));\n  }\n\n  render() {\n    return (\n      <BrowserRouter basename=\"/neur4l.fy\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Login { ...this.state } handleLoad={ this.handleLoad } />\n          </Route>\n          <Route\n            path=\"/search\"\n            component={ (props) => <Search { ...props } /> }\n          />\n          <Route\n            path=\"/album/:id\"\n            component={ (props) => <Album { ...props } /> }\n          />\n          <Route\n            path=\"/favorites\"\n            component={ (props) => <Favorites { ...props } /> }\n          />\n          <Route\n            path=\"/profile/edit\"\n            component={ (props) => <ProfileEdit { ...props } /> }\n          />\n          <Route\n            path=\"/profile\"\n            component={ (props) => <Profile { ...props } /> }\n          />\n          <Route\n            exact\n            path=\"*\"\n            component={ (props) => <NotFound { ...props } /> }\n          />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n//\n","import {\n  RESPONSE_MUSICS,\n  SAVE_FAVORITE_MUSICS,\n  SORT_FAV_MUSICS,\n  SORT_MUSIC,\n} from '../actions';\n\nconst initialState = {\n  tracks: [],\n  sortedTracks: [],\n  favorites: [],\n  favoritesSorted: [],\n};\n\nconst responseMusics = (state = initialState, action) => {\n  switch (action.type) {\n  case RESPONSE_MUSICS:\n    return {\n      ...state,\n      tracks: action.musics,\n    };\n\n  case SORT_MUSIC:\n    return {\n      ...state,\n      tracks: action.sorted,\n    };\n\n  case SAVE_FAVORITE_MUSICS:\n    return {\n      ...state,\n      favorites: action.favorites,\n    };\n\n  case SORT_FAV_MUSICS:\n    return {\n      ...state,\n      favorites: action.sortedFav,\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport default responseMusics;\n","import {\n  ENABLE_RENDER_AFTER_CLICK_ON_LINK,\n  INPUT_SEARCH,\n  SEARCH_ALBUM,\n} from '../actions';\n\nconst initialState = {\n  inputSearch: '',\n  results: [],\n  render: false,\n};\n\nconst searchAlbum = (state = initialState, action) => {\n  switch (action.type) {\n  case SEARCH_ALBUM:\n    return {\n      ...state,\n      results: action.response,\n      render: false,\n    };\n\n  case INPUT_SEARCH:\n    return {\n      ...state,\n      inputSearch: action.inputValue,\n    };\n\n  case ENABLE_RENDER_AFTER_CLICK_ON_LINK:\n    return {\n      ...state,\n      render: action.boolStringfied,\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport default searchAlbum;\n","import { combineReducers } from 'redux';\nimport responseMusics from './responseMusics';\nimport searchAlbum from './searchAlbum';\n\nconst rootReducer = combineReducers({\n  searchAlbum,\n  responseMusics,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}