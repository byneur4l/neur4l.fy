{"version":3,"sources":["actions/index.js","images/friendsActivityProfile/capuchin-monkey-1.webp","images/friendsActivityProfile/capuchin-monkey-2.webp","images/friendsActivityProfile/catto-fisherhat.jpg","images/friendsActivityProfile/chonky-grey-cat.png","images/friendsActivityProfile/couple-photo.jpeg","images/friendsActivityProfile/cryptopunk-blue.jpg","images/friendsActivityProfile/fat-cat.webp","images/friendsActivityProfile/fortnite-superhero.webp","images/friendsActivityProfile/french-eiffel-tower.jpg","images/friendsActivityProfile/french-visa-1920x1080.jpg","images/friendsActivityProfile/girl-picture.jpg","images/friendsActivityProfile/logitech-logo.png","images/friendsActivityProfile/nft-bieber.jpg","data/friendsActivity/friendsData.js","images/friendsActivityProfile/person-in-trip.jpeg","images/friendsActivityProfile/person-cartrip-2.jpg","images/friendsActivityProfile/pug-happy-3.webp","images/friendsActivityProfile/pug-happy.jpg","images/friendsActivityProfile/pug-profile-happy.jpg","images/friendsActivityProfile/sunshie.jpeg","images/friendsActivityProfile/vacation.png","thunk/fetchAlbumInRedux.js","thunk/fetchMusicsInRedux.js","components/Input.js","components/FriendActivityDefault.js","components/LinkFriendActivity.js","components/LinkArtistName.js","components/FriendsActivitySidebar.js","services/userAPI.js","images/spotifyLogoHeader.png","images/navLinks/magGlass.png","images/navLinks/user.png","components/TopsideHeader.js","services/favoriteSongsAPI.js","components/FavSideList.js","components/LoadingHeader.js","components/Header.js","components/Loading.js","components/ConditionFilterTitle.js","components/ConditionFilterTime.js","components/ConditionClockRender.js","components/FilterRow.js","helpers/player.js","helpers/songTime.js","components/ButtonPlay.js","components/MusicMap.js","components/MusicCard.js","services/musicsAPI.js","components/AlbumHeaderDetails.js","components/PageController.js","components/ProfileHeader.js","components/InputSearch.js","components/TopsideBar.js","components/ColorExtracted.js","components/AlbumHeader.js","pages/Album.js","pages/Favorites.js","images/spotify-logo-login-color.svg","components/LoadingLogin.js","pages/Login.js","pages/NotFound.js","pages/Profile.js","pages/ProfileEdit.js","services/searchAlbumsAPI.js","components/ContentMap.js","components/ContentResult.js","pages/Search.js","App.js","reducers/responseMusics.js","reducers/searchAlbum.js","reducers/index.js","store/index.js","index.js"],"names":["SEARCH_ALBUM","INPUT_SEARCH","ENABLE_RENDER_AFTER_CLICK_ON_LINK","SORT_MUSIC","RESPONSE_MUSICS","SAVE_FAVORITE_MUSICS","SORT_FAV_MUSICS","SAVE_ALBUM_NAME","inputSearchAct","inputValue","type","searchAlbumAct","response","saveAlbumNameAct","albumName","enableRenderAlbumAct","boolStringfied","responseMusicsAct","musics","saveFavoriteMusicsAct","favorites","electro","musicData","image","fortSuperHero","username","musicName","artistName","collectionId","playlist","nftBieber","cattoFisherhat","capuchinMonkey1","capuchinMonkey2","chonkyGreyCat","couplePhoto","cryptopunkBlue","frenchVisa","eiffelTower","chonkyOrangeCat","logitechLogo","girlPic","fetchAlbum","artistNameURL","dispatch","a","url","fetch","request","json","results","fetchMusics","id","slice","Input","this","props","htmlFor","Component","defaultProps","FriendActivityDefault","className","icon","faUser","value","LinkFriendActivity","paragraph","handleMusicNameClick","to","onClick","LinkArtistName","handleArtistNameClick","FriendsActivitySidebar","state","hasFriendActivity","renderFriends","friendActivityAnimation","friendsIntervalID","fetchAlbumThunk","fetchMusicsThunk","inputSearchGlobal","innerText","target","searchAlbumGlobal","enableRender","setInterval","setState","setTimeout","nextProps","clearInterval","musicDataSliced","faUserPlus","map","friend","i","src","alt","faPlay","connect","albumId","bool","USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","callback","getUser","Promise","resolve","parse","getItem","createUser","name","email","description","TopsideHeader","favoriteHeader","userToFavorites","currentYear","Date","getFullYear","albumFake","userImage","favoriteTitle","collectionName","artworkUrl100","releaseDate","toString","resetSearch","SpotifyLogoHeader","magGlass","width","userImg","style","backgroundColor","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","FavSideList","fetchFavoriteSongs","saveFavoriteMusics","favoritesToSidebar","trackName","responseMusics","saveUrl","saveUrlAct","LoadingHeader","Header","isLoading","catchUser","bind","forceReloadVerifier","length","forceReload","handleReload","prevState","reload","Loading","ConditionFilterTitle","filterTitle","faSortDown","faSortUp","ConditionFilterTime","filterTime","ConditionClockRender","path","pathFavorites","sortMusicByTime","tabIndex","faClock","pathAlbumId","FilterRow","favoritesClone","tracksClone","filterAlbum","saveTracksToReset","tracks","resetFilter","match","sortMusic","sortFavoriteMusic","sortMusicAlphOrderAndReverse","sortTracksAlpha","sort","b","localeCompare","sortTracksDesc","trackTimeMillis","sortMusicByAlbum","searchAlbum","sorted","sortMusicAct","sortedFav","withRouter","playAudio","currentTarget","attributes","document","querySelectorAll","forEach","player","paused","volume","pause","play","THOUSAND","totalAlbumTime","hoursHouse","reduce","acc","hours","Math","trunc","minutesHouse","toFixed","split","minutesToNum","minutes","round","ButtonPlay","previewUrl","favoritesPath","handlePlayIcon","handlePauseIcon","played","status","faPause","e","controls","hidden","kind","MusicMap","handleArtistNameLink","handleCheck","checkedAndFavorite","artist","artworkUrl60","trackNumber","ms","convertMillsToMin","seconds","secondsHouse","join","convertMillsToSeconds","role","classToFind","querySelector","addClass","classList","add","remove","placeSelectedClass","onKeyPress","includes","faHeart","onChange","checked","MusicCard","getMusics","requestJson","AlbumHeaderDetails","albumYear","year","sideInfoTracks","albumTime","albumTrackTime","albumCollection","pathname","location","PageController","previousPageButton","goBack","history","nextPageButton","goForward","onKeyUp","faAngleLeft","faAngleRight","ProfileHeader","InputSearch","activateBlur","preventDefault","key","keyCode","blur","handleClick","handleChange","inputSearch","action","onSubmit","faMagnifyingGlass","placeholder","autoComplete","TopsideBar","ColorExtracted","getColors","rgb","replace","AlbumHeader","colors","gradientColorHandler","console","log","Album","arr","handleLoad","fetchMusic","album","albumTracks","isHeaderLoading","saveResponseMusics","saveAlbumName","music","idFavoriteSongs","filterChecked","params","search","id2","musicId","backgroundImage","Favorites","getFavoriteAndRemoveFromList","LoadingLogin","Login","handleChanges","handleEffects","inputLogin","inputPassword","isSubmitBttIsDisabled","authorized","lengthLogin","lengthPassword","newLoginVerification","SpotifyLogo","disabled","NotFound","Profile","userLoad","fetchUser","ProfileEdit","newUserInfo","infoToUpdate","destructureUser","destructureInfo","undefined","buttonVerifier","updatedUser","redirect","update","result","boolButton","Object","values","every","item","isButtonDisabled","defaultValue","required","maxLength","searchAlbumsAPI","encodeURI","replaceAll","getAlbumsAPI","APIResponse","artistId","collectionPrice","trackCount","ContentMap","contentToMap","ContentResult","searchedMain","searchResult","render","Search","searchedTest","App","basename","exact","component","React","initialState","sortedTracks","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1bb0932c.chunk.js","sourcesContent":["export const SEARCH_ALBUM = 'SEARCH_ALBUM';\nexport const INPUT_SEARCH = 'INPUT_SEARCH';\nexport const ENABLE_RENDER_AFTER_CLICK_ON_LINK = 'ENABLE_RENDER_AFTER_CLICK_ON_LINK';\nexport const SORT_MUSIC = 'SORT_MUSIC';\nexport const RESPONSE_MUSICS = 'RESPONSE_MUSICS';\nexport const SAVE_FAVORITE_MUSICS = 'SAVE_FAVORITE_MUSICS';\nexport const SORT_FAV_MUSICS = 'SORT_FAV_MUSICS';\nexport const SAVE_URL = 'SAVE_URL';\nexport const SAVE_ALBUM_NAME = 'SAVE_ALBUM_NAME';\nexport const FAVORITES_SAVE = 'FAVORITES_SAVE';\n\nexport const inputSearchAct = (inputValue) => ({\n  type: INPUT_SEARCH,\n  inputValue,\n});\n\nexport const searchAlbumAct = (response) => ({\n  type: SEARCH_ALBUM,\n  response,\n});\n\nexport const saveAlbumNameAct = (albumName) => ({\n  type: SAVE_ALBUM_NAME,\n  albumName,\n});\n\nexport const enableRenderAlbumAct = (boolStringfied) => ({\n  type: ENABLE_RENDER_AFTER_CLICK_ON_LINK,\n  boolStringfied,\n});\n\nexport const responseMusicsAct = (musics) => ({\n  type: RESPONSE_MUSICS,\n  musics,\n});\n\nexport const saveFavoriteMusicsAct = (favorites) => ({\n  type: SAVE_FAVORITE_MUSICS,\n  favorites,\n});\n\nexport const sortFavoriteMusicsAct = (sortedFav) => ({\n  type: SORT_FAV_MUSICS,\n  sortedFav,\n});\n\nexport const sortMusicAct = (sorted) => ({\n  type: SORT_MUSIC,\n  sorted,\n});\n\nexport const saveUrlAct = (url) => ({\n  type: SAVE_URL,\n  url,\n});\n\nexport const getUserToFavoritesAct = (saveFav) => ({\n  type: FAVORITES_SAVE,\n  saveFav,\n});\n","export default __webpack_public_path__ + \"static/media/capuchin-monkey-1.e5e9c9f6.webp\";","export default __webpack_public_path__ + \"static/media/capuchin-monkey-2.cc86a2b1.webp\";","export default __webpack_public_path__ + \"static/media/catto-fisherhat.a1f39509.jpg\";","export default __webpack_public_path__ + \"static/media/chonky-grey-cat.dd761a0e.png\";","export default __webpack_public_path__ + \"static/media/couple-photo.7a1f1594.jpeg\";","export default __webpack_public_path__ + \"static/media/cryptopunk-blue.0ff578bf.jpg\";","export default __webpack_public_path__ + \"static/media/fat-cat.8fa38937.webp\";","export default __webpack_public_path__ + \"static/media/fortnite-superhero.d336a290.webp\";","export default __webpack_public_path__ + \"static/media/french-eiffel-tower.a3cb1783.jpg\";","export default __webpack_public_path__ + \"static/media/french-visa-1920x1080.4875525e.jpg\";","export default __webpack_public_path__ + \"static/media/girl-picture.f0075871.jpg\";","export default __webpack_public_path__ + \"static/media/logitech-logo.7e626391.png\";","export default __webpack_public_path__ + \"static/media/nft-bieber.368f2935.jpg\";","// Images imports\nimport capuchinMonkey1 from '../../images/friendsActivityProfile/capuchin-monkey-1.webp';\nimport capuchinMonkey2 from '../../images/friendsActivityProfile/capuchin-monkey-2.webp';\nimport cattoFisherhat from '../../images/friendsActivityProfile/catto-fisherhat.jpg';\nimport chonkyGreyCat from '../../images/friendsActivityProfile/chonky-grey-cat.png';\nimport couplePhoto from '../../images/friendsActivityProfile/couple-photo.jpeg';\nimport cryptopunkBlue from '../../images/friendsActivityProfile/cryptopunk-blue.jpg';\nimport chonkyOrangeCat from '../../images/friendsActivityProfile/fat-cat.webp';\nimport fortSuperHero from '../../images/friendsActivityProfile/fortnite-superhero.webp';\nimport eiffelTower from '../../images/friendsActivityProfile/french-eiffel-tower.jpg';\nimport frenchVisa from '../../images/friendsActivityProfile/french-visa-1920x1080.jpg';\nimport girlPic from '../../images/friendsActivityProfile/girl-picture.jpg';\nimport logitechLogo from '../../images/friendsActivityProfile/logitech-logo.png';\nimport nftBieber from '../../images/friendsActivityProfile/nft-bieber.jpg';\nimport personInACarTrip from '../../images/friendsActivityProfile/person-in-trip.jpeg';\nimport personInACarTrip2 from '../../images/friendsActivityProfile/person-cartrip-2.jpg';\nimport pugHappy from '../../images/friendsActivityProfile/pug-happy-3.webp';\nimport pugLyingDownHappy from '../../images/friendsActivityProfile/pug-happy.jpg';\nimport pugSeatedHappy from '../../images/friendsActivityProfile/pug-profile-happy.jpg';\nimport sunshine from '../../images/friendsActivityProfile/sunshie.jpeg';\nimport vacation from '../../images/friendsActivityProfile/vacation.png';\n\nexport const idAlbumData = [\n  { 1440642493: 'Take Care (Deluxe Version)' },\n  { 1451901307: 'Graduation' },\n  { 1578986656: 'Cold Heart (PNAU Remix) - Single' },\n  { 395711243: 'Mozart - 100 Supreme Classical Masterpieces: Rise of the Masters' },\n  { 1440841363: 'Views' },\n  { 1423284802: 'Cross Road' },\n  { 273714443: 'Toxicity' },\n  { 1440783617: 'Nevermind' },\n  { 1442845496: 'Construção' },\n  { 1421241217: 'ASTROWORLD' },\n  { 1462912754: 'My Girl - Single' },\n  { 1346689058: 'Wild Kidz - Single' },\n  { 1440763429: 'Greatest Hits' },\n  { 203880450: 'The Best of Depeche Mode, Vol. 1 (Deluxe Version)' },\n  { 824700396: 'The Devil\\'s Walk' },\n  { 266222258: 'A Flock of Seagulls' },\n  { 933067562: 'Dancin (feat. Luvli) [Krono Remix] - Single' },\n  { 574043989: 'Highway to Hell' },\n  { 902620286: 'Led Zeppelin IV (Deluxe Edition)' },\n  { 1440650816: 'A Night at the Opera (Deluxe Edition)' },\n];\n\nconst electro = 'how to feel better';\n\nexport const musicData = [\n  {\n    image: fortSuperHero,\n    username: 'Lucca Baker',\n    musicName: 'Over My Dead Body',\n    artistName: 'Drake',\n    collectionId: 1440642493,\n    playlist: 'new day, new way',\n  },\n  {\n    image: personInACarTrip,\n    username: 'Viktoria Martin',\n    musicName: 'Stronger',\n    artistName: 'Kanye West',\n    collectionId: 1451901307,\n    playlist: 'Ascension to Heaven',\n  },\n  {\n    image: nftBieber,\n    username: 'Stephan Ferguson',\n    musicName: 'Cold Heart',\n    artistName: 'Elton John & Dua Lipa',\n    collectionId: 1578986656,\n    playlist: electro,\n  },\n  {\n    image: cattoFisherhat,\n    username: 'John Antony',\n    musicName: 'Serenade No. 13 in G Major, K. 525, \"Eine Kleine Nachtmusik\": I. Allegro',\n    artistName: 'Drottningholm Baroque Ensemble',\n    collectionId: 395711243,\n    playlist: 'Classic Greatest Hits',\n  },\n  {\n    image: capuchinMonkey1,\n    username: 'Julio Freeman',\n    musicName: 'Hotline Bling',\n    artistName: 'Drake',\n    collectionId: 1440841363,\n    playlist: 'Não olhe pra trás',\n  },\n  {\n    image: capuchinMonkey2,\n    username: 'Lucian Freeman',\n    musicName: 'Livin\\' On a Prayer',\n    artistName: 'Bon Jovi',\n    collectionId: 1423284802,\n    playlist: 'Relax Station',\n  },\n  {\n    image: chonkyGreyCat,\n    username: 'Matthew Gordon',\n    musicName: 'Toxicity',\n    artistName: 'System of A Down',\n    collectionId: 273714443,\n    playlist: 'Best of Rock: 2002',\n  },\n  {\n    image: couplePhoto,\n    username: 'Artur Powell',\n    musicName: 'Smells Like Teen Spirit',\n    artistName: 'Nirvana',\n    collectionId: 1440783617,\n    playlist: 'Discover Weekly',\n  },\n  {\n    image: cryptopunkBlue,\n    username: 'Raphael Larson',\n    musicName: 'Cotidiano',\n    artistName: 'Chico Buarque',\n    collectionId: 1442845496,\n    playlist: 'This Is Chico Buarque',\n  },\n  {\n    image: frenchVisa,\n    username: 'Matthew Baker',\n    musicName: 'SICK MODE',\n    artistName: 'Travis Scott',\n    collectionId: 1421241217,\n    playlist: 'ASTROWORLD',\n  },\n  {\n    image: eiffelTower,\n    username: 'Anthony',\n    musicName: 'Wild Kidz',\n    artistName: 'Vintage Culture & Ricci',\n    collectionId: 1462912754,\n    playlist: electro,\n  },\n  {\n    image: chonkyOrangeCat,\n    username: 'Giorgia Campbell',\n    musicName: 'My Girl',\n    artistName: 'Vintage Culture & Fancy Inc',\n    collectionId: 1346689058,\n    playlist: electro,\n  },\n  {\n    image: logitechLogo,\n    username: 'Tales Scott',\n    musicName: 'Hit \\'Em Up (feat. Outlawz)',\n    artistName: 'Tupac Shakur',\n    collectionId: 1440763429,\n    playlist: 'back to Compton',\n  },\n  {\n    image: girlPic,\n    username: 'Beatrice Franklin',\n    musicName: 'Enjoy the Silence',\n    artistName: 'Depeche Mode',\n    collectionId: 203880450,\n    playlist: 'new day, new way',\n  },\n  {\n    image: personInACarTrip2,\n    username: 'Beatrice Rogers',\n    musicName: 'Goodbye (with Soap & Skin)',\n    artistName: 'Apparat',\n    collectionId: 824700396,\n    playlist: 'Dark(Theme Song) - Goobye - Netflix Original',\n  },\n  {\n    image: pugHappy,\n    username: 'James Carian',\n    musicName: 'I Ran (So Far Away)',\n    artistName: 'A Flock of Seagulls',\n    collectionId: 266222258,\n    playlist: 'Today\\'s Top Hits',\n  },\n  {\n    image: pugLyingDownHappy,\n    username: 'Gaius Campbell',\n    musicName: 'Dancin (feat. Luvli)',\n    artistName: 'Aaron Smith',\n    collectionId: 933067562,\n    playlist: electro,\n  },\n  {\n    image: pugSeatedHappy,\n    username: 'Peter Scott',\n    musicName: 'Highway to Hell',\n    artistName: 'AC/DC',\n    collectionId: 574043989,\n    playlist: 'Ascension to Heaven',\n  },\n  {\n    image: sunshine,\n    username: 'Carl Murphy',\n    musicName: 'Stairway to Heaven',\n    artistName: 'Led Zeppelin',\n    collectionId: 902620286,\n    playlist: 'This is Led Zeppelin',\n  },\n  {\n    image: vacation,\n    username: 'Alan Patterson',\n    musicName: 'Bohemian Rhapsody',\n    artistName: 'Queen',\n    collectionId: 1440650816,\n    playlist: 'Queen\\'s Greatest Hits 1970-2011',\n  },\n];\n","export default __webpack_public_path__ + \"static/media/person-in-trip.ee7a9c2a.jpeg\";","export default __webpack_public_path__ + \"static/media/person-cartrip-2.7c143163.jpg\";","export default __webpack_public_path__ + \"static/media/pug-happy-3.8d913bdf.webp\";","export default __webpack_public_path__ + \"static/media/pug-happy.474a5ecc.jpg\";","export default __webpack_public_path__ + \"static/media/pug-profile-happy.0779a464.jpg\";","export default __webpack_public_path__ + \"static/media/sunshie.ca56502b.jpeg\";","export default __webpack_public_path__ + \"static/media/vacation.4a9f0e75.png\";","import { searchAlbumAct } from '../actions';\n\nconst fetchAlbum = (artistNameURL) => async (dispatch) => {\n  const url = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  try {\n    const request = await fetch(url);\n    const { results } = await request.json();\n    dispatch(searchAlbumAct(results));\n  } catch (error) {\n    dispatch(searchAlbumAct(error));\n  }\n};\n\nexport default fetchAlbum;\n","import { responseMusicsAct, saveAlbumNameAct } from '../actions';\n\nconst fetchMusics = (id) => async (dispatch) => {\n  const url = `https://itunes.apple.com/lookup?id=${id}&entity=song`;\n\n  try {\n    const request = await fetch(url);\n    const { results } = await request.json();\n    dispatch(saveAlbumNameAct(results[0]));\n    dispatch(responseMusicsAct(results.slice(1)));\n  } catch (error) {\n    dispatch(responseMusicsAct(error));\n  }\n};\n\nexport default fetchMusics;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nclass Input extends Component {\n  render() {\n    const {\n      id,\n    } = this.props;\n\n    return (\n      <label htmlFor={ id }>\n        <input\n          { ...this.props }\n        />\n      </label>\n    );\n  }\n}\n\nInput.defaultProps = {\n  id: 'nomeQualquer',\n};\n\nInput.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default Input;\n","import { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport Input from './Input';\n\nexport default class FriendActivityDefault extends Component {\n  render() {\n    return (\n      <div className=\"noHover\">\n        <div className=\"subtitle\">\n          <p>Let friends and followers on Spotify</p>\n          <p>see what you&apos;re listening to.</p>\n        </div>\n\n        <div className=\"activities-container\">\n          <div className=\"friend-activity-default\">\n            <div className=\"friend-profile-picture\">\n              <FontAwesomeIcon icon={ faUser } />\n            </div>\n            <div>\n              <p className=\"friend-name friend-no-activity-nm\" />\n              <p className=\"friend-music-name friend-no-activity-am\" />\n              <p className=\"friend-artist-name friend-no-activity-am\" />\n            </div>\n\n          </div>\n\n          <div className=\"friend-activity-default\">\n            <div className=\"friend-profile-picture\">\n              <FontAwesomeIcon icon={ faUser } />\n            </div>\n            <div>\n              <p className=\"friend-name friend-no-activity-nm\" />\n              <p className=\"friend-music-name friend-no-activity-am\" />\n              <p className=\"friend-artist-name friend-no-activity-am\" />\n            </div>\n          </div>\n\n          <div className=\"friend-activity-default\">\n            <div className=\"friend-profile-picture\">\n              <FontAwesomeIcon\n                icon={ faUser }\n                className=\"fa-profile-no-activity\"\n              />\n            </div>\n            <div>\n              <p className=\"friend-name friend-no-activity-nm\" />\n              <p className=\"friend-music-name friend-no-activity-am\" />\n              <p className=\"friend-artist-name friend-no-activity-am\" />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"subtitle\">\n          <p>Go to Seetings &gt; Social and enable</p>\n          <p>&apos;Share my listening activity on</p>\n          <p>Spotify.&apos; You can turn this off at any</p>\n          <p>time.</p>\n        </div>\n\n        <div className=\"divButtonSettings\">\n          <Input\n            type=\"button\"\n            value=\"S E T T I N G S\"\n            className=\"buttonSettings\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass LinkFriendActivity extends Component {\n  render() {\n    const { collectionId, artistName, paragraph, handleMusicNameClick } = this.props;\n\n    return (\n      <Link\n        to={ `/album/${collectionId}` }\n        className=\"friend-music-name\"\n        onClick={ () => handleMusicNameClick(artistName, collectionId) }\n      >\n        <p\n          className=\"friend-music-name ellipsis\"\n        >\n          {paragraph}\n\n        </p>\n      </Link>\n    );\n  }\n}\n\nLinkFriendActivity.propTypes = {\n  artistName: PropTypes.string,\n  collectionId: PropTypes.number,\n  handleMusicNameClick: PropTypes.func,\n  paragraph: PropTypes.string,\n}.isRequired;\n\nexport default LinkFriendActivity;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass LinkArtistName extends Component {\n  render() {\n    const { paragraph, handleArtistNameClick } = this.props;\n\n    return (\n      <Link\n        to=\"/search\"\n        onClick={ handleArtistNameClick }\n        className=\"friend-artist-name\"\n      >\n        <p\n          className=\"friend-artist-name ellipsis\"\n        >\n          {paragraph}\n\n        </p>\n      </Link>\n    );\n  }\n}\n\nLinkArtistName.propTypes = {\n  handleArtistNameClick: PropTypes.func,\n  paragraph: PropTypes.string,\n}.isRequired;\n\nexport default LinkArtistName;\n","import PropTypes from 'prop-types';\nimport { faPlay, faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { enableRenderAlbumAct, inputSearchAct } from '../actions';\nimport { musicData } from '../data/friendsActivity/friendsData';\nimport '../styles/friendsActivity.css';\nimport fetchAlbum from '../thunk/fetchAlbumInRedux';\nimport fetchMusics from '../thunk/fetchMusicsInRedux';\nimport FriendActivityDefault from './FriendActivityDefault';\nimport LinkFriendActivity from './LinkFriendActivity';\nimport LinkArtistName from './LinkArtistName';\n\nclass FriendsActivitySidebar extends Component {\n  state = {\n    hasFriendActivity: false,\n    renderFriends: 0,\n    friendActivityAnimation: 'friend-activity friend-activity-opacity-start',\n    friendsIntervalID: '',\n  }\n\n  componentDidMount() {\n    const TWO_MIN_IN_MS = 120000;\n\n    const friendsIntervalID = setInterval(() => {\n      this.setState(({ renderFriends }) => ({\n        renderFriends: renderFriends + 1,\n        hasFriendActivity: true,\n        friendActivityAnimation: 'friend-activity friend-activity-opacity-start',\n      }));\n      setTimeout(() => this.setState({\n        friendActivityAnimation: 'friend-activity friend-activity-opacity-end',\n      }), 100);\n    },\n    TWO_MIN_IN_MS);\n\n    this.setState({ friendsIntervalID });\n  }\n\n  shouldComponentUpdate(nextProps, { renderFriends, friendsIntervalID }) {\n    const TWENTY = 20;\n    if (renderFriends === TWENTY) { clearInterval(friendsIntervalID); }\n    return true;\n  }\n\n  componentWillUnmount() {\n    const { friendsIntervalID } = this.state;\n    clearInterval(friendsIntervalID);\n  }\n\n  handleMusicNameClick = async (artistName, collectionId) => {\n    const { fetchAlbumThunk, fetchMusicsThunk, inputSearchGlobal } = this.props;\n    fetchAlbumThunk(artistName);\n    fetchMusicsThunk(collectionId);\n    await inputSearchGlobal(artistName);\n  }\n\n  handleArtistNameClick = async ({ target: { innerText } }) => {\n    const { inputSearchGlobal, searchAlbumGlobal, enableRender } = this.props;\n    inputSearchGlobal(innerText);\n    await searchAlbumGlobal(innerText);\n    enableRender(true);\n  }\n\n  render() {\n    const { hasFriendActivity, renderFriends, friendActivityAnimation } = this.state;\n    const musicDataClone = [...musicData];\n    const musicDataSliced = musicDataClone.slice(0, renderFriends); // usar esse no map\n\n    return (\n      <div className=\"friends-container-hero\">\n        <div className=\"headerActFrnd\">\n          <h4 className=\"title-hero\">Friends Activity</h4>\n          <FontAwesomeIcon icon={ faUserPlus } />\n        </div>\n\n        {\n          !hasFriendActivity\n            ? (\n              <FriendActivityDefault />\n            )\n            : (\n              <div className=\"father-activity\">\n                {\n                  musicDataSliced.map((friend, i) => {\n                    const { image, username, musicName,\n                      artistName, collectionId, playlist } = friend;\n\n                    if (i === (renderFriends - 1)) {\n                      return (\n                        <div key={ i } className={ friendActivityAnimation }>\n                          <div className=\"friend-profile-picture\">\n                            <img\n                              className=\"friend-pp\"\n                              src={ image }\n                              alt=\"\"\n                            />\n                            <div className=\"friend-pp-icon-father\">\n                              <FontAwesomeIcon\n                                icon={ faPlay }\n                                className=\"friend-pp-icon-play\"\n                              />\n                            </div>\n\n                          </div>\n                          <div className=\"friend-detail-info\">\n                            <div className=\"friend-name-ellipsis\">\n                              <p className=\"friend-name\">{username}</p>\n                              {/* FONT ICON // MUSIC TIMER */}\n                            </div>\n                            <div className=\"info-friend-music\">\n                              <div className=\"friend-music-ellipsis\">\n                                <LinkFriendActivity\n                                  collectionId={ collectionId }\n                                  artistName={ artistName }\n                                  paragraph={ musicName }\n                                  handleMusicNameClick={ () => this\n                                    .handleMusicNameClick(artistName, collectionId) }\n                                />\n\n                              </div>\n                              <p> • </p>\n                              <div className=\"friend-music-ellipsis\">\n                                <LinkArtistName\n                                  handleArtistNameClick={ this.handleArtistNameClick }\n                                  paragraph={ artistName }\n                                />\n                              </div>\n                            </div>\n                            <div className=\"friend-playlist-ellipsis\">\n                              <p className=\"friend-icon-style\">\n                                ♬\n                                <span\n                                  className=\"friend-playlist-name ellipsis\"\n                                >\n                                  {playlist}\n                                </span>\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    }\n\n                    return (\n                      <div key={ i } className=\"friend-activity\">\n                        <div className=\"friend-profile-picture\">\n                          <img\n                            className=\"friend-pp\"\n                            src={ image }\n                            alt=\"\"\n                          />\n                          <div className=\"friend-pp-icon-father\">\n                            <FontAwesomeIcon\n                              icon={ faPlay }\n                              className=\"friend-pp-icon-play\"\n                            />\n                          </div>\n\n                        </div>\n                        <div className=\"friend-detail-info\">\n                          <div className=\"friend-name-ellipsis\">\n                            <p className=\"friend-name\">{username}</p>\n                            {/* FONT ICON // MUSIC TIMER */}\n                          </div>\n                          <div className=\"info-friend-music\">\n                            <div className=\"friend-music-ellipsis\">\n                              <LinkFriendActivity\n                                collectionId={ collectionId }\n                                artistName={ artistName }\n                                paragraph={ musicName }\n                                handleMusicNameClick={ () => this\n                                  .handleMusicNameClick(artistName, collectionId) }\n                              />\n                            </div>\n                            <p> • </p>\n                            <div className=\"friend-music-ellipsis\">\n                              <LinkArtistName\n                                handleArtistNameClick={ this.handleArtistNameClick }\n                                paragraph={ artistName }\n                              />\n                            </div>\n                          </div>\n                          <div className=\"friend-playlist-ellipsis\">\n                            <p className=\"friend-icon-style\">\n                              ♬\n                              <span\n                                className=\"friend-playlist-name ellipsis\"\n                              >\n                                {playlist}\n                              </span>\n                            </p>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })\n                }\n              </div>\n            )\n        }\n\n      </div>\n    );\n  }\n}\n\nFriendsActivitySidebar.propTypes = {\n  enableRender: PropTypes.func,\n  fetchAlbumThunk: PropTypes.func,\n  fetchMusicsThunk: PropTypes.func,\n  inputSearchGlobal: PropTypes.func,\n  searchAlbumGlobal: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAlbumThunk: (artistName) => dispatch(fetchAlbum(artistName)),\n  fetchMusicsThunk: (albumId) => dispatch(fetchMusics(albumId)),\n\n  inputSearchGlobal: (inputValue) => dispatch(inputSearchAct(inputValue)),\n  searchAlbumGlobal: (inputValue) => dispatch(fetchAlbum(inputValue)),\n  enableRender: (bool) => dispatch(enableRenderAlbumAct(bool)),\n});\n\nexport default connect(null, mapDispatchToProps)(FriendsActivitySidebar);\n","const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","export default __webpack_public_path__ + \"static/media/spotifyLogoHeader.f48fb565.png\";","export default __webpack_public_path__ + \"static/media/magGlass.b11d82bc.png\";","export default __webpack_public_path__ + \"static/media/user.4d7f4c3d.png\";","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport SpotifyLogoHeader from '../images/spotifyLogoHeader.png';\nimport { getUser } from '../services/userAPI';\nimport { inputSearchAct, saveAlbumNameAct } from '../actions';\nimport fetchAlbum from '../thunk/fetchAlbumInRedux';\nimport magGlass from '../images/navLinks/magGlass.png';\nimport userImg from '../images/navLinks/user.png';\n\nclass TopsideHeader extends Component {\n  favoriteHeader = async () => {\n    const { userToFavorites } = this.props;\n    const currentYear = new Date().getFullYear();\n    const user = await getUser();\n\n    const albumFake = {\n      artistName: user.name,\n      userImage: user.image,\n      favoriteTitle: 'PLAYLIST',\n      collectionName: 'Liked Songs',\n      artworkUrl100: 'https://t.scdn.co/images/3099b3803ad9496896c43f22fe9be8c4.png',\n      releaseDate: currentYear.toString(),\n    };\n\n    await userToFavorites(albumFake);\n  } // fazer isso no login\n\n  resetSearch = () => {\n    const { inputSearchGlobal, searchAlbumGlobal } = this.props;\n    inputSearchGlobal('');\n    searchAlbumGlobal([]);\n  }\n\n  render() {\n    return (\n      <div className=\"headerTopside\">\n        <div className=\"header-content\">\n          <Link to=\"/search\" className=\"header-link-style\">\n            <div className=\"header-title\">\n              <img src={ SpotifyLogoHeader } alt=\"Spotify Logo\" />\n              <h4 className=\"header-collab\">X</h4>\n              <h2>neur4l</h2>\n            </div>\n          </Link>\n        </div>\n\n        <div className=\"navLinks-container\">\n          <div className=\"alignNavSideBar\">\n            <NavLink\n              className=\"navLinks\"\n              to=\"/search\"\n              data-testid=\"link-to-search\"\n              // onClick={ () => this.resetSearch() }\n            >\n              <img src={ magGlass } alt=\"\" width=\"25\" className=\"iconSet\" />\n              <span className=\"nav-side-text\">Search</span>\n            </NavLink>\n          </div>\n\n          <div className=\"alignNavSideBar\">\n            <NavLink\n              className=\"navLinks\"\n              to=\"/favorites\"\n              data-testid=\"link-to-favorites\"\n              onClick={ this.favoriteHeader }\n            >\n              <img src=\"https://t.scdn.co/images/3099b3803ad9496896c43f22fe9be8c4.png\" alt=\"\" width=\"25\" className=\"iconSet\" />\n              <span className=\"nav-side-text\">Favorites</span>\n            </NavLink>\n          </div>\n\n          <div className=\"alignNavSideBar\">\n            <NavLink\n              className=\"navLinks\"\n              to=\"/profile\"\n              data-testid=\"link-to-profile\"\n            >\n              <img\n                src={ userImg }\n                alt=\"\"\n                width=\"25\"\n                className=\"iconSet\"\n                style={ { backgroundColor: '#006451' } }\n              />\n              <span className=\"nav-side-text\">Profile</span>\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTopsideHeader.propTypes = {\n  image: PropTypes.string,\n  isLoading: PropTypes.bool,\n  name: PropTypes.string,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  userToFavorites: (albumFake) => dispatch(saveAlbumNameAct(albumFake)),\n  inputSearchGlobal: (inputValue) => dispatch(inputSearchAct(inputValue)),\n  searchAlbumGlobal: (inputValue) => dispatch(fetchAlbum(inputValue)),\n});\n\nexport default connect(null, mapDispatchToProps)(TopsideHeader);\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    if (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n      localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n    }\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { inputSearchAct, saveFavoriteMusicsAct, saveUrlAct } from '../actions';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport fetchAlbum from '../thunk/fetchAlbumInRedux';\nimport fetchMusics from '../thunk/fetchMusicsInRedux';\n\nclass FavSideList extends Component {\n  componentDidMount() {\n    this.fetchFavoriteSongs();\n  }\n\n  fetchFavoriteSongs = async () => {\n    const { saveFavoriteMusics } = this.props;\n    const favorites = await getFavoriteSongs();\n    saveFavoriteMusics(favorites);\n  }\n\n  render() {\n    const {\n      favoritesToSidebar,\n      fetchAlbumThunk,\n      fetchMusicsThunk,\n      inputSearchGlobal,\n    } = this.props;\n\n    return (\n      <div className=\"favList\">\n        {\n          favoritesToSidebar.map((song) => {\n            const { artistName, collectionId, trackId, trackName } = song;\n            return (\n              <Link\n                to={ `/album/${collectionId}` }\n                key={ trackId }\n                className=\"sideLinkStyle\"\n                onClick={ async () => {\n                  fetchAlbumThunk(artistName);\n                  fetchMusicsThunk(collectionId);\n                  await inputSearchGlobal(artistName);\n                } }\n              >\n                <p className=\"side-fav-musics ellipsis\">{trackName}</p>\n              </Link>\n            );\n          })\n        }\n      </div>\n    );\n  }\n}\n\nFavSideList.propTypes = {\n  favoriteSongs: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n  fetchAlbum: PropTypes.func,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  favoritesToSidebar: state.responseMusics.favoritesToSidebar,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAlbumThunk: (artistName) => dispatch(fetchAlbum(artistName)),\n  fetchMusicsThunk: (albumId) => dispatch(fetchMusics(albumId)),\n  inputSearchGlobal: (inputValue) => dispatch(inputSearchAct(inputValue)),\n  saveFavoriteMusics: (favorites) => dispatch(saveFavoriteMusicsAct(favorites)),\n  saveUrl: (url) => dispatch(saveUrlAct(url)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FavSideList);\n","import React, { Component } from 'react';\nimport '../styles/loadingHeader.css';\n\nclass LoadingHeader extends Component {\n  render() {\n    return (\n      <div className=\"blocksHeader\">\n        {/*\n          Spinner art by Melissa Em in October 7, 2019\n          https://freefrontend.com/css-spinners/\n          Made with\n          HTML / CSS\n          https://codepen.io/meowwwls/pen/OJJPbGb\n        */}\n        <div className=\"blockHeader greenHeader\" />\n        <div className=\"blockHeader whiteHeader\" />\n      </div>\n    );\n  }\n}\n\nexport default LoadingHeader;\n","import React, { Component } from 'react';\nimport '../styles/header.css';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../services/userAPI';\nimport TopsideHeader from './TopsideHeader';\nimport FavSideList from './FavSideList';\nimport LoadingHeader from './LoadingHeader';\n\nclass Header extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      name: '',\n      image: 'https://i.pinimg.com/474x/86/0d/cd/860dcdf5cd536bfd86d8fc86efdbdd18.jpg',\n    };\n\n    this.catchUser = this.catchUser.bind(this);\n    this.forceReloadVerifier = this.forceReloadVerifier.bind(this);\n  }\n\n  componentDidMount() {\n    this.catchUser();\n  }\n\n  async catchUser() {\n    this.setState({ isLoading: true });\n    const user = await getUser();\n\n    this.setState(() => {\n      if (user.image.length > 0) {\n        return ({\n          isLoading: false,\n          name: user.name,\n          image: user.image,\n        });\n      }\n      return {\n        isLoading: false,\n        name: user.name,\n      };\n    });\n  }\n\n  forceReloadVerifier() {\n    const { forceReload, handleReload } = this.props;\n    const ms500 = 500;\n\n    if (forceReload) {\n      this.setState((prevState) => ({\n        reload: !prevState.reload,\n        isLoading: true,\n      }), () => {\n        this.fetchFavoriteSongs();\n        setTimeout(() => this.setState({ isLoading: false }), ms500);\n      });\n      handleReload();\n    }\n  }\n\n  render() {\n    const { isLoading } = this.state;\n\n    this.forceReloadVerifier();\n\n    return (\n      <header className=\"header-hero\" data-testid=\"header-component\">\n        <TopsideHeader { ...this.state } />\n\n        <hr className=\"sideBarHorizontalRow\" />\n\n        <div className=\"sideFavSongsContainer\">\n\n          {\n            isLoading\n              ? (\n                <LoadingHeader />\n              )\n              : (\n                <FavSideList\n                  { ...this.props }\n                />\n              )\n          }\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  url: PropTypes.string,\n}.isRequired;\n\nexport default Header;\n","import React, { Component } from 'react';\nimport '../styles/loading.css';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className=\"spinner\">\n        {/*\n          Spinner art by Melissa Em in October 7, 2019\n          https://freefrontend.com/css-spinners/\n          Made with\n          HTML / CSS\n          https://codepen.io/meowwwls/pen/OJJPbGb\n        */}\n        <div className=\"blocks\">\n          <div className=\"block green\" />\n          <div className=\"block white\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","import PropTypes from 'prop-types';\nimport { faSortDown, faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\n\nexport default class ConditionFilterTitle extends Component {\n  render() {\n    const { filterTitle } = this.props;\n    return (\n      <>\n        {\n          filterTitle === 'a-z'\n          && (\n            <FontAwesomeIcon\n              icon={ faSortDown }\n              className=\"faCentralizerFilter\"\n            />\n          )\n        }\n\n        {\n          filterTitle === 'z-a'\n          && (\n            <FontAwesomeIcon icon={ faSortUp } className=\"faCentralizerFilter\" />\n          )\n        }\n      </>\n    );\n  }\n}\n\nConditionFilterTitle.propTypes = {\n  filterTitle: PropTypes.string,\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport { faSortDown, faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\n\nexport default class ConditionFilterTime extends Component {\n  render() {\n    const { filterTime } = this.props;\n\n    return (\n      <>\n        {\n          filterTime === 'a-z'\n          && (\n            <FontAwesomeIcon\n              icon={ faSortDown }\n              className=\"faCentralizerFilter\"\n            />\n          )\n        }\n\n        {\n          filterTime === 'z-a'\n          && (\n            <FontAwesomeIcon icon={ faSortUp } className=\"faCentralizerFilter\" />\n          )\n        }\n      </>\n    );\n  }\n}\n\nConditionFilterTime.propTypes = {\n  filterTime: PropTypes.string,\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport ConditionFilterTime from './ConditionFilterTime';\n\nexport default class ConditionClockRender extends Component {\n  render() {\n    const { filterTime, path, pathFavorites, sortMusicByTime } = this.props;\n\n    return (\n      <div>\n        {\n          path === pathFavorites\n            ? (\n              <div className=\"filterRight\">\n                <div className=\"previewFavorite\" />\n                <div className=\"timeFilter\">\n                  <p\n                    className=\"albumFilters fitLinkContent\"\n                    onClick={ sortMusicByTime }\n                    tabIndex=\"-1\"\n                    aria-hidden=\"true\"\n                  >\n                    <FontAwesomeIcon icon={ faClock } />\n                    <ConditionFilterTime filterTime={ filterTime } />\n                  </p>\n                </div>\n              </div>\n            )\n            : (\n              <div className=\"filterRightAlbum\">\n                <div className=\"previewFavorite\" />\n                <div className=\"musicDurationAlbum\">\n                  <p\n                    className=\"albumFilters fitLinkContent\"\n                    onClick={ sortMusicByTime }\n                    tabIndex=\"-1\"\n                    aria-hidden=\"true\"\n                  >\n                    <FontAwesomeIcon icon={ faClock } />\n                    <ConditionFilterTime filterTime={ filterTime } />\n                  </p>\n                </div>\n              </div>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nConditionClockRender.propTypes = {\n  filterTime: PropTypes.func,\n  path: PropTypes.string,\n  pathFavorites: PropTypes.string,\n  sortMusicByTime: PropTypes.func,\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { sortFavoriteMusicsAct, sortMusicAct } from '../actions';\nimport ConditionFilterTitle from './ConditionFilterTitle';\nimport ConditionClockRender from './ConditionClockRender';\n\nconst pathAlbumId = '/album/:id';\nconst pathFavorites = '/favorites';\n\nclass FilterRow extends Component {\n  state = {\n    favoritesClone: [],\n    tracksClone: [],\n    filterTitle: '',\n    filterAlbum: '',\n    filterTime: '',\n  }\n\n  componentDidMount() {\n    this.saveTracksToReset();\n  }\n\n  saveTracksToReset = () => {\n    const { responseMusics: { favorites, tracks } } = this.props;\n    this.setState({ favoritesClone: [...favorites], tracksClone: [...tracks] });\n  }\n\n  resetFilter = () => {\n    const { match: { path }, sortMusic, sortFavoriteMusic } = this.props;\n    const { favoritesClone, tracksClone } = this.state;\n\n    this.setState({ filterTitle: '', filterTime: '', filterAlbum: '' });\n\n    const pathConditionToReset = path === pathAlbumId;\n    if (pathConditionToReset) sortMusic(tracksClone);\n    else { sortFavoriteMusic(favoritesClone); }\n  }\n\n  sortMusicAlphOrderAndReverse = () => {\n    const { responseMusics: { tracks, favorites }, sortMusic,\n      match: { path }, sortFavoriteMusic } = this.props;\n    const { filterTime, filterAlbum } = this.state;\n\n    if (filterTime !== '' || filterAlbum !== '') {\n      this.setState({ filterTime: '', filterAlbum: '' });\n    }\n\n    if (path === pathAlbumId) {\n      const sortTracksAlpha = [...tracks]\n        .sort((a, b) => (a.trackName).localeCompare(b.trackName));\n\n      if (tracks[0] === sortTracksAlpha[0]) {\n        const sortTracksDesc = [...tracks]\n          .sort((a, b) => (b.trackName).localeCompare(a.trackName));\n\n        this.setState({ filterTitle: 'z-a' });\n        return sortMusic(sortTracksDesc);\n      }\n      sortMusic(sortTracksAlpha);\n      this.setState({ filterTitle: 'a-z' });\n    }\n\n    if (path === pathFavorites) {\n      const sortTracksAlpha = [...favorites]\n        .sort((a, b) => (a.trackName).localeCompare(b.trackName));\n\n      if (favorites[0] === sortTracksAlpha[0]) {\n        const sortTracksDesc = [...favorites]\n          .sort((a, b) => (b.trackName).localeCompare(a.trackName));\n\n        this.setState({ filterTitle: 'z-a' });\n        return sortFavoriteMusic(sortTracksDesc);\n      }\n      sortFavoriteMusic(sortTracksAlpha);\n      this.setState({ filterTitle: 'a-z' });\n    }\n  }\n\n  sortMusicByTime = () => {\n    const { responseMusics: { tracks, favorites }, match: { path },\n      sortMusic, sortFavoriteMusic } = this.props;\n    const { filterTitle, filterAlbum } = this.state;\n\n    if (filterTitle !== '' || filterAlbum !== '') {\n      this.setState({ filterTitle: '', filterAlbum: '' });\n    }\n\n    if (path === pathAlbumId) {\n      const sortTracksAlpha = [...tracks]\n        .sort((a, b) => (a.trackTimeMillis) - (b.trackTimeMillis));\n\n      if (tracks[0] === sortTracksAlpha[0]) {\n        const sortTracksDesc = [...tracks]\n          .sort((a, b) => (b.trackTimeMillis) - (a.trackTimeMillis));\n\n        this.setState({ filterTime: 'z-a' });\n        return sortMusic(sortTracksDesc);\n      }\n      sortMusic(sortTracksAlpha);\n      this.setState({ filterTime: 'a-z' });\n    }\n\n    if (path === pathFavorites) {\n      const sortTracksAlpha = [...favorites]\n        .sort((a, b) => (a.trackTimeMillis) - (b.trackTimeMillis));\n\n      if (favorites[0] === sortTracksAlpha[0]) {\n        const sortTracksDesc = [...favorites]\n          .sort((a, b) => (b.trackTimeMillis) - (a.trackTimeMillis));\n\n        this.setState({ filterTime: 'z-a' });\n        return sortFavoriteMusic(sortTracksDesc);\n      }\n      sortFavoriteMusic(sortTracksAlpha);\n      this.setState({ filterTime: 'a-z' });\n    }\n  }\n\n  sortMusicByAlbum = () => {\n    const { responseMusics: { favorites }, match: { path },\n      sortFavoriteMusic } = this.props;\n    const { filterTitle, filterTime } = this.state;\n\n    if (filterTitle !== '' || filterTime !== '') {\n      this.setState({ filterTitle: '', filterTime: '' });\n    }\n\n    if (path === pathFavorites) {\n      const sortTracksAlpha = [...favorites]\n        .sort((a, b) => (a.collectionName).localeCompare(b.collectionName));\n\n      if (favorites[0] === sortTracksAlpha[0]) {\n        const sortTracksDesc = [...favorites]\n          .sort((a, b) => (b.collectionName).localeCompare(a.collectionName));\n\n        this.setState({ filterAlbum: 'z-a' });\n        return sortFavoriteMusic(sortTracksDesc);\n      }\n\n      sortFavoriteMusic(sortTracksAlpha);\n      this.setState({ filterAlbum: 'a-z' });\n    }\n  }\n\n  render() {\n    const { path } = this.props;\n    const { filterTitle, filterTime } = this.state;\n\n    return (\n      <div className=\"musicRow filterRow\">\n        <div className=\"divTrackNumber\">\n          <p\n            className=\"withoutHover albumFilters trackNumberCenter\"\n            onClick={ this.resetFilter }\n            tabIndex=\"-1\"\n            aria-hidden=\"true\"\n          >\n            #\n          </p>\n        </div>\n\n        {\n          path === pathFavorites\n            ? (\n              <div className=\"musicAndArtist titleFilter\">\n                <p\n                  className=\"albumFilters\"\n                  onClick={ this.sortMusicAlphOrderAndReverse }\n                  tabIndex=\"-1\"\n                  aria-hidden=\"true\"\n                >\n                  TITLE\n                  <ConditionFilterTitle filterTitle={ filterTitle } />\n                </p>\n\n              </div>\n            )\n            : (\n              <div className=\"musicAndArtistAlbum\">\n                <p\n                  className=\"albumFilters\"\n                  onClick={ this.sortMusicAlphOrderAndReverse }\n                  tabIndex=\"-1\"\n                  aria-hidden=\"true\"\n                >\n                  TITLE\n                  <ConditionFilterTitle filterTitle={ filterTitle } />\n                </p>\n\n              </div>\n            )\n        }\n\n        {\n          path === pathFavorites\n              && (\n                <div className=\"albumFilter\">\n                  <p\n                    className=\"albumFilters\"\n                    onClick={ this.sortMusicByAlbum }\n                    tabIndex=\"-1\"\n                    aria-hidden\n                  >\n                    ALBUM\n\n                  </p>\n                </div>\n              )\n        }\n\n        <ConditionClockRender\n          filterTime={ filterTime }\n          path={ path }\n          sortMusicByTime={ this.sortMusicByTime }\n        />\n\n      </div>\n    );\n  }\n}\n\nFilterRow.propTypes = {\n  path: PropTypes.string,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  searchAlbum: state.searchAlbum,\n  responseMusics: state.responseMusics,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  sortMusic: (sorted) => dispatch(sortMusicAct(sorted)),\n  sortFavoriteMusic: (sorted) => dispatch(sortFavoriteMusicsAct(sorted)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(FilterRow));\n\n//\n","export const playAudio = ({ currentTarget }) => {\n  const url = currentTarget.attributes.name.value;\n  const players = document.querySelectorAll('audio');\n\n  players.forEach((player) => {\n    const { id, paused } = player;\n    player.volume = 0.2;\n    if (paused === false) return player.pause();\n\n    const targetPlayer = id === url;\n    if (targetPlayer) return player.play();\n  });\n};\n\nexport const placeSelectedClass = ({ target }) => {\n  const classToFind = document.querySelector('.selectedMusic');\n\n  const addClass = target.classList.add('selectedMusic');\n\n  if (classToFind) {\n    const excClass = classToFind.classList.remove('selectedMusic');\n    return excClass && addClass;\n  }\n  return addClass;\n};\n","const THOUSAND = 1000;\nconst SIXTY = 60;\n\nexport const convertMillsToMin = (ms) => {\n  const minutes = ((ms / THOUSAND) / SIXTY);\n  const minutesHouse = Math.trunc(minutes);\n  return minutesHouse;\n};\n\nexport const convertMillsToSeconds = (ms) => {\n  const seconds = ((ms / THOUSAND) % SIXTY);\n  const secondsHouse = Math.round(seconds);\n\n  const TEN = 10;\n  if (secondsHouse < TEN) {\n    const verifier = [0, secondsHouse];\n    return verifier.join('');\n  }\n  return secondsHouse;\n};\n\nexport const totalAlbumTime = (tracks) => {\n  const totalTime = tracks\n    .reduce((acc, { trackTimeMillis }) => {\n      const counter = acc + trackTimeMillis;\n      return counter;\n    }, 0);\n\n  const hoursHouse = (((totalTime / THOUSAND) / SIXTY) / SIXTY); // ms / s / min / h\n  const hours = Math.trunc(hoursHouse);\n\n  const minutesHouse = hoursHouse.toFixed(2).toString().split('.')[1];\n  const minutesToNum = +`0.${minutesHouse}`;\n  const minutes = Math.round(minutesToNum * SIXTY);\n\n  if (hours <= 0) {\n    return `${minutes} min`;\n  }\n  return `${hours} hr ${minutes} min`;\n};\n","import PropTypes from 'prop-types';\nimport { faPause, faPlay } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport { playAudio } from '../helpers/player';\n\nexport default class ButtonPlay extends Component {\n  render() {\n    const {\n      path,\n      favoritesPath,\n      // trackNumber,\n      previewUrl,\n      i,\n      handlePlayIcon,\n      handlePauseIcon,\n      played: { name, status },\n    } = this.props;\n\n    return (\n      <div className=\"divTrackNumber\">\n        {\n          path === favoritesPath\n            ? (\n              <p className=\"trackNumber font-link\">{ i + 1 }</p>\n            )\n            : (\n              <p className=\"trackNumber font-link\">{ i + 1 }</p>\n            )\n        }\n        <label htmlFor={ previewUrl }>\n          {\n            (name === previewUrl) && (status)\n              ? (\n                <FontAwesomeIcon\n                  name={ previewUrl }\n                  icon={ faPause }\n                  className=\"focusable trackPlayIcon trackPauseIcon\"\n                  onClick={ (e) => {\n                    handlePauseIcon(e);\n                    playAudio(e);\n                  } }\n                />\n              )\n              : (\n                <FontAwesomeIcon\n                  name={ previewUrl }\n                  icon={ faPlay }\n                  className=\"focusable trackPlayIcon\"\n                  onClick={ (e) => {\n                    handlePlayIcon(e);\n                    playAudio(e);\n                  } }\n                />\n              )\n          }\n\n          <div className=\"previewMusic\">\n            <audio\n              id={ previewUrl }\n              data-testid=\"audio-component\"\n              src={ previewUrl }\n              controls\n              hidden\n            >\n              <track kind=\"captions\" />\n              O seu navegador não suporta o elemento\n              {' '}\n              <code>audio</code>\n              .\n            </audio>\n          </div>\n        </label>\n      </div>\n    );\n  }\n}\n\nButtonPlay.propTypes = {\n  favoritesPath: PropTypes.string,\n  i: PropTypes.number,\n  path: PropTypes.string,\n  previewUrl: PropTypes.string,\n  trackNumber: PropTypes.string,\n  playAudio: PropTypes.func,\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { placeSelectedClass } from '../helpers/player';\nimport { convertMillsToMin, convertMillsToSeconds } from '../helpers/songTime';\nimport ButtonPlay from './ButtonPlay';\nimport { enableRenderAlbumAct } from '../actions';\n\nclass MusicMap extends Component {\n  state = {\n    played: false,\n  }\n\n  handlePlayIcon = ({ currentTarget }) => {\n    this.setState(({\n      played: {\n        status: true,\n        name: currentTarget.attributes.name.value,\n      },\n    }));\n  }\n\n  handlePauseIcon = () => {\n    this.setState({\n      played: {\n        status: false,\n      },\n    });\n  }\n\n  handleArtistNameLink = () => {\n    const { enableRender } = this.props;\n    enableRender(true);\n  }\n\n  render() {\n    const {\n      // albumTracks,\n      handleCheck,\n      handleReload,\n      checkedAndFavorite,\n      match: { path },\n      // responseMusics: { tracks },\n      // tracks,\n      tracks,\n    } = this.props;\n\n    const { played } = this.state;\n\n    const favoritesPath = '/favorites';\n\n    return (\n      <div>\n        {\n          tracks && tracks.map((artist, i) => {\n            const {\n              artistName,\n              artworkUrl60,\n              collectionName,\n              collectionId,\n              previewUrl,\n              trackId,\n              trackName,\n              trackNumber,\n              trackTimeMillis,\n            } = artist;\n            const minutes = convertMillsToMin(trackTimeMillis);\n            const seconds = convertMillsToSeconds(trackTimeMillis);\n\n            return (\n              <div\n                className=\"focusMusicRow\"\n                role=\"button\"\n                key={ trackId }\n                tabIndex=\"-1\"\n                onClick={ (e) => placeSelectedClass(e) }\n                onKeyPress={ () => {} }\n                aria-hidden=\"true\"\n              >\n                <div className=\"musicRow notFocusable\">\n                  <ButtonPlay\n                    path={ path }\n                    favoritesPath={ favoritesPath }\n                    trackNumber={ trackNumber }\n                    previewUrl={ previewUrl }\n                    i={ i }\n                    handlePlayIcon={ this.handlePlayIcon }\n                    handlePauseIcon={ this.handlePauseIcon }\n                    played={ played }\n                  />\n\n                  {\n                    path === favoritesPath\n                    && (\n                      <div className=\"miniAlbumImage\">\n                        <img\n                          src={ artworkUrl60 }\n                          alt=\"mini album pic\"\n                          className=\"miniAlbumImage\"\n                        />\n                      </div>\n                    )\n                  }\n\n                  {\n                    path === favoritesPath\n                      ? (\n                        <div className=\"musicAndArtist\">\n                          <div className=\"divToEllipsis\">\n                            <p className=\"musicName ellipsis\">{ trackName }</p>\n                            <Link\n                              className=\"linkStyle focusableLink ellipsis\"\n                              key={ collectionId }\n                              to={ `/album/${collectionId}` }\n                              onClick={ this.handleArtistNameLink }\n                            >\n                              <p\n                                className=\"artistName ellipsis fitLinkContent\"\n                              >\n                                { artistName }\n\n                              </p>\n                              {' '}\n                            </Link>\n                          </div>\n                        </div>\n                      )\n                      : (\n                        <div className=\"musicAndArtistAlbum\">\n                          {/* Ellipsis fix in Album */}\n                          <div className=\"\">\n                            <p className=\"musicName ellipsis\">{ trackName }</p>\n                            <Link\n                              className=\"linkStyle focusableLink\"\n                              key={ collectionId }\n                              to=\"/search\"\n                              onClick={ this.handleArtistNameLink }\n                            >\n                              <p\n                                className=\"artistName ellipsis\"\n                              >\n                                { artistName }\n\n                              </p>\n                            </Link>\n                          </div>\n                        </div>\n                      )\n                  }\n\n                  {\n                    path === favoritesPath\n                    && (\n                      <div className=\"albumFilter\">\n                        <div className=\"divToEllipsis\">\n                          <Link\n                            className=\"linkStyle focusableLink ellipsis\"\n                            key={ collectionId }\n                            to={ `/album/${collectionId}` }\n                          >\n                            <p className=\"artistName ellipsis\">{collectionName}</p>\n                          </Link>\n                        </div>\n                      </div>\n                    )\n                  }\n\n                  <div className=\"filterRight\">\n                    {\n                      checkedAndFavorite.includes(trackId)\n                        ? (\n                          <label htmlFor={ trackId } className=\"previewFavorite\">\n                            <FontAwesomeIcon\n                              icon={ faHeart }\n                              className=\"focusable heartColor\"\n                            />\n                            <input\n                              type=\"checkbox\"\n                              name=\"\"\n                              id={ trackId }\n                              data-testid={ `checkbox-music-${trackId}` }\n                              onChange={ () => {\n                                handleCheck(artist, trackId);\n                                handleReload();\n                              } }\n                              checked={ checkedAndFavorite.includes(trackId) }\n                              hidden\n                            />\n                          </label>\n                        )\n                        : (\n                          <label htmlFor={ trackId } className=\"previewFavorite\">\n                            <FontAwesomeIcon icon={ faHeart } className=\"heartIcon\" />\n                            <input\n                              type=\"checkbox\"\n                              name=\"\"\n                              id={ trackId }\n                              data-testid={ `checkbox-music-${trackId}` }\n                              onChange={ () => {\n                                handleCheck(artist, trackId);\n                                handleReload();\n                              } }\n                              checked={ checkedAndFavorite.includes(trackId) }\n                              hidden\n                            />\n                          </label>\n                        )\n                    }\n                    <div className=\"musicDuration\">\n                      <p className=\"artistName font-link\">{ `${minutes}:${seconds}` }</p>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n            );\n          })\n        }\n      </div>\n    );\n  }\n}\n\nMusicMap.propTypes = {\n  albumTracks: PropTypes.oneOfType([PropTypes.array]),\n  checkedAndFavorite: PropTypes.oneOfType([PropTypes.array]),\n  handleCheck: PropTypes.func,\n  path: PropTypes.string,\n  enableRender: PropTypes.func,\n  handleReload: PropTypes.func,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  searchAlbum: state.searchAlbum,\n  responseMusics: state.responseMusics,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  enableRender: (bool) => dispatch(enableRenderAlbumAct(bool)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MusicMap));\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FilterRow from './FilterRow';\nimport MusicMap from './MusicMap';\n\nclass MusicCard extends Component {\n  render() {\n    const {\n      match: { path },\n      responseMusics: { tracks, favorites },\n    } = this.props;\n\n    return (\n      <div className=\"listMusic listMusicMobile\">\n        <FilterRow path={ path } />\n\n        <hr className=\"horizontalRow\" />\n\n        {\n          path === '/album/:id'\n            ? (\n              <MusicMap tracks={ tracks } { ...this.props } />\n            )\n            : (\n              <MusicMap tracks={ favorites } { ...this.props } />\n            )\n        }\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  path: PropTypes.string,\n}.isRequired;\n\nexport default connect()(MusicCard);\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { totalAlbumTime } from '../helpers/songTime';\nimport '../styles/albumHeaderDetails.css';\nimport { enableRenderAlbumAct, inputSearchAct } from '../actions';\n\nclass AlbumHeaderDetails extends Component {\n  albumYear = (year) => year.split('-')[0];\n\n  sideInfoTracks = (tracks) => tracks.length;\n\n  albumTime = () => {\n    this.setState((prevState) => ({\n      albumTrackTime: prevState.albumTrackTime + 1,\n    }));\n  }\n\n  handleArtistNameLink = (artist) => {\n    const { enableRender, inputSearchGlobal } = this.props;\n    inputSearchGlobal(artist);\n    enableRender(true);\n  }\n\n  render() {\n    const {\n      responseMusics:\n        { albumCollection:\n          { artistName, artworkUrl100, releaseDate, userImage },\n        tracks,\n        favorites,\n        },\n      location: { pathname },\n    } = this.props;\n\n    const favoritesPath = '/favorites';\n\n    return (\n      <div className=\"artistDetails\">\n        {\n          !userImage\n            ? (<img src={ artworkUrl100 } alt=\"\" />)\n            : (<img src={ userImage } alt=\"Profile pic\" />)\n        }\n        {\n          pathname === favoritesPath\n            ? (\n              <Link className=\"linkStyle focusableLink\" to=\"/profile\">\n                <h5 className=\"headerUserOrArtistName\">{artistName}</h5>\n              </Link>\n            )\n            : (\n              <Link\n                className=\"linkStyle focusableLink\"\n                to=\"/search\"\n                onClick={ () => this.handleArtistNameLink(artistName) }\n              >\n                <h5 className=\"headerUserOrArtistName\">{artistName}</h5>\n              </Link>\n            )\n        }\n        <h5 className=\"headingListStyle\">•</h5>\n        <h5>{this.albumYear(releaseDate)}</h5>\n\n        {\n          pathname === favoritesPath\n            ? (\n              <div className=\"albumSideInfo\">\n                <h5 className=\"headingListStyle \">•</h5>\n                <h5>\n                  {this.sideInfoTracks(favorites)}\n                  {' '}\n                  songs,\n                </h5>\n                <h5\n                  className=\"headingListStyle timerHD font-link\"\n                >\n                  {totalAlbumTime(favorites)}\n\n                </h5>\n              </div>\n            )\n            : (\n              <div className=\"albumSideInfo\">\n                <h5 className=\"headingListStyle \">•</h5>\n                <h5>\n                  {this.sideInfoTracks(tracks)}\n                  {' '}\n                  songs,\n                </h5>\n                <h5\n                  className=\"headingListStyle timerHD font-link\"\n                >\n                  {totalAlbumTime(tracks)}\n\n                </h5>\n              </div>\n            )\n        }\n\n      </div>\n    );\n  }\n}\n\nAlbumHeaderDetails.propTypes = {\n  album: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  enableRender: (bool) => dispatch(enableRenderAlbumAct(bool)),\n  inputSearchGlobal: (inputValue) => dispatch(inputSearchAct(inputValue)),\n});\n\nexport default connect(null, mapDispatchToProps)(AlbumHeaderDetails);\n","import { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass PageController extends Component {\n  previousPageButton = () => {\n    const { history: { goBack } } = this.props;\n    goBack();\n  }\n\n  nextPageButton = () => {\n    const { history: { goForward } } = this.props;\n    goForward();\n  }\n\n  render() {\n    return (\n      <div className=\"page-control\">\n        <div\n          role=\"button\"\n          className=\"control\"\n          onClick={ this.previousPageButton }\n          tabIndex=\"-1\"\n          onKeyUp={ () => {} }\n          aria-label=\"controller-button-page-back\"\n        >\n          <FontAwesomeIcon icon={ faAngleLeft } className=\"faCentralizer\" />\n        </div>\n        <div\n          role=\"button\"\n          className=\"control\"\n          onClick={ this.nextPageButton }\n          tabIndex=\"-1\"\n          onKeyUp={ () => {} }\n          aria-label=\"controller-button-page-forward\"\n        >\n          <FontAwesomeIcon icon={ faAngleRight } className=\"faCentralizer\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nPageController.propTypes = {\n  history: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n}.isRequired;\n\nexport default withRouter(PageController);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUser } from '../services/userAPI';\n\nexport default class ProfileHeader extends Component {\n  state = {\n    name: '',\n    image: 'https://i.pinimg.com/474x/86/0d/cd/860dcdf5cd536bfd86d8fc86efdbdd18.jpg',\n  };\n\n  componentDidMount() {\n    this.catchUser();\n  }\n\n  async catchUser() {\n    const user = await getUser();\n\n    this.setState(() => {\n      if (user.image.length > 0) {\n        return ({\n          isLoading: false,\n          name: user.name,\n          image: user.image,\n        });\n      }\n      return {\n        isLoading: false,\n        name: user.name,\n      };\n    });\n  }\n\n  render() {\n    const { name, image } = this.state;\n\n    return (\n      <Link to=\"/profile\" className=\"linkStyle linkToProfileTopsideBar\">\n        <div className=\"showUserBar\">\n          <img\n            src={ image }\n            alt=\"profile icon\"\n            className=\"image-icon\"\n          />\n          <p data-testid=\"header-user-name\" className=\"ellipsis\">{ name }</p>\n        </div>\n      </Link>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\nimport fetchAlbum from '../thunk/fetchAlbumInRedux';\nimport { inputSearchAct } from '../actions';\n\nclass InputSearch extends Component {\n  activateBlur = (e) => {\n    e.preventDefault();\n\n    const { key, keyCode } = e;\n    const THIRTHEEN = 13;\n    const enter = (keyCode === THIRTHEEN || key === 'Enter');\n    // let inputValue = e.target.value;\n    if (enter) {\n      // inputSearchGlobal(inputValue);\n      // searchAlbumGlobal(inputValue);\n      e.target.blur();\n      e.target.value = '';\n      return e.target.value;\n    }\n    return e.target.value;\n  }\n\n  render() {\n    const { match: { path } } = this.props;\n\n    const pathAlbum = '/album/:id';\n    const pathFavorites = '/favorites';\n\n    const { handleClick, handleChange, inputSearch,\n      // isButtonDisabled,\n    } = this.props;\n\n    return (\n      <div className=\"search-hero\">\n        <form action=\"\" onSubmit={ (e) => handleClick(e) }>\n\n          {\n            (path !== pathAlbum && path !== pathFavorites)\n          && (\n            <label htmlFor=\"buttonSearch\" className=\"labelInputSearch\">\n              <FontAwesomeIcon icon={ faMagnifyingGlass } className=\"glassInputSearch\" />\n              <input\n                type=\"text\"\n                id=\"buttonSearch\"\n                name=\"inputSearch\"\n                placeholder=\"Artists, songs or podcasts...\"\n                className=\"inputSearch\"\n                data-testid=\"search-artist-input\"\n                value={ inputSearch }\n                onChange={ handleChange }\n                // onBlur={ (e) => this.activateBlur(e) }\n                onKeyUp={ (e) => this.activateBlur(e) }\n                autoComplete=\"off\"\n              />\n            </label>\n          )\n          }\n        </form>\n      </div>\n    );\n  }\n}\n\nInputSearch.propTypes = {\n  inputSearchGlobal: PropTypes.func,\n  searchAlbumGlobal: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  inputSearchGlobal: (inputValue) => dispatch(inputSearchAct(inputValue)),\n  searchAlbumGlobal: (inputValue) => dispatch(fetchAlbum(inputValue)),\n});\n\nexport default connect(null, mapDispatchToProps)(withRouter(InputSearch));\n","import '../styles/topsideBar.css';\nimport React, { Component } from 'react';\nimport PageController from './PageController';\nimport ProfileHeader from './ProfileHeader';\nimport InputSearch from './InputSearch';\n\nexport default class TopsideBar extends Component {\n  render() {\n    return (\n      <div className=\"controller-hero\">\n        <PageController />\n        <InputSearch { ...this.props } />\n        <ProfileHeader />\n      </div>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { ColorExtractor } from 'react-color-extractor';\n\nexport default class ColorExtracted extends Component {\n  render() {\n    const { getColors, artistName, artworkUrl100 } = this.props;\n\n    return (\n      <ColorExtractor rgb getColors={ getColors }>\n        <img\n          src={ artworkUrl100.replace('100x100bb.jpg', '600x600bb.jpg') }\n          alt={ `Album cover of ${artistName}` }\n          className=\"imageBackground\"\n        />\n      </ColorExtractor>\n    );\n  }\n}\n\nColorExtracted.propTypes = {\n  artistName: PropTypes.string,\n  artworkUrl100: PropTypes.string,\n  getColors: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n}.isRequired;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AlbumHeaderDetails from './AlbumHeaderDetails';\nimport TopsideBar from './TopsideBar';\nimport ColorExtracted from './ColorExtracted';\n\nclass AlbumHeader extends Component {\n  state= { colors: [] };\n\n  getColors = (colors) => {\n    const SIX = 6;\n    if (colors.length === SIX) {\n      return this\n        .setState({ colors: [] }, () => this\n          .setState((state) => ({ colors: [...state.colors, ...colors] })));\n    }\n    this.setState((state) => ({ colors: [...state.colors, ...colors] }));\n  }\n\n  render() {\n    const {\n      responseMusics:\n      { albumCollection:\n        { artistName, collectionName, artworkUrl100 },\n      },\n      gradientColorHandler,\n    } = this.props;\n\n    const { colors } = this.state;\n    gradientColorHandler(colors);\n\n    if (colors.length !== 0) {\n      console.log(colors[0][1], colors[0][1], colors[0][2]);\n    }\n\n    return (\n      <section\n        className=\"albumHeader gradHeader\"\n        data-testid=\"page-album\"\n        style={ {\n          backgroundColor: colors.length !== 0\n            && `rgb(${colors[0][0]}, ${colors[0][1]}, ${colors[0][2]}, 0.4)`,\n        } }\n      >\n        <TopsideBar />\n        <h1 className=\"titlePage\" hidden>Album page</h1>\n        <div className=\"contentAlbum\">\n          <div className=\"albumTitle\">\n\n            <div className=\"albumImage\">\n              <ColorExtracted\n                getColors={ this.getColors }\n                artistName={ artistName }\n                artworkUrl100={ artworkUrl100 }\n              />\n            </div>\n\n            <div className=\"albumDetails\">\n              <h6 className=\"albumTitleFixed\">ALBUM</h6>\n              <h1\n                className=\"albumName albumTitleFixed ellipsis\"\n                data-testid=\"album-name\"\n                hidden\n              >\n                {`Collection Name ${collectionName}`}\n              </h1>\n\n              <h2\n                className=\"albumName albumTitleFixed\"\n              >\n                {collectionName}\n              </h2>\n              <AlbumHeaderDetails { ...this.props } />\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nAlbumHeader.propTypes = {\n  album: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  responseMusics: state.responseMusics,\n});\n\nexport default connect(mapStateToProps)(AlbumHeader);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport '../styles/album.css';\nimport AlbumHeader from '../components/AlbumHeader';\nimport {\n  inputSearchAct,\n  responseMusicsAct,\n  saveAlbumNameAct,\n  saveFavoriteMusicsAct,\n} from '../actions';\nimport fetchAlbum from '../thunk/fetchAlbumInRedux';\n\nclass Album extends Component {\n  constructor() {\n    super();\n\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleLoad = this.handleLoad.bind(this);\n    this.fetchMusic = this.fetchMusic.bind(this);\n    this.fetchFavoriteSongs = this.fetchFavoriteSongs.bind(this);\n    this.handleReload = this.handleReload.bind(this);\n\n    this.state = {\n      isLoading: true,\n      album: {},\n      albumTracks: [],\n      checked: [],\n      favoriteSongs: [],\n      checkedAndFavorite: [],\n      albumTrackTime: [],\n      forceReload: false,\n      isHeaderLoading: false,\n      url: '',\n      colors: [],\n    };\n  }\n\n  async componentDidMount() {\n    const { checked } = this.state;\n    const {\n      saveResponseMusics,\n      saveAlbumName,\n      inputSearchGlobal,\n      searchAlbumGlobal,\n    } = this.props;\n\n    const music = await this.fetchMusic();\n    const idFavoriteSongs = await this.fetchFavoriteSongs();\n\n    inputSearchGlobal(music[0].artistName);\n    searchAlbumGlobal(music[0].artistName);\n    saveAlbumName(music[0]);\n    saveResponseMusics(music.slice(1));\n\n    this.setState({\n      album: music[0], // sempre o primeiro item do array é o album com as infos\n      albumTracks: music.slice(1), // a partir daqui é apenas música\n      isLoading: false,\n      favoriteSongs: idFavoriteSongs,\n      checkedAndFavorite: [...idFavoriteSongs, ...checked],\n    });\n  }\n\n  handleLoad() {\n    this.setState((prevState) => ({\n      isLoading: !prevState.isLoading,\n    }));\n  }\n\n  handleReload() {\n    this.setState((prevState) => ({\n      forceReload: !prevState.forceReload,\n    }));\n  }\n\n  async handleCheck(artist, id) {\n    const { checkedAndFavorite } = this.state;\n    const { saveFavoriteMusics } = this.props;\n    if (checkedAndFavorite.includes(id)) {\n      // bool\n      const filter = this.filterChecked(checkedAndFavorite, id); // dentro do setState novo\n\n      // this.handleLoad();\n      await removeSong(artist);\n      // this.handleLoad(); // poderei tirar esse loading daqui\n\n      this.setState({\n        checkedAndFavorite: filter,\n      });\n\n      const favorites = await getFavoriteSongs();\n      saveFavoriteMusics(favorites);\n    } else {\n      // this.handleLoad();\n      await addSong(artist);\n      // this.handleLoad();\n\n      this.setState((prevState) => ({\n        checkedAndFavorite: [...prevState.checkedAndFavorite, id],\n      }));\n\n      const favorites = await getFavoriteSongs();\n      saveFavoriteMusics(favorites);\n    }\n  }\n\n  gradientColorHandler = (arr) => {\n    this.setState({ colors: arr });\n  }\n\n  async fetchMusic() {\n    const { match: { params: { id } } } = this.props;\n    const search = await getMusics(id);\n    console.log(search);\n    return search;\n  }\n\n  async fetchFavoriteSongs() {\n    const favorites = await getFavoriteSongs();\n    const idFavoriteSongs = favorites.map(({ trackId }) => trackId);\n    return idFavoriteSongs;\n  }\n\n  filterChecked(arr, id2) {\n    const filtered = arr.filter((musicId) => musicId !== id2);\n    return filtered;\n  }\n\n  render() {\n    const { album: { artistName }, isLoading, colors } = this.state;\n\n    return (\n      <div className=\"headerPattern\">\n        {\n          isLoading\n            ? <Loading />\n            : (\n              <section data-testid=\"page-album\" className=\"album\">\n                <AlbumHeader\n                  { ...this.state }\n                  { ...this.props }\n                  gradientColorHandler={ this.gradientColorHandler }\n                />\n\n                <section className=\"albumContent gradContent\">\n                  <p data-testid=\"artist-name\" hidden>{ `Artist Name ${artistName}`}</p>\n\n                  <div\n                    className=\"bottom-grad\"\n                    style={ {\n                      backgroundImage: colors.length !== 0\n                        && `linear-gradient(\n                          rgb(${colors[0][0]}, ${colors[0][1]}, ${colors[0][2]}, 0.4) 0,\n                          #121212)`,\n                    } }\n                  />\n                  <MusicCard\n                    { ...this.state }\n                    { ...this.props }\n                    handleCheck={ this.handleCheck }\n                    handleLoad={ this.handleLoad }\n                    handleReload={ this.handleReload }\n                  />\n                </section>\n              </section>\n            )\n        }\n\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  saveFavoriteMusics: PropTypes.func,\n  saveResponseMusics: PropTypes.func,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  responseMusics: state.responseMusics,\n  url: state.url,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveResponseMusics: (response) => dispatch(responseMusicsAct(response)),\n  saveFavoriteMusics: (favorites) => dispatch(saveFavoriteMusicsAct(favorites)),\n  saveAlbumName: (albumName) => dispatch(saveAlbumNameAct(albumName)),\n  inputSearchGlobal: (inputValue) => dispatch(inputSearchAct(inputValue)),\n  searchAlbumGlobal: (inputValue) => dispatch(fetchAlbum(inputValue)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Album));\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { responseMusicsAct, saveAlbumNameAct, saveFavoriteMusicsAct } from '../actions';\nimport AlbumHeader from '../components/AlbumHeader';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport { getUser } from '../services/userAPI';\n\nclass Favorites extends Component {\n  constructor() {\n    super();\n\n    this.handleLoad = this.handleLoad.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleLoad = this.handleLoad.bind(this);\n    this.filterChecked = this.filterChecked.bind(this);\n    this.favoriteHeader = this.favoriteHeader.bind(this);\n    this.handleReload = this.handleReload.bind(this);\n\n    this.state = ({\n      isLoading: true,\n      albumTracks: [],\n      checkedAndFavorite: [],\n      album: {},\n      forceReload: false,\n      colors: [],\n    });\n  }\n\n  async componentDidMount() {\n    await this.favoriteHeader();\n    await this.getFavoriteAndRemoveFromList();\n  }\n\n  handleLoad = () => {\n    this.setState((prevState) => ({\n      isLoading: !prevState.isLoading,\n    }));\n  }\n\n  handleReload() {\n    this.setState((prevState) => ({\n      forceReload: !prevState.forceReload,\n    }));\n  }\n\n  async handleCheck(artist, id) {\n    const { checkedAndFavorite } = this.state;\n    if (checkedAndFavorite.includes(id)) {\n      // this.handleLoad();\n      await removeSong(artist);\n\n      await this.getFavoriteAndRemoveFromList();\n    }\n  }\n\n  async getFavoriteAndRemoveFromList() {\n    const { saveFavoriteMusics } = this.props;\n\n    const favorites = await getFavoriteSongs();\n    const idFavoriteSongs = favorites.map(({ trackId }) => trackId);\n\n    saveFavoriteMusics(favorites);\n    this.setState({\n      albumTracks: favorites,\n      checkedAndFavorite: [...idFavoriteSongs],\n      isLoading: false,\n    });\n  }\n\n  gradientColorHandler = (arr) => {\n    this.setState({ colors: arr });\n  }\n\n  filterChecked(arr, id2) {\n    const filtered = arr.filter((musicId) => musicId !== id2);\n    return filtered;\n  }\n\n  async favoriteHeader() {\n    const { saveAlbumName } = this.props;\n    const currentYear = new Date().getFullYear();\n    const user = await getUser();\n\n    const albumFake = {\n      artistName: user.name,\n      userImage: user.image,\n      favoriteTitle: 'PLAYLIST',\n      collectionName: 'Liked Songs',\n      artworkUrl100: 'https://t.scdn.co/images/3099b3803ad9496896c43f22fe9be8c4.png',\n      releaseDate: currentYear.toString(),\n    };\n\n    this.setState({\n      album: albumFake,\n    });\n\n    saveAlbumName(albumFake);\n  }\n\n  render() {\n    const { isLoading, colors } = this.state;\n\n    return (\n      <div data-testid=\"page-favorite\" className=\"headerPattern\">\n        {\n          isLoading\n            ? <Loading />\n            : (\n              <section className=\"album\">\n                <AlbumHeader\n                  { ...this.state }\n                  { ...this.props }\n                  gradientColorHandler={ this.gradientColorHandler }\n                />\n\n                <section className=\"albumContent gradContent sizeContent\">\n\n                  <div\n                    className=\"bottom-grad\"\n                    style={ {\n                      backgroundImage: colors.length !== 0\n                        && `linear-gradient(\n                          rgb(${colors[0][0]}, ${colors[0][1]}, ${colors[0][2]}, 0.4) 0,\n                          #121212)`,\n                    } }\n                  />\n                  <MusicCard\n                    { ...this.props }\n                    { ...this.state }\n                    handleCheck={ this.handleCheck }\n                    handleReload={ this.handleReload }\n                  />\n                </section>\n              </section>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nFavorites.propTypes = {\n  saveFavoriteMusics: PropTypes.func,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  responseMusics: state.responseMusics,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveResponseMusics: (response) => dispatch(responseMusicsAct(response)),\n  saveFavoriteMusics: (favorites) => dispatch(saveFavoriteMusicsAct(favorites)),\n  saveAlbumName: (albumName) => dispatch(saveAlbumNameAct(albumName)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);\n","export default __webpack_public_path__ + \"static/media/spotify-logo-login-color.4f8bc335.svg\";","import React, { Component } from 'react';\nimport '../styles/loadingLogin.css';\n\nexport default class LoadingLogin extends Component {\n  render() {\n    return (\n      <div className=\"blocksLogin\">\n        <div className=\"titleModalLogin\">\n          <h1>Loading...</h1>\n        </div>\n        {/*\n          Spinner art by Melissa Em in October 7, 2019\n          https://freefrontend.com/css-spinners/\n          Made with\n          HTML / CSS\n          https://codepen.io/meowwwls/pen/OJJPbGb\n        */}\n        <div className=\"blockLogin greenLogin\" />\n        <div className=\"blockLogin whiteLogin\" />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Input from '../components/Input';\nimport '../styles/login.css';\nimport '../styles/loadingLogin.css';\nimport { createUser } from '../services/userAPI';\nimport SpotifyLogo from '../images/spotify-logo-login-color.svg';\nimport LoadingLogin from '../components/LoadingLogin';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleChanges = this.handleChanges.bind(this);\n    this.handleEffects = this.handleEffects.bind(this);\n\n    this.state = {\n      inputLogin: '',\n      inputPassword: '',\n      isSubmitBttIsDisabled: true,\n      isLoading: true,\n      authorized: false,\n      lengthLogin: 0,\n      lengthPassword: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: false,\n    });\n  }\n\n  handleChanges({ target: { name, value } }) {\n    if (name === 'inputPassword') {\n      this.setState({\n\n        lengthPassword: value.length,\n        [name]: value,\n      }, () => this.handleEffects());\n    }\n\n    if (name === 'inputLogin') {\n      this.setState({\n\n        lengthLogin: value.length,\n        [name]: value,\n      }, () => this.handleEffects());\n    }\n  }\n\n  handleEffects() {\n    const THREE = 3;\n    const { lengthLogin, lengthPassword } = this.state;\n    const newLoginVerification = lengthLogin >= THREE && lengthPassword >= THREE;\n\n    this.setState({\n      isSubmitBttIsDisabled: !newLoginVerification,\n    });\n  }\n\n  render() {\n    const {\n      inputLogin,\n      inputPassword,\n      isSubmitBttIsDisabled,\n      isLoading,\n      authorized,\n    } = this.state;\n\n    const defaultImg = 'https://i.pinimg.com/474x/86/0d/cd/860dcdf5cd536bfd86d8fc86efdbdd18.jpg';\n\n    return (\n      isLoading\n        ? (\n          <div>\n            <LoadingLogin />\n          </div>\n        )\n        : (\n          <div>\n            <div className=\"page-login\" data-testid=\"page-login\">\n              <div className=\"login-logo-title\">\n                <img src={ SpotifyLogo } alt=\"Spotify Logo\" />\n                <h2 className=\"header-collab\">X</h2>\n                <h1 className=\"login-name\">neur4l</h1>\n              </div>\n              <br />\n              <form action=\"\" className=\"login-inputs\">\n                <Input\n                  id=\"inputLogin\"\n                  className=\"inputLogin\"\n                  data-testid=\"login-name-input\"\n                  name=\"inputLogin\"\n                  onChange={ this.handleChanges }\n                  placeholder=\"Insert your name...\"\n                  type=\"text\"\n                  value={ inputLogin }\n                  autoComplete=\"off\"\n                />\n\n                <Input\n                  id=\"inputPassword\"\n                  className=\"inputLogin inputPassword\"\n                  name=\"inputPassword\"\n                  onChange={ this.handleChanges }\n                  placeholder=\"Password...\"\n                  type=\"password\"\n                  value={ inputPassword }\n                />\n\n                {\n                  isSubmitBttIsDisabled\n                    ? (\n                      <Input\n                        id=\"loginSubmitButton\"\n                        className=\"loginSubmitButton loginSubmitButtonDisabled\"\n                        data-testid=\"login-submit-button\"\n                        disabled={ isSubmitBttIsDisabled }\n                        name=\"loginSubmitButton\"\n                        type=\"submit\"\n                        value=\"Sign in\"\n                      />\n                    )\n                    : (\n                      <Input\n                        id=\"loginSubmitButton\"\n                        className=\"loginSubmitButton loginSubmitButtonEnabled\"\n                        data-testid=\"login-submit-button\"\n                        disabled={ isSubmitBttIsDisabled }\n                        name=\"loginSubmitButton\"\n                        type=\"submit\"\n                        value=\"Sign in\"\n                        onClick={ async (e) => {\n                          e.preventDefault();\n                          this.setState({ isLoading: true });\n                          await createUser({ name: inputLogin, image: defaultImg });\n                          this.setState({ isLoading: false, authorized: true });\n                        } }\n                      />\n                    )\n                }\n\n                {\n                  authorized && <Redirect to=\"/search\" />\n                }\n              </form>\n            </div>\n          </div>\n        )\n    );\n  }\n}\n\nexport default Login;\n\n//\n","import React, { Component } from 'react';\nimport '../styles/notFound.css';\n\nclass NotFound extends Component {\n  render() {\n    const notFound = '404: Not found this page :(';\n\n    return (\n      <div>\n        <div className=\"headerPattern\" data-testid=\"page-not-found\">\n          <div className=\"notFoundCentered\">\n            <h1 className=\"titlePage\">{notFound}</h1>\n            <div className=\"easterEggDiv\">\n              <img\n                src=\"https://preview.redd.it/8p9lu946wrb81.jpg?auto=webp&s=5038299dd1c159334be0c3bcc5e57af91a317b66\"\n                alt=\"\"\n                className=\"easterEggImage\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport { getUser } from '../services/userAPI';\nimport '../styles/profile.css';\n\nclass Profile extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      userLoad: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  componentWillUnmount() {\n    this.setState = () => {};\n  }\n\n  handleLoad = (user) => {\n    this.setState((prevState) => ({\n      isLoading: !prevState.isLoading,\n      userLoad: user,\n    }));\n  }\n\n  fetchUser = async () => {\n    const user = await getUser();\n    this.handleLoad(user);\n  }\n\n  render() {\n    const { userLoad: { name, email, image, description }, isLoading } = this.state;\n\n    return (\n      <div className=\"headerPattern\">\n\n        {\n          isLoading ? <Loading />\n            : (\n              <section data-testid=\"page-profile\" className=\"pageProfile  patternPages\">\n                <h1 className=\"titlePage\">Profile page</h1>\n\n                <div className=\"divProfilePicture\">\n\n                  {\n                    image.length > 1\n                      ? (\n                        <img\n                          src={ image }\n                          alt=\"Profile\"\n                          className=\"profilePicture\"\n                          data-testid=\"profile-image\"\n                        />\n                      )\n                      : (\n                        <img\n                          src=\"https://i.pinimg.com/474x/86/0d/cd/860dcdf5cd536bfd86d8fc86efdbdd18.jpg\"\n                          alt=\"Profile\"\n                          className=\"profilePicture\"\n                          data-testid=\"profile-image\"\n                        />\n                      )\n                  }\n                </div>\n\n                <div className=\"cardProfile\">\n\n                  <div className=\"cardDefault\">\n                    <ul>\n                      <li>Name:</li>\n                      <li>E-mail:</li>\n                      <li>Description:</li>\n                    </ul>\n                  </div>\n\n                  <div className=\"cardValue\">\n                    <ul>\n                      <li>{name}</li>\n                      <li>{email}</li>\n                      <li>{description}</li>\n                    </ul>\n                  </div>\n                </div>\n\n                <button\n                  type=\"button\"\n                  className=\"buttonEditProfile\"\n                >\n                  <Link\n                    to=\"/profile/edit\"\n                    className=\"linkStyle\"\n                  >\n                    Edit profile\n\n                  </Link>\n                </button>\n              </section>\n            )\n\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport { getUser, updateUser } from '../services/userAPI';\nimport '../styles/profileEdit.css';\n\nclass ProfileEdit extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      userLoad: [],\n      isButtonDisabled: true,\n      redirect: false,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n    this.buttonVerifier();\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    const { userLoad, infoToUpdate } = this.state;\n\n    let newUserInfo;\n    const destructureUser = { ...userLoad };\n    const destructureInfo = { ...infoToUpdate };\n\n    if (infoToUpdate === undefined) {\n      newUserInfo = destructureUser;\n    } else {\n      newUserInfo = destructureInfo;\n    }\n\n    newUserInfo[name] = value;\n\n    this.setState({\n      infoToUpdate: newUserInfo,\n    }, this.buttonVerifier());\n  }\n\n  handleLoad() {\n    this.setState((prevState) => ({\n      isLoading: !prevState.isLoading,\n    }));\n  }\n\n  fetchUser = async () => {\n    const user = await getUser();\n\n    this.setState({\n      userLoad: user,\n    });\n\n    this.handleLoad();\n\n    return user;\n  }\n\n  handleClick = (e) => {\n    e.preventDefault();\n    const { infoToUpdate } = this.state;\n\n    this.setState({ isLoading: true });\n    updateUser(infoToUpdate);\n    this.setState({\n      isLoading: false,\n      redirect: true,\n    });\n  }\n\n  buttonVerifier = () => {\n    const { infoToUpdate: update } = this.state;\n    const result = { ...update };\n\n    // Se todos forem verdadeiro, botão habilita\n    const boolButton = Object.values(result).every((item) => item);\n\n    // neguei para não usar o prevstate e negar a condição passada, mais linhas para o mesmo\n    this.setState({\n      isButtonDisabled: !boolButton,\n    });\n  }\n\n  render() {\n    const { userLoad: { name, email, image, description },\n      isLoading,\n      isButtonDisabled,\n      redirect,\n    } = this.state;\n\n    return (\n      <div className=\"headerPattern\">\n        {\n          isLoading ? <Loading />\n            : (\n              <div className=\"patternPages\" data-testid=\"page-profile-edit\">\n                <h2 className=\"titlePage\">Edit Profile</h2>\n                <section className=\"formContainer\">\n\n                  <form action=\"\" className=\"formEdit\">\n                    <label htmlFor=\"inputName\">\n                      <div>Name:</div>\n                      <input\n                        type=\"text\"\n                        id=\"inputName\"\n                        name=\"name\"\n                        defaultValue={ name }\n                        onChange={ this.handleChange }\n                        data-testid=\"edit-input-name\"\n                        required\n                        autoComplete=\"off\"\n                      />\n                    </label>\n\n                    <label htmlFor=\"inputEmail\">\n                      <div>E-mail:</div>\n                      <input\n                        type=\"email\"\n                        id=\"inputEmail\"\n                        name=\"email\"\n                        defaultValue={ email }\n                        onChange={ this.handleChange }\n                        data-testid=\"edit-input-email\"\n                        required\n                      />\n                    </label>\n\n                    <label htmlFor=\"inputImage\">\n                      <div>Image:</div>\n                      <input\n                        type=\"text\"\n                        name=\"image\"\n                        id=\"inputImage\"\n                        defaultValue={ image }\n                        onChange={ this.handleChange }\n                        data-testid=\"edit-input-image\"\n                        autoComplete=\"off\"\n                      />\n                    </label>\n\n                    <label htmlFor=\"inputDescription\">\n                      <div>Description:</div>\n                      <input\n                        name=\"description\"\n                        id=\"inputDescription\"\n                        type=\"text\"\n                        maxLength=\"144\"\n                        onChange={ this.handleChange }\n                        data-testid=\"edit-input-description\"\n                        defaultValue={ description }\n                        required\n                        autoComplete=\"off\"\n                      />\n                    </label>\n\n                    <input\n                      id=\"buttonSub\"\n                      className=\"buttonEditProfile\"\n                      type=\"submit\"\n                      value=\"Edit profile\"\n                      onClick={ (e) => this.handleClick(e) }\n                      data-testid=\"edit-button-save\"\n                      disabled={ isButtonDisabled }\n                    />\n\n                    {\n                      redirect && <Redirect to=\"/profile\" />\n                    }\n\n                  </form>\n                </section>\n              </div>\n            )\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class ContentMap extends Component {\n  render() {\n    const { contentToMap } = this.props;\n\n    return (\n      <section className=\"sectionCards\">\n        {\n          contentToMap.map((music) => {\n            const {\n              artistName,\n              artworkUrl100,\n              collectionId,\n              collectionName,\n            } = music;\n\n            return (\n              <Link\n                className=\"linkStyle\"\n                key={ collectionId }\n                to={ `/album/${collectionId}` }\n                data-testid={ `link-to-album-${collectionId}` }\n              >\n                <div className=\"cardMusic\">\n                  <div className=\"imageCard\">\n                    <img\n                      className=\"imageInsideCard\"\n                      src={ artworkUrl100.replace('100x100bb.jpg', '600x600bb.jpg') }\n                      alt={ `Artwork of music ${collectionName}` }\n                    />\n                  </div>\n                  <div className=\"textCard\">\n                    <h5 className=\"ellipsis\">{collectionName}</h5>\n                    <p className=\"ellipsis\">{artistName}</p>\n                  </div>\n                </div>\n              </Link>\n            );\n          })\n        }\n      </section>\n    );\n  }\n}\n\nContentMap.propTypes = {\n  contentToMap: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { enableRenderAlbumAct } from '../actions';\nimport '../styles/contentResult.css';\nimport ContentMap from './ContentMap';\n\nclass ContentResult extends Component {\n  render() {\n    const {\n      searchedMain,\n      searchResult,\n      searchAlbum: { inputSearch, results, render },\n    } = this.props;\n\n    return (\n      <div className=\"contentSpace\">\n\n        <section className=\"sectionResult\">\n          <div className=\"contentSearched\">\n            {\n              (inputSearch.length !== 0 && !inputSearch.includes('No results'))\n                ? (\n                  <h3>\n                    Top results for\n                    {' '}\n                    {inputSearch}\n                  </h3>\n                )\n                : (\n                  <h3>{searchedMain}</h3>\n                )\n            }\n          </div>\n\n          {\n            render\n              ? <ContentMap { ...this.props } contentToMap={ results } />\n              : <ContentMap { ...this.props } contentToMap={ searchResult } />\n          }\n\n        </section>\n      </div>\n    );\n  }\n}\n\nContentResult.propTypes = {\n  searchResult: PropTypes.oneOfType([\n    PropTypes.array,\n  ]),\n  searchedMain: PropTypes.string,\n  searchedTest: PropTypes.string,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  searchAlbum: state.searchAlbum,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  enableRender: (bool) => dispatch(enableRenderAlbumAct(bool)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentResult);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport '../styles/search.css';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport ContentResult from '../components/ContentResult';\nimport fetchAlbum from '../thunk/fetchAlbumInRedux';\nimport { inputSearchAct } from '../actions';\nimport TopsideBar from '../components/TopsideBar';\n\nclass Search extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      inputSearch: '',\n      isButtonDisabled: true,\n      isLoading: false,\n      searchedTest: '',\n      searchedMain: '',\n      searchResult: [],\n    };\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    }, () => {\n      const { inputSearch } = this.state;\n      const TWO = 2;\n\n      if (inputSearch.length >= TWO) {\n        this.setState({\n          isButtonDisabled: false,\n        });\n      }\n    });\n  }\n\n  handleClick = async (e) => {\n    e.preventDefault();\n\n    const { inputSearch } = this.state;\n    const { inputSearchGlobal, searchAlbumGlobal } = this.props;\n\n    this.setState({\n      isLoading: true,\n      isButtonDisabled: true,\n      searchResult: [],\n      searchedMain: `Resultados de ${inputSearch}`,\n    });\n\n    const artist = await searchAlbumsAPI(inputSearch);\n\n    if (artist.length === 0) {\n      inputSearchGlobal(`No results found for \"${inputSearch}\".`);\n      return this.setState({\n        inputSearch: '',\n        isLoading: false,\n        searchedTest: 'Nenhum álbum foi encontrado',\n        searchedMain: `No results found for \"${inputSearch}\".`, // ponto para diferenciar do searchedTest\n      });\n    }\n\n    this.setState((prevState) => ({\n      inputSearch: '',\n      searchResult: artist,\n      isLoading: false,\n      searchedTest: `Resultados de álbuns de: ${prevState.inputSearch}`,\n      searchedMain: `Top results for ${prevState.inputSearch}`,\n    }));\n    inputSearchGlobal(inputSearch);\n    searchAlbumGlobal(inputSearch);\n  }\n\n  render() {\n    const {\n      isLoading,\n      inputSearch,\n      isButtonDisabled,\n    } = this.state;\n\n    return (\n      <div className=\"headerPattern\">\n\n        <div data-testid=\"page-search\" className=\"patternPages\">\n          <TopsideBar\n            handleClick={ this.handleClick }\n            handleChange={ this.handleChange }\n            inputSearch={ inputSearch }\n            isButtonDisabled={ isButtonDisabled }\n          />\n\n          {\n            isLoading ? <Loading /> : <ContentResult { ...this.state } />\n          }\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  inputSearchGlobal: PropTypes.func,\n  searchAlbumGlobal: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  inputSearchGlobal: (inputValue) => dispatch(inputSearchAct(inputValue)),\n  searchAlbumGlobal: (inputValue) => dispatch(fetchAlbum(inputValue)),\n});\n\nexport default connect(null, mapDispatchToProps)(withRouter(Search));\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './app.css';\nimport FriendsActivity from './components/FriendsActivitySidebar';\nimport Header from './components/Header';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Login from './pages/Login';\nimport NotFound from './pages/NotFound';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport Search from './pages/Search';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleLoad = this.handleLoad.bind(this);\n  }\n\n  handleLoad() {\n    this.setState((prevState) => ({\n      isLoading: !prevState.isLoading,\n    }));\n  }\n\n  render() {\n    return (\n      <BrowserRouter basename=\"/neur4l.fy\">\n        <Switch>\n          <Route\n            exact\n            path={ ['/search', '/album/:id', '/favorites',\n              '/profile/edit', '/profile'] }\n            component={ (props) => (\n              <div className=\"renderHeaderInAllPages\">\n                <Header { ...props } />\n                <FriendsActivity />\n              </div>\n            ) }\n          />\n        </Switch>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Login { ...this.state } handleLoad={ this.handleLoad } />\n          </Route>\n          <Route\n            path=\"/search\"\n            component={ (props) => <Search { ...props } /> }\n          />\n          <Route\n            path=\"/album/:id\"\n            component={ (props) => <Album { ...props } /> }\n          />\n          <Route\n            path=\"/favorites\"\n            component={ (props) => <Favorites { ...props } /> }\n          />\n          <Route\n            path=\"/profile/edit\"\n            component={ (props) => <ProfileEdit { ...props } /> }\n          />\n          <Route\n            path=\"/profile\"\n            component={ (props) => <Profile { ...props } /> }\n          />\n          <Route\n            exact\n            path=\"*\"\n            component={ (props) => <NotFound { ...props } /> }\n          />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n//\n","import {\n  RESPONSE_MUSICS,\n  SAVE_ALBUM_NAME,\n  SAVE_FAVORITE_MUSICS,\n  SORT_FAV_MUSICS,\n  SORT_MUSIC,\n} from '../actions';\n\nconst initialState = {\n  albumCollection: {},\n  tracks: [],\n  sortedTracks: [],\n  favorites: [],\n  favoritesToSidebar: [],\n};\n\nconst responseMusics = (state = initialState, action) => {\n  switch (action.type) {\n  case SAVE_ALBUM_NAME:\n    return {\n      ...state,\n      albumCollection: action.albumName,\n    };\n\n  case RESPONSE_MUSICS:\n    return {\n      ...state,\n      tracks: action.musics,\n    };\n\n  case SORT_MUSIC:\n    return {\n      ...state,\n      tracks: action.sorted,\n    };\n\n  case SAVE_FAVORITE_MUSICS:\n    return {\n      ...state,\n      favorites: action.favorites,\n      favoritesToSidebar: action.favorites,\n    };\n\n  case SORT_FAV_MUSICS:\n    return {\n      ...state,\n      favorites: action.sortedFav,\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport default responseMusics;\n","import {\n  ENABLE_RENDER_AFTER_CLICK_ON_LINK,\n  INPUT_SEARCH,\n  SEARCH_ALBUM,\n} from '../actions';\n\nconst initialState = {\n  inputSearch: '',\n  results: [],\n  render: false,\n};\n\nconst searchAlbum = (state = initialState, action) => {\n  switch (action.type) {\n  case SEARCH_ALBUM:\n    return {\n      ...state,\n      results: action.response,\n      render: false,\n    };\n\n  case INPUT_SEARCH:\n    return {\n      ...state,\n      inputSearch: action.inputValue,\n    };\n\n  case ENABLE_RENDER_AFTER_CLICK_ON_LINK:\n    return {\n      ...state,\n      render: action.boolStringfied,\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport default searchAlbum;\n","import { combineReducers } from 'redux';\nimport responseMusics from './responseMusics';\nimport searchAlbum from './searchAlbum';\n\nconst rootReducer = combineReducers({\n  searchAlbum,\n  responseMusics,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}